var N=null,E="",T="t",U="u",searchIndex={};
var R=["lazy_static","partialord","num_traits","numcast","option","min_value","max_value","infinity","neg_infinity","neg_zero","Returns `-0.0`.","Returns the smallest finite value that this type can…","min_positive_value","Returns the smallest positive, normalized value that this…","Returns epsilon, a small positive value.","Returns the largest finite value that this type can…","is_infinite","is_finite","is_normal","Returns `true` if the number is neither zero, infinite,…","classify","Returns the floating point category of the number. If only…","fpcategory","Returns the largest integer less than or equal to a number.","Returns the smallest integer greater than or equal to a…","Returns the nearest integer to a number. Round half-way…","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of `self`. Returns…","Returns a number that represents the sign of `self`.","is_sign_positive","is_sign_negative","Raise a number to an integer power.","to_degrees","to_radians","Returns the maximum of the two numbers.","Returns the minimum of the two numbers.","integer_decode","Returns the mantissa, base 2 exponent, and sign as…","Shifts the bits to the left by a specified amount amount,…","Shifts the bits to the right by a specified amount amount,…","num_traits::ops","Fused multiply-add. Computes `(self * a) + b` with only…","mul_add","Performs the fused multiply-add operation.","checkedmul","The result after applying the operator.","epsilon","Returns `true` if `self` is positive, including `+0.0`,…","Returns `true` if `self` is negative, including `-0.0`,…","Take the reciprocal (inverse) of a number, `1/x`.","Take the square root of a number.","Returns `e^(self)`, (the exponential function).","Returns `2^(self)`.","Returns the natural logarithm of the number.","Returns the logarithm of the number with respect to an…","Returns the base 2 logarithm of the number.","Returns the base 10 logarithm of the number.","Converts radians to degrees.","Converts degrees to radians.","The positive difference of two numbers.","Take the cubic root of a number.","Calculate the length of the hypotenuse of a right-angle…","Computes the sine of a number (in radians).","Computes the cosine of a number (in radians).","Computes the tangent of a number (in radians).","Computes the arcsine of a number. Return value is in…","Computes the arccosine of a number. Return value is in…","Computes the arctangent of a number. Return value is in…","Computes the four quadrant arctangent of `self` (`y`) and…","Simultaneously computes the sine and cosine of the number,…","Returns `e^(self) - 1` in a way that is accurate even if…","Returns `ln(1+n)` (natural logarithm) more accurately than…","Hyperbolic sine function.","Hyperbolic cosine function.","Hyperbolic tangent function.","Inverse hyperbolic sine function.","Inverse hyperbolic cosine function.","Inverse hyperbolic tangent function.","abs_sub","signed","Computes the absolute value.","signum","Returns the sign of the number.","try_from","try_into","result","borrow_mut","formatter","ParseFloatError","FloatErrorKind","ToPrimitive","FromPrimitive","AsPrimitive","FloatCore","FloatConst","CheckedAdd","CheckedSub","CheckedMul","CheckedDiv","CheckedRem","CheckedNeg","CheckedShl","CheckedShr","MulAddAssign","Saturating","WrappingAdd","WrappingSub","WrappingMul","WrappingShl","WrappingShr","integer","Returns the truncated principal `n`th root of an integer…","Returns the truncated principal square root of an integer…","Returns the truncated principal cube root of an integer --…","div_floor","mod_floor","div_mod_floor","extendedgcd","ExtendedGcd","IterBinomial","to_string","parsecomplexerror","complex","add_assign","sub_assign","mul_assign","div_assign","rem_assign","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…","mul_add_assign","ParseComplexError","clone_into","from_isize","from_i128","from_usize","from_u128","toprimitive","from_str_radix","type_id","into_iter","to_owned","size_hint","next_back","rangeinclusive","rangestep","rangestepinclusive","RangeInclusive","RangeStep","RangeStepInclusive","Creates and initializes a `BigInt`.","Creates and initializes a `BigInt` from an array of bytes…","Creates and initializes a `BigInt`. Each u8 of the input…","Returns the sign and the byte representation of the…","Returns the two's complement byte representation of the…","from_slice","Creates and initializes a `BigUint`.","assign_from_slice","from_bytes_be","biguint","from_bytes_le","parse_bytes","from_radix_be","from_radix_le","Creates and initializes a `BigUint`. Each u8 of the input…","to_bytes_be","to_bytes_le","Returns the byte representation of the `BigUint` in…","to_str_radix","Returns the integer formatted as a string in the given…","to_radix_be","Returns the integer in the requested base in big-endian…","to_radix_le","Returns the integer in the requested base in little-endian…","Determines the fewest bits necessary to express the…","Returns the truncated principal square root of `self` --…","Returns the truncated principal cube root of `self` -- see…","Returns the truncated principal `n`th root of `self` --…","to_biguint","to_bigint","partial_cmp","ordering","parsebiginterror","bitand_assign","bitor_assign","bitxor_assign","shl_assign","shr_assign","nth_root","Calculates the Greatest Common Divisor (GCD) of the number…","Calculates the Lowest Common Multiple (LCM) of the number…","Deprecated, use `is_multiple_of` instead.","is_multiple_of","Returns `true` if the number is a multiple of `other`.","Returns `true` if the number is divisible by `2`.","Returns `true` if the number is not divisible by `2`.","Creates and initializes a BigInt.","checked_sub","checked_add","checked_mul","checked_div","ToBigUint","ParseBigIntError","from_str","description","from_u64","from_i64","from_f64","set_zero","is_positive","is_negative","bigrational","floatcore","parseratioerror","product","from_f32","ParseRatioError","A generic trait for converting a value to a number.","Converts the value of `self` to an `isize`. If the value…","Converts the value of `self` to an `i8`. If the value…","Converts the value of `self` to an `i16`. If the value…","Converts the value of `self` to an `i32`. If the value…","Converts the value of `self` to an `i64`. If the value…","Converts the value of `self` to an `i128`. If the value…","Converts the value of `self` to a `usize`. If the value…","Converts the value of `self` to a `u8`. If the value…","Converts the value of `self` to a `u16`. If the value…","Converts the value of `self` to a `u32`. If the value…","Converts the value of `self` to a `u64`. If the value…","Converts the value of `self` to a `u128`. If the value…","Converts the value of `self` to an `f32`. If the value…","Converts the value of `self` to an `f64`. If the value…","A generic trait for converting a number to a value.","Converts an `isize` to return an optional value of this…","Converts an `i8` to return an optional value of this type.…","Converts an `i16` to return an optional value of this…","Converts an `i32` to return an optional value of this…","Converts an `i64` to return an optional value of this…","Converts an `i128` to return an optional value of this…","Converts a `usize` to return an optional value of this…","Converts an `u8` to return an optional value of this type.…","Converts an `u16` to return an optional value of this…","Converts an `u32` to return an optional value of this…","Converts an `u64` to return an optional value of this…","Converts an `u128` to return an optional value of this…","Converts a `f32` to return an optional value of this type.…","Converts a `f64` to return an optional value of this type.…","An interface for casting between machine scalars.","Creates a number from another value that can be converted…","Cast from one machine scalar to another.","Raises a value to the power of exp, using exponentiation…","checked_pow","Raises a value to the power of exp, returning `None` if an…","A big signed integer type.","A big unsigned integer type.","A complex number in Cartesian form.","Real portion of the complex number","Imaginary portion of the complex number","Floored integer division.","Floored integer modulo, satisfying:","Ceiled integer division.","Greatest Common Divisor (GCD).","Lowest Common Multiple (LCM).","Greatest Common Divisor (GCD) and Lowest Common Multiple…","extended_gcd","Greatest common divisor and Bézout coefficients.","extended_gcd_lcm","Greatest common divisor, least common multiple, and Bézout…","Returns `true` if `self` is a multiple of `other`.","Returns `true` if the number is even.","Returns `true` if the number is odd.","Simultaneous truncated integer division and modulus.…","Simultaneous floored integer division and modulus. Returns…","next_multiple_of","Rounds up to nearest multiple of argument.","prev_multiple_of","Rounds down to nearest multiple of argument.","div_ceil","Returns an iterator over the given range [start, stop)…","range_inclusive","Return an iterator over the range [start, stop]","range_step","Return an iterator over the range [start, stop) by `step`.…","range_step_inclusive","Return an iterator over the range [start, stop] by `step`.…","Numbers which have upper and lower bounds","returns the smallest finite number this type can represent","returns the largest finite number this type can represent","num::traits","to_isize","to_usize","from_i16","from_i32","from_u16","from_u32","A generic interface for casting between machine scalars…","Convert a value to another, using the `as` operator.","Generic trait for floating point numbers","Returns the `NaN` value.","Returns the infinite value.","Returns the negative infinite value.","Returns `true` if this value is `NaN` and false otherwise.","Returns `true` if this value is positive infinity or…","Returns `true` if this number is neither infinite nor `NaN`.","Raise a number to a floating point power.","Defines an additive identity element for `Self`.","Returns the additive identity element of `Self`, `0`. #…","Sets `self` to the additive identity element of `Self`, `0`.","Returns `true` if `self` is equal to the additive identity.","Defines a multiplicative identity element for `Self`.","Returns the multiplicative identity element of `Self`, `1`.","Sets `self` to the multiplicative identity element of…","Returns `true` if `self` is equal to the multiplicative…","Returns the additive identity, `0`.","Returns the multiplicative identity, `1`.","Generic trait for primitive integers.","count_ones","Returns the number of ones in the binary representation of…","count_zeros","Returns the number of zeros in the binary representation…","leading_zeros","Returns the number of leading zeros in the binary…","trailing_zeros","Returns the number of trailing zeros in the binary…","rotate_left","rotate_right","signed_shl","signed_shr","unsigned_shl","unsigned_shr","swap_bytes","Reverses the byte order of the integer.","Convert an integer from big endian to the target's…","Convert an integer from little endian to the target's…","Convert `self` to big endian from the target's endianness.","Convert `self` to little endian from the target's…","Raises self to the power of `exp`, using exponentiation by…","Performs addition that returns `None` instead of wrapping…","Adds two numbers, checking for overflow. If overflow…","Performs subtraction that returns `None` instead of…","Subtracts two numbers, checking for underflow. If…","Performs multiplication that returns `None` instead of…","Multiplies two numbers, checking for underflow or…","Performs division that returns `None` instead of panicking…","Divides two numbers, checking for underflow, overflow and…","num::traits::ops","Saturating math operations","saturating_add","Saturating addition operator. Returns a+b, saturating at…","saturating_sub","Saturating subtraction operator. Returns a-b, saturating…","Binary operator for raising a value to a power.","Returns `self` to the power `rhs`.","Useful functions for signed numbers (i.e. numbers that can…","Returns true if the number is positive and false if the…","Returns true if the number is negative and false if the…","A trait for values which cannot be negative","The base trait for numeric types, covering `0` and `1`…","FromStrRadixErr","Convert from a string and radix <= 36.","A value bounded by a minimum and a maximum","Alias for a `Ratio` of machine-sized integers.","BigRational","Alias for arbitrary precision rationals.","num::bigint","num::complex","num::integer","num::iter","num::rational","to_u128","to_i128","set_one","is_zero","A Sign is a `BigInt`'s composing element.","from_biguint","Reinitializes a `BigInt`.","from_signed_bytes_be","from_signed_bytes_le","to_signed_bytes_be","to_signed_bytes_le","Returns the sign of the `BigInt` as a `Sign`.","Converts this `BigInt` into a `BigUint`, if it's not…","Returns `(self ^ exponent) mod modulus`","Assign a value to a `BigUint`.","Creates and initializes a `BigUint`. The input slice must…","Returns `(self ^ exponent) % modulus`.","A generic trait for converting a value to a `BigUint`.","Converts the value of `self` to a `BigUint`.","ToBigInt","A generic trait for converting a value to a `BigInt`. This…","Converts the value of `self` to a `BigInt`.","Negate Sign value.","div_rem","divides","is_even","Complex32","Complex64","Create a new Complex","Returns imaginary unit","Returns the square of the norm (since `T` doesn't…","Multiplies `self` by the scalar `t`.","Divides `self` by the scalar `t`.","Raises `self` to an unsigned integer power.","Returns the complex conjugate. i.e. `re - i im`","Returns `1/self`","Raises `self` to a signed integer power.","Returns the L1 norm `|re| + |im|` -- the [Manhattan…","Calculate |self|","Calculate the principal Arg of self.","Convert to polar form (r, theta), such that `self = r *…","from_polar","Convert a polar representation into a complex number.","Computes `e^(self)`, where `e` is the base of the natural…","Computes the principal value of natural logarithm of `self`.","Computes the principal value of the square root of `self`.","Computes the principal value of the cube root of `self`.","Raises `self` to a floating point power.","Returns the logarithm of `self` with respect to an…","Raises `self` to a complex power.","Raises a floating point number to the complex power `self`.","Computes the sine of `self`.","Computes the cosine of `self`.","Computes the tangent of `self`.","Computes the principal value of the inverse sine of `self`.","Computes the principal value of the inverse cosine of…","Computes the principal value of the inverse tangent of…","Computes the hyperbolic sine of `self`.","Computes the hyperbolic cosine of `self`.","Computes the hyperbolic tangent of `self`.","Computes the principal value of inverse hyperbolic sine of…","Computes the principal value of inverse hyperbolic cosine…","Computes the principal value of inverse hyperbolic tangent…","Returns `1/self` using floating-point operations.","Returns `self/other` using floating-point operations.","Checks if the given complex number is NaN","Checks if the given complex number is infinite","Checks if the given complex number is finite","Checks if the given complex number is normal","default","Greatest common divisor and Bézout coefficients","An iterator over binomial coefficients.","Simultaneous integer division and modulus","Floored integer division","Floored integer modulus","Simultaneous floored integer division and modulus","Ceiled integer division","Calculates the Greatest Common Divisor (GCD) and Lowest…","Calculate the binomial coefficient.","multinomial","Calculate the multinomial coefficient.","Provides methods to compute an integer's square root, cube…","For a given n, iterate over all binomial coefficients…","iterbinomial","An iterator over the range [start, stop)","An iterator over the range [start, stop]","An iterator over the range [start, stop) by `step`. It…","An iterator over the range [start, stop] by `step`. It…","Represents the ratio between two numbers.","Rational","Rational32","Alias for a `Ratio` of 32-bit-sized integers.","Rational64","Alias for a `Ratio` of 64-bit-sized integers.","Creates a new `Ratio`. Fails if `denom` is zero.","from_integer","Creates a `Ratio` representing the integer `t`.","Creates a `Ratio` without checking for `denom == 0` or…","to_integer","Converts to an integer, rounding towards zero.","Gets an immutable reference to the numerator.","Gets an immutable reference to the denominator.","is_integer","Returns true if the rational number is an integer…","Returns a reduced copy of self.","Returns the reciprocal.","Rounds towards minus infinity.","Rounds towards plus infinity.","Rounds to the nearest integer. Rounds half-way cases away…","Rounds towards zero.","Returns the fractional part of a number, with division…","Raises the `Ratio` to the power of an exponent.","from_float","Converts a float into a rational number.","approximate_float","Renders as `numer/denom`. If denom=1, renders as numer.","Parses `numer/denom` or just `numer`.","Parses `numer/denom` where the numbers are in base `radix`.","clamp_min","A value bounded by a minimum value","clamp_max","A value bounded by a maximum value","from_i8","from_u8","Generic trait for floating point numbers that works with…","Returns positive infinity.","Returns negative infinity.","Returns NaN.","Returns `true` if the number is NaN.","Returns `true` if the number is infinite.","Returns `true` if the number is neither infinite or NaN.","Returns `true` if `self` is positive, including `+0.0` and…","Returns `true` if `self` is negative, including `-0.0` and…","Returns the reciprocal (multiplicative inverse) of the…","Converts to degrees, assuming the number is in radians.","Converts to radians, assuming the number is in degrees.","Return Euler’s number.","FRAC_1_PI","Return `1.0 / π`.","FRAC_1_SQRT_2","Return `1.0 / sqrt(2.0)`.","FRAC_2_PI","Return `2.0 / π`.","FRAC_2_SQRT_PI","Return `2.0 / sqrt(π)`.","FRAC_PI_2","Return `π / 2.0`.","FRAC_PI_3","Return `π / 3.0`.","FRAC_PI_4","Return `π / 4.0`.","FRAC_PI_6","Return `π / 6.0`.","FRAC_PI_8","Return `π / 8.0`.","Return `ln(10.0)`.","Return `ln(2.0)`.","Return `log10(e)`.","Return `log2(e)`.","Return Archimedes’ constant.","Return `sqrt(2.0)`.","identities","Performs an integral remainder that returns `None` instead…","checked_rem","Finds the remainder of dividing two numbers, checking for…","Performs negation that returns `None` if the result can't…","checked_neg","Negates a number, returning `None` for results that can't…","Performs a left shift that returns `None` on shifts larger…","checked_shl","Checked shift left. Computes `self << rhs`, returning…","Performs a right shift that returns `None` on shifts…","checked_shr","Checked shift right. Computes `self >> rhs`, returning…","Unary operator for retrieving the multiplicative inverse,…","Returns the multiplicative inverse of `self`.","The resulting type after applying the fused multiply-add.","The fused multiply-add assignment operation.","saturating","Performs addition that wraps around on overflow.","wrapping_add","Wrapping (modular) addition. Computes `self + other`,…","Performs subtraction that wraps around on overflow.","wrapping_sub","Wrapping (modular) subtraction. Computes `self - other`,…","Performs multiplication that wraps around on overflow.","wrapping_mul","Wrapping (modular) multiplication. Computes `self *…","Performs a left shift that does not panic.","wrapping_shl","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…","Performs a right shift that does not panic.","wrapping_shr","Panic-free bitwise shift-right; yields `self >>…","A trait for real number types that do not necessarily have…","Raise a number to a real number power.","Unsigned","The trait for types implementing basic numeric operations","The trait for `Num` types which also implement numeric…","The trait for references which implement numeric…","NumAssignOps","The trait for types implementing numeric assignment…","NumAssign","The trait for `Num` types which also implement assignment…","NumAssignRef","The trait for `NumAssign` types which also implement…","NumCast","tfsdataframe","tfs::dataframe","tfs::numerical","tfs::tfsdataframe","datavector","DataValue","DataVector","DataFrame","TfsDataFrame","NumericalVec"];
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","i":[[5,"initialize",R[0],"Takes a shared reference to a lazy static and initializes…",N,[[[T]]]],[8,"LazyStatic",E,"Support trait for enabling a few common operation on lazy…",N,N],[14,R[0],E,E,N,N]],"p":[]};
searchIndex["num"]={"doc":"A collection of numeric types and traits for Rust.","i":[[3,"BigInt","num",R[253],N,N],[3,"BigUint",E,R[254],N,N],[3,"Complex",E,R[255],N,N],[12,"re",E,R[256],0,N],[12,"im",E,R[257],0,N],[6,R[458],E,R[361],N,N],[6,R[362],E,R[363],N,N],[8,"Integer",E,E,N,N],[10,R[115],E,R[258],1,[[["self"]],["self"]]],[10,R[116],E,R[259],1,[[["self"]],["self"]]],[11,R[277],E,R[260],1,[[["self"]],["self"]]],[10,"gcd",E,R[261],1,[[["self"]],["self"]]],[10,"lcm",E,R[262],1,[[["self"]],["self"]]],[11,"gcd_lcm",E,R[263],1,[[["self"]]]],[11,R[264],E,R[265],1,[[["self"]],[R[118]]]],[11,R[266],E,R[267],1,[[["self"]]]],[10,R[393],E,R[191],1,[[["self"]],["bool"]]],[10,R[192],E,R[268],1,[[["self"]],["bool"]]],[10,R[394],E,R[269],1,[[["self"]],["bool"]]],[10,"is_odd",E,R[270],1,[[["self"]],["bool"]]],[10,R[392],E,R[271],1,[[["self"]]]],[11,R[117],E,R[272],1,[[["self"]]]],[11,R[273],E,R[274],1,[[["self"]],["self"]]],[11,R[275],E,R[276],1,[[["self"]],["self"]]],[5,"range",E,R[278],N,[[["a"]],["range"]]],[5,R[279],E,R[280],N,[[["a"]],[R[144]]]],[5,R[281],E,R[282],N,[[["a"]],[R[145]]]],[5,R[283],E,R[284],N,[[["a"]],[R[146]]]],[8,"Num",E,R[357],N,N],[16,R[358],E,E,2,N],[10,R[138],E,R[359],2,[[["u32"],["str"]],[R[86]]]],[8,"Zero",E,R[305],N,N],[10,"zero",E,R[306],3,[[],["self"]]],[11,R[208],E,R[307],3,[[["self"]]]],[10,R[372],E,R[308],3,[[["self"]],["bool"]]],[8,"One",E,R[309],N,N],[10,"one",E,R[310],4,[[],["self"]]],[11,R[371],E,R[311],4,[[["self"]]]],[11,"is_one",E,R[312],4,[[["self"]],["bool"]]],[8,"Signed",E,R[353],N,N],[10,"abs",E,R[81],5,[[["self"]],["self"]]],[10,R[79],E,R[60],5,[[["self"]],["self"]]],[10,R[82],E,R[83],5,[[["self"]],["self"]]],[10,R[209],E,R[354],5,[[["self"]],["bool"]]],[10,R[210],E,R[355],5,[[["self"]],["bool"]]],[8,R[565],E,R[356],N,N],[8,"Bounded",E,R[285],N,N],[10,R[5],E,R[286],6,[[],["self"]]],[10,R[6],E,R[287],6,[[],["self"]]],[5,"one",E,R[314],N,[[],[T]]],[5,"zero",E,R[313],N,[[],[T]]],[5,"abs",E,R[81],N,[[[T]],[T]]],[5,R[79],E,R[60],N,[[[T]],[T]]],[5,R[82],E,R[83],N,[[[T]],[T]]],[8,R[105],E,R[346],N,N],[10,R[347],E,R[348],7,[[],["self"]]],[10,R[349],E,R[350],7,[[],["self"]]],[8,R[96],E,R[337],N,N],[10,R[198],E,R[338],8,[[["self"]],[R[4]]]],[8,R[97],E,R[339],N,N],[10,R[197],E,R[340],9,[[["self"]],[R[4]]]],[8,R[98],E,R[341],N,N],[10,R[199],E,R[342],10,[[["self"]],[R[4]]]],[8,R[99],E,R[343],N,N],[10,R[200],E,R[344],11,[[["self"]],[R[4]]]],[8,"PrimInt",E,R[315],N,N],[10,R[316],E,R[317],12,[[],["u32"]]],[10,R[318],E,R[319],12,[[],["u32"]]],[10,R[320],E,R[321],12,[[],["u32"]]],[10,R[322],E,R[323],12,[[],["u32"]]],[10,R[324],E,R[39],12,[[["u32"]],["self"]]],[10,R[325],E,R[40],12,[[["u32"]],["self"]]],[10,R[326],E,R[39],12,[[["u32"]],["self"]]],[10,R[327],E,R[40],12,[[["u32"]],["self"]]],[10,R[328],E,R[39],12,[[["u32"]],["self"]]],[10,R[329],E,R[40],12,[[["u32"]],["self"]]],[10,R[330],E,R[331],12,[[],["self"]]],[10,"from_be",E,R[332],12,[[],["self"]]],[10,"from_le",E,R[333],12,[[],["self"]]],[10,"to_be",E,R[334],12,[[],["self"]]],[10,"to_le",E,R[335],12,[[],["self"]]],[10,"pow",E,R[336],12,[[["u32"]],["self"]]],[8,R[91],E,R[217],N,N],[11,R[289],E,R[218],13,[[["self"]],[[R[4],["isize"]],["isize"]]]],[11,"to_i8",E,R[219],13,[[["self"]],[[R[4],["i8"]],["i8"]]]],[11,"to_i16",E,R[220],13,[[["self"]],[[R[4],["i16"]],["i16"]]]],[11,"to_i32",E,R[221],13,[[["self"]],[[R[4],["i32"]],["i32"]]]],[10,"to_i64",E,R[222],13,[[["self"]],[[R[4],["i64"]],["i64"]]]],[11,R[370],E,R[223],13,[[["self"]],[["i128"],[R[4],["i128"]]]]],[11,R[290],E,R[224],13,[[["self"]],[["usize"],[R[4],["usize"]]]]],[11,"to_u8",E,R[225],13,[[["self"]],[[R[4],["u8"]],["u8"]]]],[11,"to_u16",E,R[226],13,[[["self"]],[[R[4],["u16"]],["u16"]]]],[11,"to_u32",E,R[227],13,[[["self"]],[[R[4],["u32"]],["u32"]]]],[10,"to_u64",E,R[228],13,[[["self"]],[[R[4],["u64"]],["u64"]]]],[11,R[369],E,R[229],13,[[["self"]],[[R[4],["u128"]],["u128"]]]],[11,"to_f32",E,R[230],13,[[["self"]],[["f32"],[R[4],["f32"]]]]],[11,"to_f64",E,R[231],13,[[["self"]],[[R[4],["f64"]],["f64"]]]],[8,R[92],E,R[232],N,N],[11,R[133],E,R[233],14,[[["isize"]],[R[4]]]],[11,R[491],E,R[234],14,[[["i8"]],[R[4]]]],[11,R[291],E,R[235],14,[[["i16"]],[R[4]]]],[11,R[292],E,R[236],14,[[["i32"]],[R[4]]]],[10,R[206],E,R[237],14,[[["i64"]],[R[4]]]],[11,R[134],E,R[238],14,[[["i128"]],[R[4]]]],[11,R[135],E,R[239],14,[[["usize"]],[R[4]]]],[11,R[492],E,R[240],14,[[["u8"]],[R[4]]]],[11,R[293],E,R[241],14,[[["u16"]],[R[4]]]],[11,R[294],E,R[242],14,[[["u32"]],[R[4]]]],[10,R[205],E,R[243],14,[[["u64"]],[R[4]]]],[11,R[136],E,R[244],14,[[["u128"]],[R[4]]]],[11,R[215],E,R[245],14,[[["f32"]],[R[4]]]],[11,R[207],E,R[246],14,[[["f64"]],[R[4]]]],[8,R[575],E,R[247],N,N],[10,"from",E,R[248],15,[[[T]],[R[4]]]],[0,"cast",E,E,N,N],[8,R[91],"num::cast",R[217],N,N],[11,R[289],E,R[218],13,[[["self"]],[[R[4],["isize"]],["isize"]]]],[11,"to_i8",E,R[219],13,[[["self"]],[[R[4],["i8"]],["i8"]]]],[11,"to_i16",E,R[220],13,[[["self"]],[[R[4],["i16"]],["i16"]]]],[11,"to_i32",E,R[221],13,[[["self"]],[[R[4],["i32"]],["i32"]]]],[10,"to_i64",E,R[222],13,[[["self"]],[[R[4],["i64"]],["i64"]]]],[11,R[370],E,R[223],13,[[["self"]],[["i128"],[R[4],["i128"]]]]],[11,R[290],E,R[224],13,[[["self"]],[["usize"],[R[4],["usize"]]]]],[11,"to_u8",E,R[225],13,[[["self"]],[[R[4],["u8"]],["u8"]]]],[11,"to_u16",E,R[226],13,[[["self"]],[[R[4],["u16"]],["u16"]]]],[11,"to_u32",E,R[227],13,[[["self"]],[[R[4],["u32"]],["u32"]]]],[10,"to_u64",E,R[228],13,[[["self"]],[[R[4],["u64"]],["u64"]]]],[11,R[369],E,R[229],13,[[["self"]],[[R[4],["u128"]],["u128"]]]],[11,"to_f32",E,R[230],13,[[["self"]],[["f32"],[R[4],["f32"]]]]],[11,"to_f64",E,R[231],13,[[["self"]],[[R[4],["f64"]],["f64"]]]],[8,R[92],E,R[232],N,N],[11,R[133],E,R[233],14,[[["isize"]],[R[4]]]],[11,R[491],E,R[234],14,[[["i8"]],[R[4]]]],[11,R[291],E,R[235],14,[[["i16"]],[R[4]]]],[11,R[292],E,R[236],14,[[["i32"]],[R[4]]]],[10,R[206],E,R[237],14,[[["i64"]],[R[4]]]],[11,R[134],E,R[238],14,[[["i128"]],[R[4]]]],[11,R[135],E,R[239],14,[[["usize"]],[R[4]]]],[11,R[492],E,R[240],14,[[["u8"]],[R[4]]]],[11,R[293],E,R[241],14,[[["u16"]],[R[4]]]],[11,R[294],E,R[242],14,[[["u32"]],[R[4]]]],[10,R[205],E,R[243],14,[[["u64"]],[R[4]]]],[11,R[136],E,R[244],14,[[["u128"]],[R[4]]]],[11,R[215],E,R[245],14,[[["f32"]],[R[4]]]],[11,R[207],E,R[246],14,[[["f64"]],[R[4]]]],[5,"cast",E,R[249],N,[[[T]],[R[4]]]],[8,R[575],E,R[247],N,N],[10,"from",E,R[248],15,[[[T]],[R[4]]]],[8,R[93],E,R[295],N,N],[10,"as_",E,R[296],16,[[],[T]]],[5,"cast","num",R[249],N,[[[T]],[R[4]]]],[0,"pow",E,E,N,N],[8,"Pow","num::pow",R[351],N,N],[16,"Output",E,R[46],17,N],[10,"pow",E,R[352],17,[[["rhs"]]]],[5,"pow",E,R[250],N,[[[T],["usize"]],[T]]],[5,R[251],E,R[252],N,[[[T],["usize"]],[R[4]]]],[5,"pow","num",R[250],N,[[[T],["usize"]],[T]]],[5,R[251],E,R[252],N,[[[T],["usize"]],[R[4]]]],[5,"clamp",E,R[360],N,[[[T]],[T]]],[8,"Float",E,R[297],N,N],[10,"nan",E,R[298],18,[[],["self"]]],[10,R[7],E,R[299],18,[[],["self"]]],[10,R[8],E,R[300],18,[[],["self"]]],[10,R[9],E,R[10],18,[[],["self"]]],[10,R[5],E,R[11],18,[[],["self"]]],[10,R[12],E,R[13],18,[[],["self"]]],[11,R[47],E,R[14],18,[[],["self"]]],[10,R[6],E,R[15],18,[[],["self"]]],[10,"is_nan",E,R[301],18,[[],["bool"]]],[10,R[16],E,R[302],18,[[],["bool"]]],[10,R[17],E,R[303],18,[[],["bool"]]],[10,R[18],E,R[19],18,[[],["bool"]]],[10,R[20],E,R[21],18,[[],[R[22]]]],[10,"floor",E,R[23],18,[[],["self"]]],[10,"ceil",E,R[24],18,[[],["self"]]],[10,"round",E,R[25],18,[[],["self"]]],[10,"trunc",E,R[26],18,[[],["self"]]],[10,"fract",E,R[27],18,[[],["self"]]],[10,"abs",E,R[28],18,[[],["self"]]],[10,R[82],E,R[29],18,[[],["self"]]],[10,R[30],E,R[48],18,[[],["bool"]]],[10,R[31],E,R[49],18,[[],["bool"]]],[10,R[43],E,R[42],18,[[],["self"]]],[10,"recip",E,R[50],18,[[],["self"]]],[10,"powi",E,R[32],18,[[["i32"]],["self"]]],[10,"powf",E,R[304],18,[[],["self"]]],[10,"sqrt",E,R[51],18,[[],["self"]]],[10,"exp",E,R[52],18,[[],["self"]]],[10,"exp2",E,R[53],18,[[],["self"]]],[10,"ln",E,R[54],18,[[],["self"]]],[10,"log",E,R[55],18,[[],["self"]]],[10,"log2",E,R[56],18,[[],["self"]]],[10,"log10",E,R[57],18,[[],["self"]]],[11,R[33],E,R[58],18,[[],["self"]]],[11,R[34],E,R[59],18,[[],["self"]]],[10,"max",E,R[35],18,[[],["self"]]],[10,"min",E,R[36],18,[[],["self"]]],[10,R[79],E,R[60],18,[[],["self"]]],[10,"cbrt",E,R[61],18,[[],["self"]]],[10,"hypot",E,R[62],18,[[],["self"]]],[10,"sin",E,R[63],18,[[],["self"]]],[10,"cos",E,R[64],18,[[],["self"]]],[10,"tan",E,R[65],18,[[],["self"]]],[10,"asin",E,R[66],18,[[],["self"]]],[10,"acos",E,R[67],18,[[],["self"]]],[10,"atan",E,R[68],18,[[],["self"]]],[10,"atan2",E,R[69],18,[[],["self"]]],[10,"sin_cos",E,R[70],18,[[]]],[10,"exp_m1",E,R[71],18,[[],["self"]]],[10,"ln_1p",E,R[72],18,[[],["self"]]],[10,"sinh",E,R[73],18,[[],["self"]]],[10,"cosh",E,R[74],18,[[],["self"]]],[10,"tanh",E,R[75],18,[[],["self"]]],[10,"asinh",E,R[76],18,[[],["self"]]],[10,"acosh",E,R[77],18,[[],["self"]]],[10,"atanh",E,R[78],18,[[],["self"]]],[10,R[37],E,R[38],18,[[]]],[0,"bigint",E,E,N,N],[3,R[202],R[364],E,N,N],[4,"Sign",E,R[373],N,N],[13,"Minus",E,E,19,N],[13,"NoSign",E,E,19,N],[13,"Plus",E,E,19,N],[3,"BigInt",E,R[253],N,N],[8,R[388],E,R[389],N,N],[10,R[179],E,R[390],20,[[["self"]],[["bigint"],[R[4],["bigint"]]]]],[3,"BigUint",E,R[254],N,N],[8,R[201],E,R[386],N,N],[10,R[178],E,R[387],21,[[["self"]],[[R[4],[R[159]]],[R[159]]]]],[0,R[123],"num",E,N,N],[3,"Complex",R[365],R[255],N,N],[12,"re",E,R[256],0,N],[12,"im",E,R[257],0,N],[6,R[395],E,E,N,N],[6,R[396],E,E,N,N],[3,R[131],E,E,N,N],[0,R[111],"num",E,N,N],[8,"Integer",R[366],E,N,N],[10,R[115],E,R[258],1,[[["self"]],["self"]]],[10,R[116],E,R[259],1,[[["self"]],["self"]]],[11,R[277],E,R[260],1,[[["self"]],["self"]]],[10,"gcd",E,R[261],1,[[["self"]],["self"]]],[10,"lcm",E,R[262],1,[[["self"]],["self"]]],[11,"gcd_lcm",E,R[263],1,[[["self"]]]],[11,R[264],E,R[265],1,[[["self"]],[R[118]]]],[11,R[266],E,R[267],1,[[["self"]]]],[10,R[393],E,R[191],1,[[["self"]],["bool"]]],[10,R[192],E,R[268],1,[[["self"]],["bool"]]],[10,R[394],E,R[269],1,[[["self"]],["bool"]]],[10,"is_odd",E,R[270],1,[[["self"]],["bool"]]],[10,R[392],E,R[271],1,[[["self"]]]],[11,R[117],E,R[272],1,[[["self"]]]],[11,R[273],E,R[274],1,[[["self"]],["self"]]],[11,R[275],E,R[276],1,[[["self"]],["self"]]],[3,R[119],E,R[439],N,N],[12,"gcd",E,E,22,N],[12,"x",E,E,22,N],[12,"y",E,E,22,N],[5,R[392],E,R[441],N,[[[T]]]],[5,R[115],E,R[442],N,[[[T]],[T]]],[5,R[116],E,R[443],N,[[[T]],[T]]],[5,R[117],E,R[444],N,[[[T]]]],[5,R[277],E,R[445],N,[[[T]],[T]]],[5,"gcd",E,R[189],N,[[[T]],[T]]],[5,"lcm",E,R[190],N,[[[T]],[T]]],[5,"gcd_lcm",E,R[446],N,[[[T]]]],[3,R[120],E,R[440],N,N],[5,"binomial",E,R[447],N,[[[T]],[T]]],[5,R[448],E,R[449],N,[[],[T]]],[8,"Roots",E,R[450],N,N],[10,R[188],E,R[112],23,[[["self"],["u32"]],["self"]]],[11,"sqrt",E,R[113],23,[[["self"]],["self"]]],[11,"cbrt",E,R[114],23,[[["self"]],["self"]]],[5,"cbrt",E,R[114],N,[[[T]],[T]]],[5,"sqrt",E,R[113],N,[[[T]],[T]]],[5,R[188],E,R[112],N,[[["u32"],[T]],[T]]],[0,"iter","num",E,N,N],[3,"Range",R[367],R[453],N,N],[5,"range",E,R[278],N,[[["a"]],["range"]]],[3,R[147],E,R[454],N,N],[5,R[279],E,R[280],N,[[["a"]],[R[144]]]],[3,R[148],E,R[455],N,N],[5,R[281],E,R[282],N,[[["a"]],[R[145]]]],[3,R[149],E,R[456],N,N],[5,R[283],E,R[284],N,[[["a"]],[R[146]]]],[0,"traits","num",E,N,N],[0,"bounds",R[288],E,N,N],[8,"Bounded","num::traits::bounds",R[285],N,N],[10,R[5],E,R[286],6,[[],["self"]]],[10,R[6],E,R[287],6,[[],["self"]]],[0,"cast",R[288],E,N,N],[8,R[91],"num::traits::cast",R[217],N,N],[11,R[289],E,R[218],13,[[["self"]],[[R[4],["isize"]],["isize"]]]],[11,"to_i8",E,R[219],13,[[["self"]],[[R[4],["i8"]],["i8"]]]],[11,"to_i16",E,R[220],13,[[["self"]],[[R[4],["i16"]],["i16"]]]],[11,"to_i32",E,R[221],13,[[["self"]],[[R[4],["i32"]],["i32"]]]],[10,"to_i64",E,R[222],13,[[["self"]],[[R[4],["i64"]],["i64"]]]],[11,R[370],E,R[223],13,[[["self"]],[["i128"],[R[4],["i128"]]]]],[11,R[290],E,R[224],13,[[["self"]],[["usize"],[R[4],["usize"]]]]],[11,"to_u8",E,R[225],13,[[["self"]],[[R[4],["u8"]],["u8"]]]],[11,"to_u16",E,R[226],13,[[["self"]],[[R[4],["u16"]],["u16"]]]],[11,"to_u32",E,R[227],13,[[["self"]],[[R[4],["u32"]],["u32"]]]],[10,"to_u64",E,R[228],13,[[["self"]],[[R[4],["u64"]],["u64"]]]],[11,R[369],E,R[229],13,[[["self"]],[[R[4],["u128"]],["u128"]]]],[11,"to_f32",E,R[230],13,[[["self"]],[["f32"],[R[4],["f32"]]]]],[11,"to_f64",E,R[231],13,[[["self"]],[[R[4],["f64"]],["f64"]]]],[8,R[92],E,R[232],N,N],[11,R[133],E,R[233],14,[[["isize"]],[R[4]]]],[11,R[491],E,R[234],14,[[["i8"]],[R[4]]]],[11,R[291],E,R[235],14,[[["i16"]],[R[4]]]],[11,R[292],E,R[236],14,[[["i32"]],[R[4]]]],[10,R[206],E,R[237],14,[[["i64"]],[R[4]]]],[11,R[134],E,R[238],14,[[["i128"]],[R[4]]]],[11,R[135],E,R[239],14,[[["usize"]],[R[4]]]],[11,R[492],E,R[240],14,[[["u8"]],[R[4]]]],[11,R[293],E,R[241],14,[[["u16"]],[R[4]]]],[11,R[294],E,R[242],14,[[["u32"]],[R[4]]]],[10,R[205],E,R[243],14,[[["u64"]],[R[4]]]],[11,R[136],E,R[244],14,[[["u128"]],[R[4]]]],[11,R[215],E,R[245],14,[[["f32"]],[R[4]]]],[11,R[207],E,R[246],14,[[["f64"]],[R[4]]]],[5,"cast",E,R[249],N,[[[T]],[R[4]]]],[8,R[575],E,R[247],N,N],[10,"from",E,R[248],15,[[[T]],[R[4]]]],[8,R[93],E,R[295],N,N],[10,"as_",E,R[296],16,[[],[T]]],[0,"float",R[288],E,N,N],[8,R[94],"num::traits::float",R[493],N,N],[10,R[7],E,R[494],24,[[],["self"]]],[10,R[8],E,R[495],24,[[],["self"]]],[10,"nan",E,R[496],24,[[],["self"]]],[10,R[9],E,R[10],24,[[],["self"]]],[10,R[5],E,R[11],24,[[],["self"]]],[10,R[12],E,R[13],24,[[],["self"]]],[10,R[47],E,R[14],24,[[],["self"]]],[10,R[6],E,R[15],24,[[],["self"]]],[11,"is_nan",E,R[497],24,[[],["bool"]]],[11,R[16],E,R[498],24,[[],["bool"]]],[11,R[17],E,R[499],24,[[],["bool"]]],[11,R[18],E,R[19],24,[[],["bool"]]],[10,R[20],E,R[21],24,[[],[R[22]]]],[11,"floor",E,R[23],24,[[],["self"]]],[11,"ceil",E,R[24],24,[[],["self"]]],[11,"round",E,R[25],24,[[],["self"]]],[11,"trunc",E,R[26],24,[[],["self"]]],[11,"fract",E,R[27],24,[[],["self"]]],[11,"abs",E,R[28],24,[[],["self"]]],[11,R[82],E,R[29],24,[[],["self"]]],[11,R[30],E,R[500],24,[[],["bool"]]],[11,R[31],E,R[501],24,[[],["bool"]]],[11,"min",E,R[36],24,[[],["self"]]],[11,"max",E,R[35],24,[[],["self"]]],[11,"recip",E,R[502],24,[[],["self"]]],[11,"powi",E,R[32],24,[[["i32"]],["self"]]],[10,R[33],E,R[503],24,[[],["self"]]],[10,R[34],E,R[504],24,[[],["self"]]],[10,R[37],E,R[38],24,[[]]],[8,"Float",E,R[297],N,N],[10,"nan",E,R[298],18,[[],["self"]]],[10,R[7],E,R[299],18,[[],["self"]]],[10,R[8],E,R[300],18,[[],["self"]]],[10,R[9],E,R[10],18,[[],["self"]]],[10,R[5],E,R[11],18,[[],["self"]]],[10,R[12],E,R[13],18,[[],["self"]]],[11,R[47],E,R[14],18,[[],["self"]]],[10,R[6],E,R[15],18,[[],["self"]]],[10,"is_nan",E,R[301],18,[[],["bool"]]],[10,R[16],E,R[302],18,[[],["bool"]]],[10,R[17],E,R[303],18,[[],["bool"]]],[10,R[18],E,R[19],18,[[],["bool"]]],[10,R[20],E,R[21],18,[[],[R[22]]]],[10,"floor",E,R[23],18,[[],["self"]]],[10,"ceil",E,R[24],18,[[],["self"]]],[10,"round",E,R[25],18,[[],["self"]]],[10,"trunc",E,R[26],18,[[],["self"]]],[10,"fract",E,R[27],18,[[],["self"]]],[10,"abs",E,R[28],18,[[],["self"]]],[10,R[82],E,R[29],18,[[],["self"]]],[10,R[30],E,R[48],18,[[],["bool"]]],[10,R[31],E,R[49],18,[[],["bool"]]],[10,R[43],E,R[42],18,[[],["self"]]],[10,"recip",E,R[50],18,[[],["self"]]],[10,"powi",E,R[32],18,[[["i32"]],["self"]]],[10,"powf",E,R[304],18,[[],["self"]]],[10,"sqrt",E,R[51],18,[[],["self"]]],[10,"exp",E,R[52],18,[[],["self"]]],[10,"exp2",E,R[53],18,[[],["self"]]],[10,"ln",E,R[54],18,[[],["self"]]],[10,"log",E,R[55],18,[[],["self"]]],[10,"log2",E,R[56],18,[[],["self"]]],[10,"log10",E,R[57],18,[[],["self"]]],[11,R[33],E,R[58],18,[[],["self"]]],[11,R[34],E,R[59],18,[[],["self"]]],[10,"max",E,R[35],18,[[],["self"]]],[10,"min",E,R[36],18,[[],["self"]]],[10,R[79],E,R[60],18,[[],["self"]]],[10,"cbrt",E,R[61],18,[[],["self"]]],[10,"hypot",E,R[62],18,[[],["self"]]],[10,"sin",E,R[63],18,[[],["self"]]],[10,"cos",E,R[64],18,[[],["self"]]],[10,"tan",E,R[65],18,[[],["self"]]],[10,"asin",E,R[66],18,[[],["self"]]],[10,"acos",E,R[67],18,[[],["self"]]],[10,"atan",E,R[68],18,[[],["self"]]],[10,"atan2",E,R[69],18,[[],["self"]]],[10,"sin_cos",E,R[70],18,[[]]],[10,"exp_m1",E,R[71],18,[[],["self"]]],[10,"ln_1p",E,R[72],18,[[],["self"]]],[10,"sinh",E,R[73],18,[[],["self"]]],[10,"cosh",E,R[74],18,[[],["self"]]],[10,"tanh",E,R[75],18,[[],["self"]]],[10,"asinh",E,R[76],18,[[],["self"]]],[10,"acosh",E,R[77],18,[[],["self"]]],[10,"atanh",E,R[78],18,[[],["self"]]],[10,R[37],E,R[38],18,[[]]],[8,R[95],E,E,N,N],[10,"E",E,R[505],25,[[],["self"]]],[10,R[506],E,R[507],25,[[],["self"]]],[10,R[508],E,R[509],25,[[],["self"]]],[10,R[510],E,R[511],25,[[],["self"]]],[10,R[512],E,R[513],25,[[],["self"]]],[10,R[514],E,R[515],25,[[],["self"]]],[10,R[516],E,R[517],25,[[],["self"]]],[10,R[518],E,R[519],25,[[],["self"]]],[10,R[520],E,R[521],25,[[],["self"]]],[10,R[522],E,R[523],25,[[],["self"]]],[10,"LN_10",E,R[524],25,[[],["self"]]],[10,"LN_2",E,R[525],25,[[],["self"]]],[10,"LOG10_E",E,R[526],25,[[],["self"]]],[10,"LOG2_E",E,R[527],25,[[],["self"]]],[10,"PI",E,R[528],25,[[],["self"]]],[10,"SQRT_2",E,R[529],25,[[],["self"]]],[0,R[530],R[288],E,N,N],[8,"Zero","num::traits::identities",R[305],N,N],[10,"zero",E,R[306],3,[[],["self"]]],[11,R[208],E,R[307],3,[[["self"]]]],[10,R[372],E,R[308],3,[[["self"]],["bool"]]],[8,"One",E,R[309],N,N],[10,"one",E,R[310],4,[[],["self"]]],[11,R[371],E,R[311],4,[[["self"]]]],[11,"is_one",E,R[312],4,[[["self"]],["bool"]]],[5,"zero",E,R[313],N,[[],[T]]],[5,"one",E,R[314],N,[[],[T]]],[0,"int",R[288],E,N,N],[8,"PrimInt","num::traits::int",R[315],N,N],[10,R[316],E,R[317],12,[[],["u32"]]],[10,R[318],E,R[319],12,[[],["u32"]]],[10,R[320],E,R[321],12,[[],["u32"]]],[10,R[322],E,R[323],12,[[],["u32"]]],[10,R[324],E,R[39],12,[[["u32"]],["self"]]],[10,R[325],E,R[40],12,[[["u32"]],["self"]]],[10,R[326],E,R[39],12,[[["u32"]],["self"]]],[10,R[327],E,R[40],12,[[["u32"]],["self"]]],[10,R[328],E,R[39],12,[[["u32"]],["self"]]],[10,R[329],E,R[40],12,[[["u32"]],["self"]]],[10,R[330],E,R[331],12,[[],["self"]]],[10,"from_be",E,R[332],12,[[],["self"]]],[10,"from_le",E,R[333],12,[[],["self"]]],[10,"to_be",E,R[334],12,[[],["self"]]],[10,"to_le",E,R[335],12,[[],["self"]]],[10,"pow",E,R[336],12,[[["u32"]],["self"]]],[0,"ops",R[288],E,N,N],[0,"checked",R[345],E,N,N],[8,R[96],"num::traits::ops::checked",R[337],N,N],[10,R[198],E,R[338],8,[[["self"]],[R[4]]]],[8,R[97],E,R[339],N,N],[10,R[197],E,R[340],9,[[["self"]],[R[4]]]],[8,R[98],E,R[341],N,N],[10,R[199],E,R[342],10,[[["self"]],[R[4]]]],[8,R[99],E,R[343],N,N],[10,R[200],E,R[344],11,[[["self"]],[R[4]]]],[8,R[100],E,R[531],N,N],[10,R[532],E,R[533],26,[[["self"]],[R[4]]]],[8,R[101],E,R[534],N,N],[10,R[535],E,R[536],27,[[["self"]],[R[4]]]],[8,R[102],E,R[537],N,N],[10,R[538],E,R[539],28,[[["self"],["u32"]],[R[4]]]],[8,R[103],E,R[540],N,N],[10,R[541],E,R[542],29,[[["self"],["u32"]],[R[4]]]],[0,"inv",R[345],E,N,N],[8,"Inv","num::traits::ops::inv",R[543],N,N],[16,"Output",E,R[46],30,N],[10,"inv",E,R[544],30,[[]]],[0,R[43],R[345],E,N,N],[8,"MulAdd","num::traits::ops::mul_add",R[42],N,N],[16,"Output",E,R[545],31,N],[10,R[43],E,R[44],31,[[["a"],["b"]]]],[8,R[104],E,R[546],N,N],[10,R[130],E,R[44],32,[[["self"],["a"],["b"]]]],[0,R[547],R[345],E,N,N],[8,R[105],"num::traits::ops::saturating",R[346],N,N],[10,R[347],E,R[348],7,[[],["self"]]],[10,R[349],E,R[350],7,[[],["self"]]],[0,"wrapping",R[345],E,N,N],[8,R[106],"num::traits::ops::wrapping",R[548],N,N],[10,R[549],E,R[550],33,[[["self"]],["self"]]],[8,R[107],E,R[551],N,N],[10,R[552],E,R[553],34,[[["self"]],["self"]]],[8,R[108],E,R[554],N,N],[10,R[555],E,R[556],35,[[["self"]],["self"]]],[8,R[109],E,R[557],N,N],[10,R[558],E,R[559],36,[[["self"],["u32"]],["self"]]],[8,R[110],E,R[560],N,N],[10,R[561],E,R[562],37,[[["self"],["u32"]],["self"]]],[0,"pow",R[288],E,N,N],[8,"Pow","num::traits::pow",R[351],N,N],[16,"Output",E,R[46],17,N],[10,"pow",E,R[352],17,[[["rhs"]]]],[5,"pow",E,R[250],N,[[[T],["usize"]],[T]]],[5,R[251],E,R[252],N,[[[T],["usize"]],[R[4]]]],[0,"real",R[288],E,N,N],[8,"Real","num::traits::real",R[563],N,N],[10,R[5],E,R[11],38,[[],["self"]]],[10,R[12],E,R[13],38,[[],["self"]]],[10,R[47],E,R[14],38,[[],["self"]]],[10,R[6],E,R[15],38,[[],["self"]]],[10,"floor",E,R[23],38,[[],["self"]]],[10,"ceil",E,R[24],38,[[],["self"]]],[10,"round",E,R[25],38,[[],["self"]]],[10,"trunc",E,R[26],38,[[],["self"]]],[10,"fract",E,R[27],38,[[],["self"]]],[10,"abs",E,R[28],38,[[],["self"]]],[10,R[82],E,R[29],38,[[],["self"]]],[10,R[30],E,R[48],38,[[],["bool"]]],[10,R[31],E,R[49],38,[[],["bool"]]],[10,R[43],E,R[42],38,[[],["self"]]],[10,"recip",E,R[50],38,[[],["self"]]],[10,"powi",E,R[32],38,[[["i32"]],["self"]]],[10,"powf",E,R[564],38,[[],["self"]]],[10,"sqrt",E,R[51],38,[[],["self"]]],[10,"exp",E,R[52],38,[[],["self"]]],[10,"exp2",E,R[53],38,[[],["self"]]],[10,"ln",E,R[54],38,[[],["self"]]],[10,"log",E,R[55],38,[[],["self"]]],[10,"log2",E,R[56],38,[[],["self"]]],[10,"log10",E,R[57],38,[[],["self"]]],[10,R[33],E,R[58],38,[[],["self"]]],[10,R[34],E,R[59],38,[[],["self"]]],[10,"max",E,R[35],38,[[],["self"]]],[10,"min",E,R[36],38,[[],["self"]]],[10,R[79],E,R[60],38,[[],["self"]]],[10,"cbrt",E,R[61],38,[[],["self"]]],[10,"hypot",E,R[62],38,[[],["self"]]],[10,"sin",E,R[63],38,[[],["self"]]],[10,"cos",E,R[64],38,[[],["self"]]],[10,"tan",E,R[65],38,[[],["self"]]],[10,"asin",E,R[66],38,[[],["self"]]],[10,"acos",E,R[67],38,[[],["self"]]],[10,"atan",E,R[68],38,[[],["self"]]],[10,"atan2",E,R[69],38,[[],["self"]]],[10,"sin_cos",E,R[70],38,[[]]],[10,"exp_m1",E,R[71],38,[[],["self"]]],[10,"ln_1p",E,R[72],38,[[],["self"]]],[10,"sinh",E,R[73],38,[[],["self"]]],[10,"cosh",E,R[74],38,[[],["self"]]],[10,"tanh",E,R[75],38,[[],["self"]]],[10,"asinh",E,R[76],38,[[],["self"]]],[10,"acosh",E,R[77],38,[[],["self"]]],[10,"atanh",E,R[78],38,[[],["self"]]],[0,"sign",R[288],E,N,N],[8,"Signed","num::traits::sign",R[353],N,N],[10,"abs",E,R[81],5,[[["self"]],["self"]]],[10,R[79],E,R[60],5,[[["self"]],["self"]]],[10,R[82],E,R[83],5,[[["self"]],["self"]]],[10,R[209],E,R[354],5,[[["self"]],["bool"]]],[10,R[210],E,R[355],5,[[["self"]],["bool"]]],[5,"abs",E,R[81],N,[[[T]],[T]]],[5,R[79],E,R[60],N,[[[T]],[T]]],[5,R[82],E,R[83],N,[[[T]],[T]]],[8,R[565],E,R[356],N,N],[8,"Num",R[288],R[357],N,N],[16,R[358],E,E,2,N],[10,R[138],E,R[359],2,[[["u32"],["str"]],[R[86]]]],[8,"NumOps",E,R[566],N,N],[8,"NumRef",E,R[567],N,N],[8,"RefNum",E,R[568],N,N],[8,R[569],E,R[570],N,N],[8,R[571],E,R[572],N,N],[8,R[573],E,R[574],N,N],[4,R[90],E,E,N,N],[13,"Empty",E,E,39,N],[13,"Invalid",E,E,39,N],[3,R[89],E,E,N,N],[12,"kind",E,E,40,N],[5,"clamp",E,R[360],N,[[[T]],[T]]],[5,R[487],E,R[488],N,[[[T]],[T]]],[5,R[489],E,R[490],N,[[[T]],[T]]],[0,"rational","num",E,N,N],[3,"Ratio",R[368],R[457],N,N],[6,R[458],E,R[361],N,N],[6,R[459],E,R[460],N,N],[6,R[461],E,R[462],N,N],[6,R[362],E,R[363],N,N],[3,R[216],E,E,N,N],[11,"from",R[364],E,41,[[[T]],[T]]],[11,R[84],E,E,41,[[[U]],[R[86]]]],[11,"into",E,E,41,[[],[U]]],[11,R[85],E,E,41,[[],[R[86]]]],[11,"borrow",E,E,41,[[["self"]],[T]]],[11,R[87],E,E,41,[[["self"]],[T]]],[11,R[139],E,E,41,[[["self"]],["typeid"]]],[11,R[141],E,E,41,[[["self"]],[T]]],[11,R[132],E,E,41,[[["self"],[T]]]],[11,R[121],E,E,41,[[["self"]],["string"]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[84],E,E,42,[[[U]],[R[86]]]],[11,"into",E,E,42,[[],[U]]],[11,R[85],E,E,42,[[],[R[86]]]],[11,"borrow",E,E,42,[[["self"]],[T]]],[11,R[87],E,E,42,[[["self"]],[T]]],[11,R[139],E,E,42,[[["self"]],["typeid"]]],[11,R[141],E,E,42,[[["self"]],[T]]],[11,R[132],E,E,42,[[["self"],[T]]]],[11,R[121],E,E,42,[[["self"]],["string"]]],[11,"from",R[365],E,0,[[[T]],[T]]],[11,R[84],E,E,0,[[[U]],[R[86]]]],[11,"into",E,E,0,[[],[U]]],[11,R[85],E,E,0,[[],[R[86]]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[87],E,E,0,[[["self"]],[T]]],[11,R[139],E,E,0,[[["self"]],["typeid"]]],[11,R[141],E,E,0,[[["self"]],[T]]],[11,R[132],E,E,0,[[["self"],[T]]]],[11,R[121],E,E,0,[[["self"]],["string"]]],[11,"from",R[364],E,43,[[[T]],[T]]],[11,R[84],E,E,43,[[[U]],[R[86]]]],[11,"into",E,E,43,[[],[U]]],[11,R[85],E,E,43,[[],[R[86]]]],[11,"borrow",E,E,43,[[["self"]],[T]]],[11,R[87],E,E,43,[[["self"]],[T]]],[11,R[139],E,E,43,[[["self"]],["typeid"]]],[11,R[141],E,E,43,[[["self"]],[T]]],[11,R[132],E,E,43,[[["self"],[T]]]],[11,R[121],E,E,43,[[["self"]],["string"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[84],E,E,19,[[[U]],[R[86]]]],[11,"into",E,E,19,[[],[U]]],[11,R[85],E,E,19,[[],[R[86]]]],[11,"borrow",E,E,19,[[["self"]],[T]]],[11,R[87],E,E,19,[[["self"]],[T]]],[11,R[139],E,E,19,[[["self"]],["typeid"]]],[11,R[141],E,E,19,[[["self"]],[T]]],[11,R[132],E,E,19,[[["self"],[T]]]],[11,"from",R[365],E,44,[[[T]],[T]]],[11,R[84],E,E,44,[[[U]],[R[86]]]],[11,"into",E,E,44,[[],[U]]],[11,R[85],E,E,44,[[],[R[86]]]],[11,"borrow",E,E,44,[[["self"]],[T]]],[11,R[87],E,E,44,[[["self"]],[T]]],[11,R[139],E,E,44,[[["self"]],["typeid"]]],[11,R[121],E,E,44,[[["self"]],["string"]]],[11,"from",R[366],E,22,[[[T]],[T]]],[11,R[84],E,E,22,[[[U]],[R[86]]]],[11,"into",E,E,22,[[],[U]]],[11,R[85],E,E,22,[[],[R[86]]]],[11,"borrow",E,E,22,[[["self"]],[T]]],[11,R[87],E,E,22,[[["self"]],[T]]],[11,R[139],E,E,22,[[["self"]],["typeid"]]],[11,R[141],E,E,22,[[["self"]],[T]]],[11,R[132],E,E,22,[[["self"],[T]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[84],E,E,45,[[[U]],[R[86]]]],[11,"into",E,E,45,[[],[U]]],[11,R[85],E,E,45,[[],[R[86]]]],[11,R[140],E,E,45,[[],["i"]]],[11,"borrow",E,E,45,[[["self"]],[T]]],[11,R[87],E,E,45,[[["self"]],[T]]],[11,R[139],E,E,45,[[["self"]],["typeid"]]],[11,"from",R[367],E,46,[[[T]],[T]]],[11,R[84],E,E,46,[[[U]],[R[86]]]],[11,"into",E,E,46,[[],[U]]],[11,R[85],E,E,46,[[],[R[86]]]],[11,R[140],E,E,46,[[],["i"]]],[11,"borrow",E,E,46,[[["self"]],[T]]],[11,R[87],E,E,46,[[["self"]],[T]]],[11,R[139],E,E,46,[[["self"]],["typeid"]]],[11,R[141],E,E,46,[[["self"]],[T]]],[11,R[132],E,E,46,[[["self"],[T]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[84],E,E,47,[[[U]],[R[86]]]],[11,"into",E,E,47,[[],[U]]],[11,R[85],E,E,47,[[],[R[86]]]],[11,R[140],E,E,47,[[],["i"]]],[11,"borrow",E,E,47,[[["self"]],[T]]],[11,R[87],E,E,47,[[["self"]],[T]]],[11,R[139],E,E,47,[[["self"]],["typeid"]]],[11,R[141],E,E,47,[[["self"]],[T]]],[11,R[132],E,E,47,[[["self"],[T]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[84],E,E,48,[[[U]],[R[86]]]],[11,"into",E,E,48,[[],[U]]],[11,R[85],E,E,48,[[],[R[86]]]],[11,R[140],E,E,48,[[],["i"]]],[11,"borrow",E,E,48,[[["self"]],[T]]],[11,R[87],E,E,48,[[["self"]],[T]]],[11,R[139],E,E,48,[[["self"]],["typeid"]]],[11,R[141],E,E,48,[[["self"]],[T]]],[11,R[132],E,E,48,[[["self"],[T]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[84],E,E,49,[[[U]],[R[86]]]],[11,"into",E,E,49,[[],[U]]],[11,R[85],E,E,49,[[],[R[86]]]],[11,R[140],E,E,49,[[],["i"]]],[11,"borrow",E,E,49,[[["self"]],[T]]],[11,R[87],E,E,49,[[["self"]],[T]]],[11,R[139],E,E,49,[[["self"]],["typeid"]]],[11,R[141],E,E,49,[[["self"]],[T]]],[11,R[132],E,E,49,[[["self"],[T]]]],[11,"from",R[288],E,39,[[[T]],[T]]],[11,R[84],E,E,39,[[[U]],[R[86]]]],[11,"into",E,E,39,[[],[U]]],[11,R[85],E,E,39,[[],[R[86]]]],[11,"borrow",E,E,39,[[["self"]],[T]]],[11,R[87],E,E,39,[[["self"]],[T]]],[11,R[139],E,E,39,[[["self"]],["typeid"]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[84],E,E,40,[[[U]],[R[86]]]],[11,"into",E,E,40,[[],[U]]],[11,R[85],E,E,40,[[],[R[86]]]],[11,"borrow",E,E,40,[[["self"]],[T]]],[11,R[87],E,E,40,[[["self"]],[T]]],[11,R[139],E,E,40,[[["self"]],["typeid"]]],[11,R[121],E,E,40,[[["self"]],["string"]]],[11,"from",R[368],E,50,[[[T]],[T]]],[11,R[84],E,E,50,[[[U]],[R[86]]]],[11,"into",E,E,50,[[],[U]]],[11,R[85],E,E,50,[[],[R[86]]]],[11,"borrow",E,E,50,[[["self"]],[T]]],[11,R[87],E,E,50,[[["self"]],[T]]],[11,R[139],E,E,50,[[["self"]],["typeid"]]],[11,R[141],E,E,50,[[["self"]],[T]]],[11,R[132],E,E,50,[[["self"],[T]]]],[11,R[121],E,E,50,[[["self"]],["string"]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[84],E,E,51,[[[U]],[R[86]]]],[11,"into",E,E,51,[[],[U]]],[11,R[85],E,E,51,[[],[R[86]]]],[11,"borrow",E,E,51,[[["self"]],[T]]],[11,R[87],E,E,51,[[["self"]],[T]]],[11,R[139],E,E,51,[[["self"]],["typeid"]]],[11,R[141],E,E,51,[[["self"]],[T]]],[11,R[132],E,E,51,[[["self"],[T]]]],[11,R[121],E,E,51,[[["self"]],["string"]]],[11,R[200],R[364],E,41,[[["self"],["bigint"]],[["bigint"],[R[4],["bigint"]]]]],[11,R[200],E,E,42,[[["self"],[R[159]]],[[R[4],[R[159]]],[R[159]]]]],[11,"bitxor",E,E,41,[[["bigint"]],["bigint"]]],[11,"bitxor",E,E,41,[[["bigint"]],["bigint"]]],[11,"bitxor",E,E,42,[[[R[159]]],[R[159]]]],[11,"bitxor",E,E,42,[[[R[159]]],[R[159]]]],[11,"fmt",E,E,43,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"fmt",E,E,42,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"fmt",E,E,41,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"not",E,E,41,[[],["bigint"]]],[11,"shl",E,E,42,[[["usize"]],[R[159]]]],[11,"shl",E,E,41,[[["usize"]],["bigint"]]],[11,R[183],E,E,41,[[["self"],["bigint"]]]],[11,R[183],E,E,42,[[["self"],[R[159]]]]],[11,R[183],E,E,42,[[["self"],[R[159]]]]],[11,R[183],E,E,41,[[["self"],["bigint"]]]],[11,R[128],E,E,41,[[["self"],["usize"]]]],[11,R[128],E,E,41,[[["self"],["u8"]]]],[11,R[128],E,E,41,[[["self"],["isize"]]]],[11,R[128],E,E,41,[[["self"],["u128"]]]],[11,R[128],E,E,42,[[["self"],["u32"]]]],[11,R[128],E,E,41,[[["self"],["bigint"]]]],[11,R[128],E,E,41,[[["self"],["i64"]]]],[11,R[128],E,E,42,[[["self"],["u128"]]]],[11,R[128],E,E,42,[[["self"],[R[159]]]]],[11,R[128],E,E,41,[[["self"],["i16"]]]],[11,R[128],E,E,42,[[["self"],[R[159]]]]],[11,R[128],E,E,42,[[["self"],["u8"]]]],[11,R[128],E,E,41,[[["self"],["u16"]]]],[11,R[128],E,E,41,[[["self"],["i32"]]]],[11,R[128],E,E,41,[[["self"],["bigint"]]]],[11,R[128],E,E,41,[[["self"],["u64"]]]],[11,R[128],E,E,42,[[["self"],["u16"]]]],[11,R[128],E,E,42,[[["self"],["usize"]]]],[11,R[128],E,E,41,[[["self"],["u32"]]]],[11,R[128],E,E,41,[[["self"],["i128"]]]],[11,R[128],E,E,42,[[["self"],["u64"]]]],[11,R[128],E,E,41,[[["self"],["i8"]]]],[11,R[187],E,E,42,[[["self"],["usize"]]]],[11,R[187],E,E,41,[[["self"],["usize"]]]],[11,"add",E,E,41,[[["i16"]],["bigint"]]],[11,"add",E,E,42,[[["usize"]],[R[159]]]],[11,"add",E,E,41,[[["u32"]],["bigint"]]],[11,"add",E,E,42,[[["u128"]],[R[159]]]],[11,"add",E,E,41,[[["u64"]],["bigint"]]],[11,"add",E,E,42,[[[R[159]]],[R[159]]]],[11,"add",E,E,42,[[["u8"]],[R[159]]]],[11,"add",E,E,41,[[["i64"]],["bigint"]]],[11,"add",E,E,41,[[["u128"]],["bigint"]]],[11,"add",E,E,42,[[["u32"]],[R[159]]]],[11,"add",E,E,41,[[["i64"]],["bigint"]]],[11,"add",E,E,41,[[["usize"]],["bigint"]]],[11,"add",E,E,41,[[["isize"]],["bigint"]]],[11,"add",E,E,42,[[["u64"]],[R[159]]]],[11,"add",E,E,42,[[[R[159]]],[R[159]]]],[11,"add",E,E,41,[[["usize"]],["bigint"]]],[11,"add",E,E,41,[[["u16"]],["bigint"]]],[11,"add",E,E,41,[[["i8"]],["bigint"]]],[11,"add",E,E,42,[[["u8"]],[R[159]]]],[11,"add",E,E,41,[[["u8"]],["bigint"]]],[11,"add",E,E,41,[[["u32"]],["bigint"]]],[11,"add",E,E,41,[[["i16"]],["bigint"]]],[11,"add",E,E,42,[[["usize"]],[R[159]]]],[11,"add",E,E,41,[[["u64"]],["bigint"]]],[11,"add",E,E,41,[[["i32"]],["bigint"]]],[11,"add",E,E,41,[[["i128"]],["bigint"]]],[11,"add",E,E,42,[[["u128"]],[R[159]]]],[11,"add",E,E,41,[[["u8"]],["bigint"]]],[11,"add",E,E,41,[[["u128"]],["bigint"]]],[11,"add",E,E,41,[[["u16"]],["bigint"]]],[11,"add",E,E,42,[[["u16"]],[R[159]]]],[11,"add",E,E,41,[[["bigint"]],["bigint"]]],[11,"add",E,E,42,[[["u64"]],[R[159]]]],[11,"add",E,E,42,[[["u16"]],[R[159]]]],[11,"add",E,E,41,[[["i8"]],["bigint"]]],[11,"add",E,E,41,[[["isize"]],["bigint"]]],[11,"add",E,E,42,[[["u32"]],[R[159]]]],[11,"add",E,E,41,[[["i32"]],["bigint"]]],[11,"add",E,E,41,[[["i128"]],["bigint"]]],[11,"add",E,E,41,[[["bigint"]],["bigint"]]],[11,"zero",E,E,41,[[],["bigint"]]],[11,R[208],E,E,41,[[["self"]]]],[11,R[372],E,E,41,[[["self"]],["bool"]]],[11,"zero",E,E,42,[[],[R[159]]]],[11,R[208],E,E,42,[[["self"]]]],[11,R[372],E,E,42,[[["self"]],["bool"]]],[11,"fmt",E,E,41,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"fmt",E,E,42,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"fmt",E,E,43,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"fmt",E,E,19,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"abs",E,E,41,[[["self"]],["bigint"]]],[11,R[79],E,E,41,[[["self"],["bigint"]],["bigint"]]],[11,R[82],E,E,41,[[["self"]],["bigint"]]],[11,R[209],E,E,41,[[["self"]],["bool"]]],[11,R[210],E,E,41,[[["self"]],["bool"]]],[11,R[188],E,E,42,[[["self"],["u32"]],[R[159]]]],[11,"sqrt",E,E,42,[[["self"]],[R[159]]]],[11,"cbrt",E,E,42,[[["self"]],[R[159]]]],[11,R[188],E,E,41,[[["self"],["u32"]],["bigint"]]],[11,"sqrt",E,E,41,[[["self"]],["bigint"]]],[11,"cbrt",E,E,41,[[["self"]],["bigint"]]],[11,"clone",E,E,42,[[["self"]],[R[159]]]],[11,"clone",E,E,19,[[["self"]],["sign"]]],[11,"clone",E,E,41,[[["self"]],["bigint"]]],[11,"clone",E,E,43,[[["self"]],[R[182]]]],[11,"sub",E,E,41,[[["i64"]],["bigint"]]],[11,"sub",E,E,41,[[["i8"]],["bigint"]]],[11,"sub",E,E,41,[[["i16"]],["bigint"]]],[11,"sub",E,E,41,[[["u32"]],["bigint"]]],[11,"sub",E,E,41,[[["usize"]],["bigint"]]],[11,"sub",E,E,42,[[["u16"]],[R[159]]]],[11,"sub",E,E,41,[[["u128"]],["bigint"]]],[11,"sub",E,E,41,[[["i32"]],["bigint"]]],[11,"sub",E,E,42,[[["usize"]],[R[159]]]],[11,"sub",E,E,41,[[["bigint"]],["bigint"]]],[11,"sub",E,E,41,[[["i32"]],["bigint"]]],[11,"sub",E,E,41,[[["u128"]],["bigint"]]],[11,"sub",E,E,42,[[["usize"]],[R[159]]]],[11,"sub",E,E,41,[[["usize"]],["bigint"]]],[11,"sub",E,E,42,[[["u64"]],[R[159]]]],[11,"sub",E,E,41,[[["bigint"]],["bigint"]]],[11,"sub",E,E,42,[[[R[159]]],[R[159]]]],[11,"sub",E,E,41,[[["u16"]],["bigint"]]],[11,"sub",E,E,41,[[["i64"]],["bigint"]]],[11,"sub",E,E,41,[[["i128"]],["bigint"]]],[11,"sub",E,E,42,[[["u16"]],[R[159]]]],[11,"sub",E,E,41,[[["u16"]],["bigint"]]],[11,"sub",E,E,41,[[["u32"]],["bigint"]]],[11,"sub",E,E,41,[[["u64"]],["bigint"]]],[11,"sub",E,E,42,[[["u128"]],[R[159]]]],[11,"sub",E,E,42,[[["u32"]],[R[159]]]],[11,"sub",E,E,42,[[["u32"]],[R[159]]]],[11,"sub",E,E,41,[[["i128"]],["bigint"]]],[11,"sub",E,E,41,[[["isize"]],["bigint"]]],[11,"sub",E,E,42,[[["u8"]],[R[159]]]],[11,"sub",E,E,42,[[[R[159]]],[R[159]]]],[11,"sub",E,E,41,[[["u8"]],["bigint"]]],[11,"sub",E,E,42,[[["u8"]],[R[159]]]],[11,"sub",E,E,41,[[["u8"]],["bigint"]]],[11,"sub",E,E,41,[[["isize"]],["bigint"]]],[11,"sub",E,E,41,[[["i8"]],["bigint"]]],[11,"sub",E,E,42,[[["u128"]],[R[159]]]],[11,"sub",E,E,41,[[["u64"]],["bigint"]]],[11,"sub",E,E,42,[[["u64"]],[R[159]]]],[11,"sub",E,E,41,[[["i16"]],["bigint"]]],[11,"fmt",E,E,42,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"fmt",E,E,41,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,R[178],E,E,41,[[["self"]],[[R[4],[R[159]]],[R[159]]]]],[11,R[178],E,E,42,[[["self"]],[[R[4],[R[159]]],[R[159]]]]],[11,R[124],E,E,42,[[["self"],[R[159]]]]],[11,R[124],E,E,42,[[["self"],["u8"]]]],[11,R[124],E,E,41,[[["self"],["i8"]]]],[11,R[124],E,E,41,[[["self"],["i32"]]]],[11,R[124],E,E,41,[[["self"],["u16"]]]],[11,R[124],E,E,41,[[["self"],["u32"]]]],[11,R[124],E,E,41,[[["self"],["usize"]]]],[11,R[124],E,E,41,[[["self"],["u64"]]]],[11,R[124],E,E,41,[[["self"],["bigint"]]]],[11,R[124],E,E,41,[[["self"],["i128"]]]],[11,R[124],E,E,41,[[["self"],["isize"]]]],[11,R[124],E,E,41,[[["self"],["i64"]]]],[11,R[124],E,E,42,[[["self"],["u64"]]]],[11,R[124],E,E,41,[[["self"],["bigint"]]]],[11,R[124],E,E,41,[[["self"],["u128"]]]],[11,R[124],E,E,42,[[["self"],["u16"]]]],[11,R[124],E,E,41,[[["self"],["u8"]]]],[11,R[124],E,E,42,[[["self"],[R[159]]]]],[11,R[124],E,E,42,[[["self"],["usize"]]]],[11,R[124],E,E,42,[[["self"],["u32"]]]],[11,R[124],E,E,41,[[["self"],["i16"]]]],[11,R[124],E,E,42,[[["self"],["u128"]]]],[11,"cmp",E,E,41,[[["self"],["bigint"]],[R[181]]]],[11,"cmp",E,E,19,[[["self"],["sign"]],[R[181]]]],[11,"cmp",E,E,42,[[["self"],[R[159]]],[R[181]]]],[11,"neg",E,R[391],19,[[],["sign"]]],[11,"neg",E,E,42,[[],[R[159]]]],[11,"neg",E,E,41,[[],["bigint"]]],[11,R[392],E,E,42,[[["self"],[R[159]]]]],[11,R[115],E,E,42,[[["self"],[R[159]]],[R[159]]]],[11,R[116],E,E,42,[[["self"],[R[159]]],[R[159]]]],[11,R[117],E,E,42,[[["self"],[R[159]]]]],[11,"gcd",E,R[189],42,[[["self"],[R[159]]],[R[159]]]],[11,"lcm",E,R[190],42,[[["self"],[R[159]]],[R[159]]]],[11,R[393],E,R[191],42,[[["self"],[R[159]]],["bool"]]],[11,R[192],E,R[193],42,[[["self"],[R[159]]],["bool"]]],[11,R[394],E,R[194],42,[[["self"]],["bool"]]],[11,"is_odd",E,R[195],42,[[["self"]],["bool"]]],[11,R[392],E,E,41,[[["self"],["bigint"]]]],[11,R[115],E,E,41,[[["self"],["bigint"]],["bigint"]]],[11,R[116],E,E,41,[[["self"],["bigint"]],["bigint"]]],[11,R[117],E,E,41,[[["self"],["bigint"]]]],[11,"gcd",E,R[189],41,[[["self"],["bigint"]],["bigint"]]],[11,"lcm",E,R[190],41,[[["self"],["bigint"]],["bigint"]]],[11,R[393],E,R[191],41,[[["self"],["bigint"]],["bool"]]],[11,R[192],E,R[193],41,[[["self"],["bigint"]],["bool"]]],[11,R[394],E,R[194],41,[[["self"]],["bool"]]],[11,"is_odd",E,R[195],41,[[["self"]],["bool"]]],[11,R[138],E,R[156],42,[[["u32"],["str"]],[[R[182]],[R[86],[R[159],R[182]]],[R[159]]]]],[11,R[138],E,R[196],41,[[["u32"],["str"]],[["bigint"],[R[86],["bigint",R[182]]],[R[182]]]]],[11,R[199],E,E,41,[[["self"],["bigint"]],[["bigint"],[R[4],["bigint"]]]]],[11,R[199],E,E,42,[[["self"],[R[159]]],[[R[4],[R[159]]],[R[159]]]]],[11,R[197],E,E,42,[[["self"],[R[159]]],[[R[4],[R[159]]],[R[159]]]]],[11,R[197],E,E,41,[[["self"],["bigint"]],[["bigint"],[R[4],["bigint"]]]]],[11,"fmt",E,E,42,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"fmt",E,E,41,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"bitand",E,E,42,[[[R[159]]],[R[159]]]],[11,"bitand",E,E,41,[[["bigint"]],["bigint"]]],[11,"bitand",E,E,42,[[[R[159]]],[R[159]]]],[11,"bitand",E,E,41,[[["bigint"]],["bigint"]]],[11,"shr",E,E,42,[[["usize"]],[R[159]]]],[11,"shr",E,E,41,[[["usize"]],["bigint"]]],[11,R[185],E,E,42,[[["self"],[R[159]]]]],[11,R[185],E,E,42,[[["self"],[R[159]]]]],[11,R[185],E,E,41,[[["self"],["bigint"]]]],[11,R[185],E,E,41,[[["self"],["bigint"]]]],[11,"to_i64",E,E,41,[[["self"]],[[R[4],["i64"]],["i64"]]]],[11,R[370],E,E,41,[[["self"]],[["i128"],[R[4],["i128"]]]]],[11,"to_u64",E,E,41,[[["self"]],[[R[4],["u64"]],["u64"]]]],[11,R[369],E,E,41,[[["self"]],[[R[4],["u128"]],["u128"]]]],[11,"to_f32",E,E,41,[[["self"]],[["f32"],[R[4],["f32"]]]]],[11,"to_f64",E,E,41,[[["self"]],[[R[4],["f64"]],["f64"]]]],[11,"to_i64",E,E,42,[[["self"]],[[R[4],["i64"]],["i64"]]]],[11,R[370],E,E,42,[[["self"]],[["i128"],[R[4],["i128"]]]]],[11,"to_u64",E,E,42,[[["self"]],[[R[4],["u64"]],["u64"]]]],[11,R[369],E,E,42,[[["self"]],[[R[4],["u128"]],["u128"]]]],[11,"to_f32",E,E,42,[[["self"]],[["f32"],[R[4],["f32"]]]]],[11,"to_f64",E,E,42,[[["self"]],[[R[4],["f64"]],["f64"]]]],[11,R[184],E,E,41,[[["self"],["bigint"]]]],[11,R[184],E,E,42,[[["self"],[R[159]]]]],[11,R[184],E,E,42,[[["self"],[R[159]]]]],[11,R[184],E,E,41,[[["self"],["bigint"]]]],[11,R[204],E,E,43,[[["self"]],["str"]]],[11,"one",E,E,42,[[],[R[159]]]],[11,R[371],E,E,42,[[["self"]]]],[11,"is_one",E,E,42,[[["self"]],["bool"]]],[11,"one",E,E,41,[[],["bigint"]]],[11,R[371],E,E,41,[[["self"]]]],[11,"is_one",E,E,41,[[["self"]],["bool"]]],[11,R[125],E,E,41,[[["self"],["i32"]]]],[11,R[125],E,E,41,[[["self"],["i8"]]]],[11,R[125],E,E,42,[[["self"],["u64"]]]],[11,R[125],E,E,41,[[["self"],["u128"]]]],[11,R[125],E,E,41,[[["self"],["bigint"]]]],[11,R[125],E,E,42,[[["self"],["u8"]]]],[11,R[125],E,E,41,[[["self"],["u32"]]]],[11,R[125],E,E,41,[[["self"],["u8"]]]],[11,R[125],E,E,41,[[["self"],["i16"]]]],[11,R[125],E,E,42,[[["self"],["u32"]]]],[11,R[125],E,E,42,[[["self"],[R[159]]]]],[11,R[125],E,E,42,[[["self"],[R[159]]]]],[11,R[125],E,E,42,[[["self"],["usize"]]]],[11,R[125],E,E,41,[[["self"],["i128"]]]],[11,R[125],E,E,41,[[["self"],["u64"]]]],[11,R[125],E,E,42,[[["self"],["u128"]]]],[11,R[125],E,E,41,[[["self"],["bigint"]]]],[11,R[125],E,E,42,[[["self"],["u16"]]]],[11,R[125],E,E,41,[[["self"],["isize"]]]],[11,R[125],E,E,41,[[["self"],["usize"]]]],[11,R[125],E,E,41,[[["self"],["u16"]]]],[11,R[125],E,E,41,[[["self"],["i64"]]]],[11,R[214],E,E,42,[[["i"]],[R[159]]]],[11,R[214],E,E,41,[[["i"]],["bigint"]]],[11,"bitor",E,E,41,[[["bigint"]],["bigint"]]],[11,"bitor",E,E,41,[[["bigint"]],["bigint"]]],[11,"bitor",E,E,42,[[[R[159]]],[R[159]]]],[11,"bitor",E,E,42,[[[R[159]]],[R[159]]]],[11,"sum",E,E,42,[[["i"]],[R[159]]]],[11,"sum",E,E,41,[[["i"]],["bigint"]]],[11,"fmt",E,E,42,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"fmt",E,E,41,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"fmt",E,E,41,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"fmt",E,E,42,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"rem",E,E,41,[[["i16"]],["bigint"]]],[11,"rem",E,E,41,[[["u32"]],["bigint"]]],[11,"rem",E,E,41,[[["u16"]],["bigint"]]],[11,"rem",E,E,42,[[["u64"]],[R[159]]]],[11,"rem",E,E,41,[[["u128"]],["bigint"]]],[11,"rem",E,E,41,[[["u64"]],["bigint"]]],[11,"rem",E,E,41,[[["u8"]],["bigint"]]],[11,"rem",E,E,42,[[["u8"]],[R[159]]]],[11,"rem",E,E,41,[[["u128"]],["bigint"]]],[11,"rem",E,E,42,[[[R[159]]],[R[159]]]],[11,"rem",E,E,41,[[["isize"]],["bigint"]]],[11,"rem",E,E,42,[[["u32"]],[R[159]]]],[11,"rem",E,E,41,[[["usize"]],["bigint"]]],[11,"rem",E,E,42,[[["u16"]],[R[159]]]],[11,"rem",E,E,41,[[["i32"]],["bigint"]]],[11,"rem",E,E,41,[[["i128"]],["bigint"]]],[11,"rem",E,E,42,[[["u64"]],[R[159]]]],[11,"rem",E,E,42,[[["usize"]],[R[159]]]],[11,"rem",E,E,41,[[["i64"]],["bigint"]]],[11,"rem",E,E,42,[[[R[159]]],[R[159]]]],[11,"rem",E,E,41,[[["isize"]],["bigint"]]],[11,"rem",E,E,41,[[["i8"]],["bigint"]]],[11,"rem",E,E,41,[[["u32"]],["bigint"]]],[11,"rem",E,E,42,[[["u128"]],[R[159]]]],[11,"rem",E,E,41,[[["u64"]],["bigint"]]],[11,"rem",E,E,41,[[["bigint"]],["bigint"]]],[11,"rem",E,E,41,[[["u8"]],["bigint"]]],[11,"rem",E,E,41,[[["i64"]],["bigint"]]],[11,"rem",E,E,41,[[["bigint"]],["bigint"]]],[11,"rem",E,E,41,[[["i16"]],["bigint"]]],[11,"rem",E,E,42,[[["u128"]],[R[159]]]],[11,"rem",E,E,41,[[["i128"]],["bigint"]]],[11,"rem",E,E,42,[[["u8"]],[R[159]]]],[11,"rem",E,E,42,[[["u32"]],[R[159]]]],[11,"rem",E,E,41,[[["i8"]],["bigint"]]],[11,"rem",E,E,42,[[["u16"]],[R[159]]]],[11,"rem",E,E,41,[[["u16"]],["bigint"]]],[11,"rem",E,E,42,[[["usize"]],[R[159]]]],[11,"rem",E,E,41,[[["usize"]],["bigint"]]],[11,"rem",E,E,41,[[["i32"]],["bigint"]]],[11,"eq",E,E,41,[[["self"],["bigint"]],["bool"]]],[11,"eq",E,E,43,[[["self"],[R[182]]],["bool"]]],[11,"ne",E,E,43,[[["self"],[R[182]]],["bool"]]],[11,"eq",E,E,42,[[["self"],[R[159]]],["bool"]]],[11,"eq",E,E,19,[[["self"],["sign"]],["bool"]]],[11,"mul",E,E,42,[[["u8"]],[R[159]]]],[11,"mul",E,E,41,[[["i32"]],["bigint"]]],[11,"mul",E,E,41,[[["i16"]],["bigint"]]],[11,"mul",E,E,41,[[["i8"]],["bigint"]]],[11,"mul",E,E,41,[[["u16"]],["bigint"]]],[11,"mul",E,E,42,[[["u128"]],[R[159]]]],[11,"mul",E,E,41,[[["bigint"]],["bigint"]]],[11,"mul",E,E,41,[[["i32"]],["bigint"]]],[11,"mul",E,E,41,[[["i64"]],["bigint"]]],[11,"mul",E,E,41,[[["u32"]],["bigint"]]],[11,"mul",E,E,41,[[["bigint"]],["bigint"]]],[11,"mul",E,E,41,[[["u8"]],["bigint"]]],[11,"mul",E,E,42,[[["u8"]],[R[159]]]],[11,"mul",E,E,42,[[["usize"]],[R[159]]]],[11,"mul",E,E,19,[[["sign"]],["sign"]]],[11,"mul",E,E,42,[[[R[159]]],[R[159]]]],[11,"mul",E,E,41,[[["usize"]],["bigint"]]],[11,"mul",E,E,41,[[["u16"]],["bigint"]]],[11,"mul",E,E,42,[[[R[159]]],[R[159]]]],[11,"mul",E,E,41,[[["i128"]],["bigint"]]],[11,"mul",E,E,41,[[["u128"]],["bigint"]]],[11,"mul",E,E,41,[[["u64"]],["bigint"]]],[11,"mul",E,E,41,[[["u128"]],["bigint"]]],[11,"mul",E,E,42,[[["u16"]],[R[159]]]],[11,"mul",E,E,41,[[["i128"]],["bigint"]]],[11,"mul",E,E,41,[[["u8"]],["bigint"]]],[11,"mul",E,E,42,[[["u16"]],[R[159]]]],[11,"mul",E,E,42,[[["u32"]],[R[159]]]],[11,"mul",E,E,42,[[["u64"]],[R[159]]]],[11,"mul",E,E,41,[[["usize"]],["bigint"]]],[11,"mul",E,E,41,[[["i8"]],["bigint"]]],[11,"mul",E,E,41,[[["i64"]],["bigint"]]],[11,"mul",E,E,41,[[["isize"]],["bigint"]]],[11,"mul",E,E,41,[[["u32"]],["bigint"]]],[11,"mul",E,E,42,[[["usize"]],[R[159]]]],[11,"mul",E,E,41,[[["i16"]],["bigint"]]],[11,"mul",E,E,42,[[["u128"]],[R[159]]]],[11,"mul",E,E,41,[[["u64"]],["bigint"]]],[11,"mul",E,E,42,[[["u64"]],[R[159]]]],[11,"mul",E,E,42,[[["u32"]],[R[159]]]],[11,"mul",E,E,41,[[["isize"]],["bigint"]]],[11,R[180],E,E,19,[[["self"],["sign"]],[[R[181]],[R[4],[R[181]]]]]],[11,R[180],E,E,42,[[["self"],[R[159]]],[[R[181]],[R[4],[R[181]]]]]],[11,R[180],E,E,41,[[["self"],["bigint"]],[[R[181]],[R[4],[R[181]]]]]],[11,"hash",E,E,42,[[["self"],["__h"]]]],[11,"hash",E,E,41,[[["self"],["__h"]]]],[11,"hash",E,E,19,[[["self"],["__h"]]]],[11,R[438],E,E,42,[[],[R[159]]]],[11,R[438],E,E,41,[[],["bigint"]]],[11,R[186],E,E,42,[[["self"],["usize"]]]],[11,R[186],E,E,41,[[["self"],["usize"]]]],[11,R[179],E,E,41,[[["self"]],[["bigint"],[R[4],["bigint"]]]]],[11,R[179],E,E,42,[[["self"]],[["bigint"],[R[4],["bigint"]]]]],[11,"from",E,E,42,[[["u32"]],[R[159]]]],[11,"from",E,E,41,[[["i16"]],["bigint"]]],[11,"from",E,E,41,[[["i32"]],["bigint"]]],[11,"from",E,E,41,[[["u128"]],["bigint"]]],[11,"from",E,E,41,[[["i128"]],["bigint"]]],[11,"from",E,E,42,[[["u8"]],[R[159]]]],[11,"from",E,E,41,[[["u16"]],["bigint"]]],[11,"from",E,E,42,[[["u16"]],[R[159]]]],[11,"from",E,E,42,[[["usize"]],[R[159]]]],[11,"from",E,E,41,[[["u64"]],["bigint"]]],[11,"from",E,E,41,[[["i8"]],["bigint"]]],[11,"from",E,E,41,[[["u32"]],["bigint"]]],[11,"from",E,E,41,[[["isize"]],["bigint"]]],[11,"from",E,E,41,[[["u8"]],["bigint"]]],[11,"from",E,E,42,[[["u64"]],[R[159]]]],[11,"from",E,E,41,[[["i64"]],["bigint"]]],[11,"from",E,E,41,[[[R[159]]],["bigint"]]],[11,"from",E,E,42,[[["u128"]],[R[159]]]],[11,"from",E,E,41,[[["usize"]],["bigint"]]],[11,R[127],E,E,41,[[["self"],["i64"]]]],[11,R[127],E,E,42,[[["self"],[R[159]]]]],[11,R[127],E,E,41,[[["self"],["i16"]]]],[11,R[127],E,E,41,[[["self"],["u32"]]]],[11,R[127],E,E,42,[[["self"],[R[159]]]]],[11,R[127],E,E,42,[[["self"],["usize"]]]],[11,R[127],E,E,41,[[["self"],["i128"]]]],[11,R[127],E,E,41,[[["self"],["u16"]]]],[11,R[127],E,E,42,[[["self"],["u32"]]]],[11,R[127],E,E,42,[[["self"],["u64"]]]],[11,R[127],E,E,41,[[["self"],["usize"]]]],[11,R[127],E,E,41,[[["self"],["bigint"]]]],[11,R[127],E,E,41,[[["self"],["i32"]]]],[11,R[127],E,E,41,[[["self"],["u128"]]]],[11,R[127],E,E,41,[[["self"],["u8"]]]],[11,R[127],E,E,42,[[["self"],["u8"]]]],[11,R[127],E,E,41,[[["self"],["bigint"]]]],[11,R[127],E,E,41,[[["self"],["i8"]]]],[11,R[127],E,E,42,[[["self"],["u16"]]]],[11,R[127],E,E,41,[[["self"],["isize"]]]],[11,R[127],E,E,41,[[["self"],["u64"]]]],[11,R[127],E,E,42,[[["self"],["u128"]]]],[11,R[126],E,E,42,[[["self"],["u128"]]]],[11,R[126],E,E,41,[[["self"],["i8"]]]],[11,R[126],E,E,42,[[["self"],[R[159]]]]],[11,R[126],E,E,42,[[["self"],["u32"]]]],[11,R[126],E,E,41,[[["self"],["u16"]]]],[11,R[126],E,E,41,[[["self"],["i64"]]]],[11,R[126],E,E,41,[[["self"],["i32"]]]],[11,R[126],E,E,41,[[["self"],["i16"]]]],[11,R[126],E,E,41,[[["self"],["usize"]]]],[11,R[126],E,E,41,[[["self"],["u64"]]]],[11,R[126],E,E,41,[[["self"],["bigint"]]]],[11,R[126],E,E,41,[[["self"],["isize"]]]],[11,R[126],E,E,41,[[["self"],["u128"]]]],[11,R[126],E,E,41,[[["self"],["u8"]]]],[11,R[126],E,E,41,[[["self"],["i128"]]]],[11,R[126],E,E,42,[[["self"],["u8"]]]],[11,R[126],E,E,41,[[["self"],["bigint"]]]],[11,R[126],E,E,41,[[["self"],["u32"]]]],[11,R[126],E,E,42,[[["self"],["u16"]]]],[11,R[126],E,E,42,[[["self"],["u64"]]]],[11,R[126],E,E,42,[[["self"],[R[159]]]]],[11,R[126],E,E,42,[[["self"],["usize"]]]],[11,R[198],E,E,41,[[["self"],["bigint"]],[["bigint"],[R[4],["bigint"]]]]],[11,R[198],E,E,42,[[["self"],[R[159]]],[[R[4],[R[159]]],[R[159]]]]],[11,"div",E,E,42,[[["u64"]],[R[159]]]],[11,"div",E,E,41,[[["isize"]],["bigint"]]],[11,"div",E,E,41,[[["u16"]],["bigint"]]],[11,"div",E,E,41,[[["usize"]],["bigint"]]],[11,"div",E,E,41,[[["i16"]],["bigint"]]],[11,"div",E,E,42,[[["usize"]],[R[159]]]],[11,"div",E,E,42,[[["u8"]],[R[159]]]],[11,"div",E,E,41,[[["u64"]],["bigint"]]],[11,"div",E,E,41,[[["u32"]],["bigint"]]],[11,"div",E,E,41,[[["u64"]],["bigint"]]],[11,"div",E,E,42,[[[R[159]]],[R[159]]]],[11,"div",E,E,41,[[["u16"]],["bigint"]]],[11,"div",E,E,41,[[["i8"]],["bigint"]]],[11,"div",E,E,41,[[["i8"]],["bigint"]]],[11,"div",E,E,41,[[["i32"]],["bigint"]]],[11,"div",E,E,41,[[["u128"]],["bigint"]]],[11,"div",E,E,42,[[["u128"]],[R[159]]]],[11,"div",E,E,41,[[["i64"]],["bigint"]]],[11,"div",E,E,41,[[["u32"]],["bigint"]]],[11,"div",E,E,41,[[["u128"]],["bigint"]]],[11,"div",E,E,41,[[["i128"]],["bigint"]]],[11,"div",E,E,41,[[["i64"]],["bigint"]]],[11,"div",E,E,41,[[["u8"]],["bigint"]]],[11,"div",E,E,42,[[["u64"]],[R[159]]]],[11,"div",E,E,42,[[["u8"]],[R[159]]]],[11,"div",E,E,42,[[["u32"]],[R[159]]]],[11,"div",E,E,42,[[[R[159]]],[R[159]]]],[11,"div",E,E,41,[[["bigint"]],["bigint"]]],[11,"div",E,E,41,[[["u8"]],["bigint"]]],[11,"div",E,E,42,[[["u32"]],[R[159]]]],[11,"div",E,E,41,[[["i16"]],["bigint"]]],[11,"div",E,E,42,[[["u128"]],[R[159]]]],[11,"div",E,E,42,[[["u16"]],[R[159]]]],[11,"div",E,E,42,[[["u16"]],[R[159]]]],[11,"div",E,E,41,[[["i128"]],["bigint"]]],[11,"div",E,E,42,[[["usize"]],[R[159]]]],[11,"div",E,E,41,[[["i32"]],["bigint"]]],[11,"div",E,E,41,[[["bigint"]],["bigint"]]],[11,"div",E,E,41,[[["isize"]],["bigint"]]],[11,"div",E,E,41,[[["usize"]],["bigint"]]],[11,R[206],E,E,41,[[["i64"]],[["bigint"],[R[4],["bigint"]]]]],[11,R[134],E,E,41,[[["i128"]],[["bigint"],[R[4],["bigint"]]]]],[11,R[205],E,E,41,[[["u64"]],[["bigint"],[R[4],["bigint"]]]]],[11,R[136],E,E,41,[[["u128"]],[["bigint"],[R[4],["bigint"]]]]],[11,R[207],E,E,41,[[["f64"]],[["bigint"],[R[4],["bigint"]]]]],[11,R[206],E,E,42,[[["i64"]],[[R[4],[R[159]]],[R[159]]]]],[11,R[134],E,E,42,[[["i128"]],[[R[4],[R[159]]],[R[159]]]]],[11,R[205],E,E,42,[[["u64"]],[[R[4],[R[159]]],[R[159]]]]],[11,R[136],E,E,42,[[["u128"]],[[R[4],[R[159]]],[R[159]]]]],[11,R[207],E,E,42,[[["f64"]],[[R[4],[R[159]]],[R[159]]]]],[11,R[203],E,E,41,[[["str"]],[["bigint"],[R[86],["bigint",R[182]]],[R[182]]]]],[11,R[203],E,E,42,[[["str"]],[[R[182]],[R[86],[R[159],R[182]]],[R[159]]]]],[11,"next",R[366],E,45,[[["self"]],[R[4]]]],[11,"eq",E,E,22,[[["self"],[R[118]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[118]]],["bool"]]],[11,"fmt",E,E,22,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"clone",E,E,22,[[["self"]],[R[118]]]],[11,"fmt",R[288],E,40,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"fmt",E,E,40,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"fmt",E,E,39,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"one",R[365],E,0,[[],[R[123]]]],[11,"is_one",E,E,0,[[["self"]],["bool"]]],[11,R[371],E,E,0,[[["self"]]]],[11,"as_",E,E,0,[[],[U]]],[11,"rem",E,E,0,[[[T]]]],[11,"rem",E,E,0,[[[R[123]]]]],[11,"rem",E,E,0,[[[T]]]],[11,"rem",E,E,0,[[[R[123]]]]],[11,"fmt",E,E,0,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,R[203],E,R[129],0,[[["str"]],[[R[123]],[R[86],[R[123]]]]]],[11,"fmt",E,E,0,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,R[130],E,E,0,[[["self"],[R[123]]]]],[11,R[130],E,E,0,[[["self"],[R[123]]]]],[11,"fmt",E,E,0,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,R[135],E,E,0,[[["usize"]],[[R[4],[R[123]]],[R[123]]]]],[11,R[133],E,E,0,[[["isize"]],[[R[4],[R[123]]],[R[123]]]]],[11,R[492],E,E,0,[[["u8"]],[[R[4],[R[123]]],[R[123]]]]],[11,R[293],E,E,0,[[["u16"]],[[R[4],[R[123]]],[R[123]]]]],[11,R[294],E,E,0,[[["u32"]],[[R[4],[R[123]]],[R[123]]]]],[11,R[205],E,E,0,[[["u64"]],[[R[4],[R[123]]],[R[123]]]]],[11,R[491],E,E,0,[[["i8"]],[[R[4],[R[123]]],[R[123]]]]],[11,R[291],E,E,0,[[["i16"]],[[R[4],[R[123]]],[R[123]]]]],[11,R[292],E,E,0,[[["i32"]],[[R[4],[R[123]]],[R[123]]]]],[11,R[206],E,E,0,[[["i64"]],[[R[4],[R[123]]],[R[123]]]]],[11,R[136],E,E,0,[[["u128"]],[[R[4],[R[123]]],[R[123]]]]],[11,R[134],E,E,0,[[["i128"]],[[R[4],[R[123]]],[R[123]]]]],[11,R[215],E,E,0,[[["f32"]],[[R[4],[R[123]]],[R[123]]]]],[11,R[207],E,E,0,[[["f64"]],[[R[4],[R[123]]],[R[123]]]]],[11,"sum",E,E,0,[[["i"]],[R[123]]]],[11,"sum",E,E,0,[[["i"]],[R[123]]]],[11,R[204],E,E,44,[[["self"]],["str"]]],[11,R[214],E,E,0,[[["i"]],[R[123]]]],[11,R[214],E,E,0,[[["i"]],[R[123]]]],[11,"zero",E,E,0,[[],[R[123]]]],[11,R[372],E,E,0,[[["self"]],["bool"]]],[11,R[208],E,E,0,[[["self"]]]],[11,R[125],E,E,0,[[["self"],[R[123]]]]],[11,R[125],E,E,0,[[["self"],[T]]]],[11,R[125],E,E,0,[[["self"],[R[123]]]]],[11,R[125],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[R[123]]]],[11,"from",E,E,0,[[[T]],[R[123]]]],[11,"fmt",E,E,44,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"fmt",E,E,0,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"inv",E,E,0,[[]]],[11,"mul",E,E,0,[[[R[123]]]]],[11,"mul",E,E,0,[[[T]]]],[11,"mul",E,E,0,[[[R[123]]]]],[11,"mul",E,E,0,[[[T]]]],[11,"clone",E,E,0,[[["self"]],[R[123]]]],[11,"fmt",E,E,0,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"eq",E,E,44,[[["self"],[R[122]]],["bool"]]],[11,"ne",E,E,44,[[["self"],[R[122]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[123]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[123]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"fmt",E,E,44,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"pow",E,E,0,[[["f32"]]]],[11,"pow",E,E,0,[[[R[123]]]]],[11,"pow",E,E,0,[[[R[123]]]]],[11,"pow",E,E,0,[[["f64"]]]],[11,"pow",E,E,0,[[["f32"]]]],[11,"pow",E,E,0,[[["f64"]]]],[11,"fmt",E,E,0,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"add",E,E,0,[[[R[123]]]]],[11,"add",E,E,0,[[[T]]]],[11,"add",E,E,0,[[[T]]]],[11,"add",E,E,0,[[[R[123]]]]],[11,R[126],E,E,0,[[["self"],[T]]]],[11,R[126],E,E,0,[[["self"],[R[123]]]]],[11,R[126],E,E,0,[[["self"],[R[123]]]]],[11,R[126],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[U]],[[R[4],[R[123]]],[R[123]]]]],[11,"div",E,E,0,[[[R[123]]]]],[11,"div",E,E,0,[[[T]]]],[11,"div",E,E,0,[[[R[123]]]]],[11,"div",E,E,0,[[[T]]]],[11,R[127],E,E,0,[[["self"],[R[123]]]]],[11,R[127],E,E,0,[[["self"],[T]]]],[11,R[127],E,E,0,[[["self"],[R[123]]]]],[11,R[127],E,E,0,[[["self"],[T]]]],[11,"neg",E,E,0,[[]]],[11,R[290],E,E,0,[[["self"]],[["usize"],[R[4],["usize"]]]]],[11,R[289],E,E,0,[[["self"]],[[R[4],["isize"]],["isize"]]]],[11,"to_u8",E,E,0,[[["self"]],[[R[4],["u8"]],["u8"]]]],[11,"to_u16",E,E,0,[[["self"]],[[R[4],["u16"]],["u16"]]]],[11,"to_u32",E,E,0,[[["self"]],[[R[4],["u32"]],["u32"]]]],[11,"to_u64",E,E,0,[[["self"]],[[R[4],["u64"]],["u64"]]]],[11,"to_i8",E,E,0,[[["self"]],[[R[4],["i8"]],["i8"]]]],[11,"to_i16",E,E,0,[[["self"]],[[R[4],["i16"]],["i16"]]]],[11,"to_i32",E,E,0,[[["self"]],[[R[4],["i32"]],["i32"]]]],[11,"to_i64",E,E,0,[[["self"]],[[R[4],["i64"]],["i64"]]]],[11,R[369],E,E,0,[[["self"]],[[R[4],["u128"]],["u128"]]]],[11,R[370],E,E,0,[[["self"]],[["i128"],[R[4],["i128"]]]]],[11,"to_f32",E,E,0,[[["self"]],[["f32"],[R[4],["f32"]]]]],[11,"to_f64",E,E,0,[[["self"]],[[R[4],["f64"]],["f64"]]]],[11,R[124],E,E,0,[[["self"],[R[123]]]]],[11,R[124],E,E,0,[[["self"],[T]]]],[11,R[124],E,E,0,[[["self"],[T]]]],[11,R[124],E,E,0,[[["self"],[R[123]]]]],[11,R[438],E,E,0,[[],[R[123]]]],[11,R[43],E,E,0,[[[R[123]]],[R[123]]]],[11,"sub",E,E,0,[[[R[123]]]]],[11,"sub",E,E,0,[[[T]]]],[11,"sub",E,E,0,[[[T]]]],[11,"sub",E,E,0,[[[R[123]]]]],[11,"fmt",E,E,0,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,R[128],E,E,0,[[["self"],[T]]]],[11,R[128],E,E,0,[[["self"],[R[123]]]]],[11,R[128],E,E,0,[[["self"],[R[123]]]]],[11,R[128],E,E,0,[[["self"],[T]]]],[11,R[138],E,R[129],0,[[["u32"],["str"]],[[R[86],[R[123]]],[R[123]]]]],[11,"next",R[367],E,49,[[["self"]],[R[4]]]],[11,"next",E,E,48,[[["self"]],[R[4]]]],[11,"next",E,E,47,[[["self"]],[R[4]]]],[11,R[142],E,E,47,[[["self"]]]],[11,"next",E,E,46,[[["self"]],[R[4]]]],[11,R[142],E,E,46,[[["self"]]]],[11,R[143],E,E,46,[[["self"]],[R[4]]]],[11,R[143],E,E,47,[[["self"]],[R[4]]]],[11,"clone",E,E,46,[[["self"]],["range"]]],[11,"clone",E,E,49,[[["self"]],[R[146]]]],[11,"clone",E,E,48,[[["self"]],[R[145]]]],[11,"clone",E,E,47,[[["self"]],[R[144]]]],[11,"into",R[368],E,50,[[]]],[11,"rem",E,E,50,[[["ratio"]],["ratio"]]],[11,"rem",E,E,50,[[[T]],["ratio"]]],[11,"rem",E,E,50,[[["ratio"]],["ratio"]]],[11,"rem",E,E,50,[[[T]],["ratio"]]],[11,R[206],E,E,50,[[["i64"]],[[R[4],["ratio"]],["ratio",["i64"]]]]],[11,R[134],E,E,50,[[["i128"]],[[R[4],["ratio"]],["ratio",["i64"]]]]],[11,R[205],E,E,50,[[["u64"]],[[R[4],["ratio"]],["ratio",["i64"]]]]],[11,R[136],E,E,50,[[["u128"]],[[R[4],["ratio"]],["ratio",["i64"]]]]],[11,R[215],E,E,50,[[["f32"]],[[R[4],["ratio"]],["ratio",["i64"]]]]],[11,R[207],E,E,50,[[["f64"]],[[R[4],["ratio"]],["ratio",["i64"]]]]],[11,R[206],E,E,50,[[["i64"]],[["ratio",["isize"]],[R[4],["ratio"]]]]],[11,R[134],E,E,50,[[["i128"]],[["ratio",["isize"]],[R[4],["ratio"]]]]],[11,R[205],E,E,50,[[["u64"]],[["ratio",["isize"]],[R[4],["ratio"]]]]],[11,R[136],E,E,50,[[["u128"]],[["ratio",["isize"]],[R[4],["ratio"]]]]],[11,R[215],E,E,50,[[["f32"]],[["ratio",["isize"]],[R[4],["ratio"]]]]],[11,R[207],E,E,50,[[["f64"]],[["ratio",["isize"]],[R[4],["ratio"]]]]],[11,R[206],E,E,50,[[["i64"]],[[R[4],["ratio"]],["ratio",["bigint"]]]]],[11,R[134],E,E,50,[[["i128"]],[[R[4],["ratio"]],["ratio",["bigint"]]]]],[11,R[205],E,E,50,[[["u64"]],[[R[4],["ratio"]],["ratio",["bigint"]]]]],[11,R[136],E,E,50,[[["u128"]],[[R[4],["ratio"]],["ratio",["bigint"]]]]],[11,R[215],E,E,50,[[["f32"]],[[R[4],["ratio"]],["ratio",["bigint"]]]]],[11,R[207],E,E,50,[[["f64"]],[[R[4],["ratio"]],["ratio",["bigint"]]]]],[11,R[206],E,E,50,[[["i64"]],[[R[4],["ratio"]],["ratio",["i128"]]]]],[11,R[134],E,E,50,[[["i128"]],[[R[4],["ratio"]],["ratio",["i128"]]]]],[11,R[205],E,E,50,[[["u64"]],[[R[4],["ratio"]],["ratio",["i128"]]]]],[11,R[136],E,E,50,[[["u128"]],[[R[4],["ratio"]],["ratio",["i128"]]]]],[11,R[215],E,E,50,[[["f32"]],[[R[4],["ratio"]],["ratio",["i128"]]]]],[11,R[207],E,E,50,[[["f64"]],[[R[4],["ratio"]],["ratio",["i128"]]]]],[11,R[206],E,E,50,[[["i64"]],[["ratio",["u128"]],[R[4],["ratio"]]]]],[11,R[134],E,E,50,[[["i128"]],[["ratio",["u128"]],[R[4],["ratio"]]]]],[11,R[205],E,E,50,[[["u64"]],[["ratio",["u128"]],[R[4],["ratio"]]]]],[11,R[136],E,E,50,[[["u128"]],[["ratio",["u128"]],[R[4],["ratio"]]]]],[11,R[215],E,E,50,[[["f32"]],[["ratio",["u128"]],[R[4],["ratio"]]]]],[11,R[207],E,E,50,[[["f64"]],[["ratio",["u128"]],[R[4],["ratio"]]]]],[11,R[206],E,E,50,[[["i64"]],[["ratio",["u16"]],[R[4],["ratio"]]]]],[11,R[134],E,E,50,[[["i128"]],[["ratio",["u16"]],[R[4],["ratio"]]]]],[11,R[205],E,E,50,[[["u64"]],[["ratio",["u16"]],[R[4],["ratio"]]]]],[11,R[136],E,E,50,[[["u128"]],[["ratio",["u16"]],[R[4],["ratio"]]]]],[11,R[215],E,E,50,[[["f32"]],[["ratio",["u16"]],[R[4],["ratio"]]]]],[11,R[207],E,E,50,[[["f64"]],[["ratio",["u16"]],[R[4],["ratio"]]]]],[11,R[206],E,E,50,[[["i64"]],[["ratio",["i8"]],[R[4],["ratio"]]]]],[11,R[134],E,E,50,[[["i128"]],[["ratio",["i8"]],[R[4],["ratio"]]]]],[11,R[205],E,E,50,[[["u64"]],[["ratio",["i8"]],[R[4],["ratio"]]]]],[11,R[136],E,E,50,[[["u128"]],[["ratio",["i8"]],[R[4],["ratio"]]]]],[11,R[215],E,E,50,[[["f32"]],[["ratio",["i8"]],[R[4],["ratio"]]]]],[11,R[207],E,E,50,[[["f64"]],[["ratio",["i8"]],[R[4],["ratio"]]]]],[11,R[206],E,E,50,[[["i64"]],[[R[4],["ratio"]],["ratio",["i32"]]]]],[11,R[134],E,E,50,[[["i128"]],[[R[4],["ratio"]],["ratio",["i32"]]]]],[11,R[205],E,E,50,[[["u64"]],[[R[4],["ratio"]],["ratio",["i32"]]]]],[11,R[136],E,E,50,[[["u128"]],[[R[4],["ratio"]],["ratio",["i32"]]]]],[11,R[215],E,E,50,[[["f32"]],[[R[4],["ratio"]],["ratio",["i32"]]]]],[11,R[207],E,E,50,[[["f64"]],[[R[4],["ratio"]],["ratio",["i32"]]]]],[11,R[206],E,E,50,[[["i64"]],[[R[4],["ratio"]],["ratio",["u64"]]]]],[11,R[134],E,E,50,[[["i128"]],[[R[4],["ratio"]],["ratio",["u64"]]]]],[11,R[205],E,E,50,[[["u64"]],[[R[4],["ratio"]],["ratio",["u64"]]]]],[11,R[136],E,E,50,[[["u128"]],[[R[4],["ratio"]],["ratio",["u64"]]]]],[11,R[215],E,E,50,[[["f32"]],[[R[4],["ratio"]],["ratio",["u64"]]]]],[11,R[207],E,E,50,[[["f64"]],[[R[4],["ratio"]],["ratio",["u64"]]]]],[11,R[206],E,E,50,[[["i64"]],[[R[4],["ratio"]],["ratio",["i16"]]]]],[11,R[134],E,E,50,[[["i128"]],[[R[4],["ratio"]],["ratio",["i16"]]]]],[11,R[205],E,E,50,[[["u64"]],[[R[4],["ratio"]],["ratio",["i16"]]]]],[11,R[136],E,E,50,[[["u128"]],[[R[4],["ratio"]],["ratio",["i16"]]]]],[11,R[215],E,E,50,[[["f32"]],[[R[4],["ratio"]],["ratio",["i16"]]]]],[11,R[207],E,E,50,[[["f64"]],[[R[4],["ratio"]],["ratio",["i16"]]]]],[11,R[206],E,E,50,[[["i64"]],[["ratio",["usize"]],[R[4],["ratio"]]]]],[11,R[134],E,E,50,[[["i128"]],[["ratio",["usize"]],[R[4],["ratio"]]]]],[11,R[205],E,E,50,[[["u64"]],[["ratio",["usize"]],[R[4],["ratio"]]]]],[11,R[136],E,E,50,[[["u128"]],[["ratio",["usize"]],[R[4],["ratio"]]]]],[11,R[215],E,E,50,[[["f32"]],[["ratio",["usize"]],[R[4],["ratio"]]]]],[11,R[207],E,E,50,[[["f64"]],[["ratio",["usize"]],[R[4],["ratio"]]]]],[11,R[206],E,E,50,[[["i64"]],[[R[4],["ratio"]],["ratio",["u32"]]]]],[11,R[134],E,E,50,[[["i128"]],[[R[4],["ratio"]],["ratio",["u32"]]]]],[11,R[205],E,E,50,[[["u64"]],[[R[4],["ratio"]],["ratio",["u32"]]]]],[11,R[136],E,E,50,[[["u128"]],[[R[4],["ratio"]],["ratio",["u32"]]]]],[11,R[215],E,E,50,[[["f32"]],[[R[4],["ratio"]],["ratio",["u32"]]]]],[11,R[207],E,E,50,[[["f64"]],[[R[4],["ratio"]],["ratio",["u32"]]]]],[11,R[206],E,E,50,[[["i64"]],[["ratio",["u8"]],[R[4],["ratio"]]]]],[11,R[134],E,E,50,[[["i128"]],[["ratio",["u8"]],[R[4],["ratio"]]]]],[11,R[205],E,E,50,[[["u64"]],[["ratio",["u8"]],[R[4],["ratio"]]]]],[11,R[136],E,E,50,[[["u128"]],[["ratio",["u8"]],[R[4],["ratio"]]]]],[11,R[215],E,E,50,[[["f32"]],[["ratio",["u8"]],[R[4],["ratio"]]]]],[11,R[207],E,E,50,[[["f64"]],[["ratio",["u8"]],[R[4],["ratio"]]]]],[11,"inv",E,E,50,[[],["ratio"]]],[11,R[203],E,R[485],50,[[["str"]],[[R[213]],[R[86],["ratio",R[213]]],["ratio"]]]],[11,R[204],E,E,51,[[["self"]],["str"]]],[11,R[197],E,E,50,[[["self"],["ratio"]],[[R[4],["ratio"]],["ratio"]]]],[11,"sum",E,E,50,[[["i"]],["ratio"]]],[11,"sum",E,E,50,[[["i"]],["ratio"]]],[11,R[199],E,E,50,[[["self"],["ratio"]],[[R[4],["ratio"]],["ratio"]]]],[11,R[138],E,R[486],50,[[["u32"],["str"]],[[R[213]],[R[86],["ratio",R[213]]],["ratio"]]]],[11,R[214],E,E,50,[[["i"]],["ratio"]]],[11,R[214],E,E,50,[[["i"]],["ratio"]]],[11,"fmt",E,E,51,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"fmt",E,R[484],50,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,R[125],E,E,50,[[["self"],["ratio"]]]],[11,R[125],E,E,50,[[["self"],[T]]]],[11,R[125],E,E,50,[[["self"],[T]]]],[11,R[125],E,E,50,[[["self"],["ratio"]]]],[11,"from",E,E,50,[[[T]],["ratio"]]],[11,"from",E,E,50,[[],["ratio"]]],[11,"hash",E,E,50,[[["self"],["h"]]]],[11,"cmp",E,E,50,[[["self"],["ratio"]],[R[181]]]],[11,"pow",E,E,50,[[["u8"]],["ratio"]]],[11,"pow",E,E,50,[[["i8"]],["ratio"]]],[11,"pow",E,E,50,[[["u16"]],["ratio"]]],[11,"pow",E,E,50,[[["isize"]],["ratio"]]],[11,"pow",E,E,50,[[["i64"]],["ratio"]]],[11,"pow",E,E,50,[[["i16"]],["ratio"]]],[11,"pow",E,E,50,[[["usize"]],["ratio"]]],[11,"pow",E,E,50,[[["isize"]],["ratio"]]],[11,"pow",E,E,50,[[["u64"]],["ratio"]]],[11,"pow",E,E,50,[[["u32"]],["ratio"]]],[11,"pow",E,E,50,[[["usize"]],["ratio"]]],[11,"pow",E,E,50,[[["i16"]],["ratio"]]],[11,"pow",E,E,50,[[["i8"]],["ratio"]]],[11,"pow",E,E,50,[[["i64"]],["ratio"]]],[11,"pow",E,E,50,[[["i32"]],["ratio"]]],[11,"pow",E,E,50,[[["u64"]],["ratio"]]],[11,"pow",E,E,50,[[["i32"]],["ratio"]]],[11,"pow",E,E,50,[[["u16"]],["ratio"]]],[11,"pow",E,E,50,[[["u8"]],["ratio"]]],[11,"pow",E,E,50,[[["u32"]],["ratio"]]],[11,"mul",E,E,50,[[[T]],["ratio"]]],[11,"mul",E,E,50,[[[T]],["ratio"]]],[11,"mul",E,E,50,[[["ratio"]],["ratio"]]],[11,"mul",E,E,50,[[["ratio"]],["ratio"]]],[11,"clone",E,E,50,[[["self"]],["ratio"]]],[11,"clone",E,E,51,[[["self"]],[R[213]]]],[11,"div",E,E,50,[[["ratio"]],["ratio"]]],[11,"div",E,E,50,[[[T]],["ratio"]]],[11,"div",E,E,50,[[["ratio"]],["ratio"]]],[11,"div",E,E,50,[[[T]],["ratio"]]],[11,"eq",E,E,51,[[["self"],[R[213]]],["bool"]]],[11,"ne",E,E,51,[[["self"],[R[213]]],["bool"]]],[11,"eq",E,E,50,[[["self"],["ratio"]],["bool"]]],[11,"fmt",E,E,51,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"fmt",E,E,50,[[["self"],[R[88]]],[[R[86],["error"]],["error"]]]],[11,"add",E,E,50,[[["ratio"]],["ratio"]]],[11,"add",E,E,50,[[[T]],["ratio"]]],[11,"add",E,E,50,[[["ratio"]],["ratio"]]],[11,"add",E,E,50,[[[T]],["ratio"]]],[11,R[126],E,E,50,[[["self"],["ratio"]]]],[11,R[126],E,E,50,[[["self"],[T]]]],[11,R[126],E,E,50,[[["self"],["ratio"]]]],[11,R[126],E,E,50,[[["self"],[T]]]],[11,R[198],E,E,50,[[["self"],["ratio"]],[[R[4],["ratio"]],["ratio"]]]],[11,R[127],E,E,50,[[["self"],[T]]]],[11,R[127],E,E,50,[[["self"],[T]]]],[11,R[127],E,E,50,[[["self"],["ratio"]]]],[11,R[127],E,E,50,[[["self"],["ratio"]]]],[11,"neg",E,E,50,[[],["ratio"]]],[11,R[180],E,E,50,[[["self"],["ratio"]],[[R[181]],[R[4],[R[181]]]]]],[11,R[124],E,E,50,[[["self"],["ratio"]]]],[11,R[124],E,E,50,[[["self"],[T]]]],[11,R[124],E,E,50,[[["self"],["ratio"]]]],[11,R[124],E,E,50,[[["self"],[T]]]],[11,"sub",E,E,50,[[[T]],["ratio"]]],[11,"sub",E,E,50,[[[T]],["ratio"]]],[11,"sub",E,E,50,[[["ratio"]],["ratio"]]],[11,"sub",E,E,50,[[["ratio"]],["ratio"]]],[11,R[200],E,E,50,[[["self"],["ratio"]],[[R[4],["ratio"]],["ratio"]]]],[11,"one",E,E,50,[[],["ratio"]]],[11,"is_one",E,E,50,[[["self"]],["bool"]]],[11,R[371],E,E,50,[[["self"]]]],[11,"abs",E,E,50,[[["self"]],["ratio"]]],[11,R[79],E,E,50,[[["self"],["ratio"]],["ratio"]]],[11,R[82],E,E,50,[[["self"]],["ratio"]]],[11,R[209],E,E,50,[[["self"]],["bool"]]],[11,R[210],E,E,50,[[["self"]],["bool"]]],[11,R[128],E,E,50,[[["self"],[T]]]],[11,R[128],E,E,50,[[["self"],[T]]]],[11,R[128],E,E,50,[[["self"],["ratio"]]]],[11,R[128],E,E,50,[[["self"],["ratio"]]]],[11,"zero",E,E,50,[[],["ratio"]]],[11,R[372],E,E,50,[[["self"]],["bool"]]],[11,R[208],E,E,50,[[["self"]]]],[11,"new",R[364],R[196],41,[[["vec",["u32"]],["u32"],["sign"]],["bigint"]]],[11,R[374],E,R[150],41,[[[R[159]],["sign"]],["bigint"]]],[11,R[155],E,R[150],41,[[["sign"]],["bigint"]]],[11,R[157],E,R[375],41,[[["self"],["sign"]]]],[11,R[158],E,R[150],41,[[["sign"]],["bigint"]]],[11,R[160],E,R[150],41,[[["sign"]],["bigint"]]],[11,R[376],E,R[151],41,[[],["bigint"]]],[11,R[377],E,R[151],41,[[],["bigint"]]],[11,R[161],E,R[150],41,[[["u32"]],[["bigint"],[R[4],["bigint"]]]]],[11,R[162],E,R[152],41,[[["u32"],["sign"]],[["bigint"],[R[4],["bigint"]]]]],[11,R[163],E,R[152],41,[[["u32"],["sign"]],[["bigint"],[R[4],["bigint"]]]]],[11,R[165],E,R[153],41,[[["self"]]]],[11,R[166],E,R[153],41,[[["self"]]]],[11,R[378],E,R[154],41,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[379],E,R[154],41,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[168],E,R[169],41,[[["self"],["u32"]],["string"]]],[11,R[170],E,R[171],41,[[["self"],["u32"]]]],[11,R[172],E,R[173],41,[[["self"],["u32"]]]],[11,"sign",E,R[380],41,[[["self"]],["sign"]]],[11,"bits",E,R[174],41,[[["self"]],["usize"]]],[11,R[178],E,R[381],41,[[["self"]],[[R[4],[R[159]]],[R[159]]]]],[11,R[198],E,E,41,[[["self"],["bigint"]],[["bigint"],[R[4],["bigint"]]]]],[11,R[197],E,E,41,[[["self"],["bigint"]],[["bigint"],[R[4],["bigint"]]]]],[11,R[199],E,E,41,[[["self"],["bigint"]],[["bigint"],[R[4],["bigint"]]]]],[11,R[200],E,E,41,[[["self"],["bigint"]],[["bigint"],[R[4],["bigint"]]]]],[11,"modpow",E,R[382],41,[[["self"],["bigint"]],["bigint"]]],[11,"sqrt",E,R[175],41,[[["self"]],["bigint"]]],[11,"cbrt",E,R[176],41,[[["self"]],["bigint"]]],[11,R[188],E,R[177],41,[[["self"],["u32"]],["bigint"]]],[11,"new",E,R[156],42,[[["vec",["u32"]],["u32"]],[R[159]]]],[11,R[155],E,R[156],42,[[],[R[159]]]],[11,R[157],E,R[383],42,[[["self"]]]],[11,R[158],E,R[156],42,[[],[R[159]]]],[11,R[160],E,R[156],42,[[],[R[159]]]],[11,R[161],E,R[384],42,[[["u32"]],[[R[4],[R[159]]],[R[159]]]]],[11,R[162],E,R[164],42,[[["u32"]],[[R[4],[R[159]]],[R[159]]]]],[11,R[163],E,R[164],42,[[["u32"]],[[R[4],[R[159]]],[R[159]]]]],[11,R[165],E,R[167],42,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[166],E,R[167],42,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[168],E,R[169],42,[[["self"],["u32"]],["string"]]],[11,R[170],E,R[171],42,[[["self"],["u32"]],[["u8"],["vec",["u8"]]]]],[11,R[172],E,R[173],42,[[["self"],["u32"]],[["u8"],["vec",["u8"]]]]],[11,"bits",E,R[174],42,[[["self"]],["usize"]]],[11,"modpow",E,R[385],42,[[["self"],[R[159]]],[R[159]]]],[11,"sqrt",E,R[175],42,[[["self"]],[R[159]]]],[11,"cbrt",E,R[176],42,[[["self"]],[R[159]]]],[11,R[188],E,R[177],42,[[["self"],["u32"]],[R[159]]]],[11,"new",R[365],R[397],0,[[[T]],[R[123]]]],[11,"i",E,R[398],0,[[],[R[123]]]],[11,"norm_sqr",E,R[399],0,[[["self"]],[T]]],[11,"scale",E,R[400],0,[[["self"],[T]],[R[123]]]],[11,"unscale",E,R[401],0,[[["self"],[T]],[R[123]]]],[11,"powu",E,R[402],0,[[["self"],["u32"]],[R[123]]]],[11,"conj",E,R[403],0,[[["self"]],[R[123]]]],[11,"inv",E,R[404],0,[[["self"]],[R[123]]]],[11,"powi",E,R[405],0,[[["self"],["i32"]],[R[123]]]],[11,"l1_norm",E,R[406],0,[[["self"]],[T]]],[11,"norm",E,R[407],0,[[["self"]],[T]]],[11,"arg",E,R[408],0,[[["self"]],[T]]],[11,"to_polar",E,R[409],0,[[["self"]]]],[11,R[410],E,R[411],0,[[[T]],[R[123]]]],[11,"exp",E,R[412],0,[[["self"]],[R[123]]]],[11,"ln",E,R[413],0,[[["self"]],[R[123]]]],[11,"sqrt",E,R[414],0,[[["self"]],[R[123]]]],[11,"cbrt",E,R[415],0,[[["self"]],[R[123]]]],[11,"powf",E,R[416],0,[[["self"],[T]],[R[123]]]],[11,"log",E,R[417],0,[[["self"],[T]],[R[123]]]],[11,"powc",E,R[418],0,[[["self"],[R[123]]],[R[123]]]],[11,"expf",E,R[419],0,[[["self"],[T]],[R[123]]]],[11,"sin",E,R[420],0,[[["self"]],[R[123]]]],[11,"cos",E,R[421],0,[[["self"]],[R[123]]]],[11,"tan",E,R[422],0,[[["self"]],[R[123]]]],[11,"asin",E,R[423],0,[[["self"]],[R[123]]]],[11,"acos",E,R[424],0,[[["self"]],[R[123]]]],[11,"atan",E,R[425],0,[[["self"]],[R[123]]]],[11,"sinh",E,R[426],0,[[["self"]],[R[123]]]],[11,"cosh",E,R[427],0,[[["self"]],[R[123]]]],[11,"tanh",E,R[428],0,[[["self"]],[R[123]]]],[11,"asinh",E,R[429],0,[[["self"]],[R[123]]]],[11,"acosh",E,R[430],0,[[["self"]],[R[123]]]],[11,"atanh",E,R[431],0,[[["self"]],[R[123]]]],[11,"finv",E,R[432],0,[[["self"]],[R[123]]]],[11,"fdiv",E,R[433],0,[[["self"],[R[123]]],[R[123]]]],[11,"is_nan",E,R[434],0,[[],["bool"]]],[11,R[16],E,R[435],0,[[],["bool"]]],[11,R[17],E,R[436],0,[[],["bool"]]],[11,R[18],E,R[437],0,[[],["bool"]]],[11,"new",R[366],R[451],45,[[[T]],[R[452]]]],[11,"new",R[368],R[463],50,[[[T]],["ratio"]]],[11,R[464],E,R[465],50,[[[T]],["ratio"]]],[11,"new_raw",E,R[466],50,[[[T]],["ratio"]]],[11,R[467],E,R[468],50,[[["self"]],[T]]],[11,"numer",E,R[469],50,[[["self"]],[T]]],[11,"denom",E,R[470],50,[[["self"]],[T]]],[11,R[471],E,R[472],50,[[["self"]],["bool"]]],[11,"reduced",E,R[473],50,[[["self"]],["ratio"]]],[11,"recip",E,R[474],50,[[["self"]],["ratio"]]],[11,"floor",E,R[475],50,[[["self"]],["ratio"]]],[11,"ceil",E,R[476],50,[[["self"]],["ratio"]]],[11,"round",E,R[477],50,[[["self"]],["ratio"]]],[11,"trunc",E,R[478],50,[[["self"]],["ratio"]]],[11,"fract",E,R[479],50,[[["self"]],["ratio"]]],[11,"pow",E,R[480],50,[[["self"],["i32"]],["ratio"]]],[11,R[481],E,R[482],50,[[[T]],[[R[4],["ratio"]],["ratio",["bigint"]]]]],[11,R[483],E,E,50,[[["f"]],[[R[4],["ratio"]],["ratio"]]]]],"p":[[3,"Complex"],[8,"Integer"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,R[105]],[8,R[96]],[8,R[97]],[8,R[98]],[8,R[99]],[8,"PrimInt"],[8,R[91]],[8,R[92]],[8,R[575]],[8,R[93]],[8,"Pow"],[8,"Float"],[4,"Sign"],[8,R[388]],[8,R[201]],[3,R[119]],[8,"Roots"],[8,R[94]],[8,R[95]],[8,R[100]],[8,R[101]],[8,R[102]],[8,R[103]],[8,"Inv"],[8,"MulAdd"],[8,R[104]],[8,R[106]],[8,R[107]],[8,R[108]],[8,R[109]],[8,R[110]],[8,"Real"],[4,R[90]],[3,R[89]],[3,"BigInt"],[3,"BigUint"],[3,R[202]],[3,R[131]],[3,R[120]],[3,"Range"],[3,R[147]],[3,R[148]],[3,R[149]],[3,"Ratio"],[3,R[216]]]};
searchIndex["num_bigint"]={"doc":"A Big integer (signed version: `BigInt`, unsigned version:…","i":[[3,R[202],"num_bigint",E,N,N],[3,"BigUint",E,R[254],N,N],[3,"BigInt",E,R[253],N,N],[4,"Sign",E,R[373],N,N],[13,"Minus",E,E,0,N],[13,"NoSign",E,E,0,N],[13,"Plus",E,E,0,N],[11,"new",E,R[196],1,[[["vec",["u32"]],["u32"],["sign"]],["bigint"]]],[11,R[374],E,R[150],1,[[[R[159]],["sign"]],["bigint"]]],[11,R[155],E,R[150],1,[[["sign"]],["bigint"]]],[11,R[157],E,R[375],1,[[["self"],["sign"]]]],[11,R[158],E,R[150],1,[[["sign"]],["bigint"]]],[11,R[160],E,R[150],1,[[["sign"]],["bigint"]]],[11,R[376],E,R[151],1,[[],["bigint"]]],[11,R[377],E,R[151],1,[[],["bigint"]]],[11,R[161],E,R[150],1,[[["u32"]],[[R[4],["bigint"]],["bigint"]]]],[11,R[162],E,R[152],1,[[["u32"],["sign"]],[[R[4],["bigint"]],["bigint"]]]],[11,R[163],E,R[152],1,[[["u32"],["sign"]],[[R[4],["bigint"]],["bigint"]]]],[11,R[165],E,R[153],1,[[["self"]]]],[11,R[166],E,R[153],1,[[["self"]]]],[11,R[378],E,R[154],1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[379],E,R[154],1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[168],E,R[169],1,[[["self"],["u32"]],["string"]]],[11,R[170],E,R[171],1,[[["self"],["u32"]]]],[11,R[172],E,R[173],1,[[["self"],["u32"]]]],[11,"sign",E,R[380],1,[[["self"]],["sign"]]],[11,"bits",E,R[174],1,[[["self"]],["usize"]]],[11,R[178],E,R[381],1,[[["self"]],[[R[4],[R[159]]],[R[159]]]]],[11,R[198],E,E,1,[[["self"],["bigint"]],[[R[4],["bigint"]],["bigint"]]]],[11,R[197],E,E,1,[[["self"],["bigint"]],[[R[4],["bigint"]],["bigint"]]]],[11,R[199],E,E,1,[[["self"],["bigint"]],[[R[4],["bigint"]],["bigint"]]]],[11,R[200],E,E,1,[[["self"],["bigint"]],[[R[4],["bigint"]],["bigint"]]]],[11,"modpow",E,R[382],1,[[["self"]],["self"]]],[11,"sqrt",E,R[175],1,[[["self"]],["self"]]],[11,"cbrt",E,R[176],1,[[["self"]],["self"]]],[11,R[188],E,R[177],1,[[["self"],["u32"]],["self"]]],[11,"new",E,R[156],2,[[["u32"],["vec",["u32"]]],[R[159]]]],[11,R[155],E,R[156],2,[[],[R[159]]]],[11,R[157],E,R[383],2,[[["self"]]]],[11,R[158],E,R[156],2,[[],[R[159]]]],[11,R[160],E,R[156],2,[[],[R[159]]]],[11,R[161],E,R[384],2,[[["u32"]],[[R[4],[R[159]]],[R[159]]]]],[11,R[162],E,R[164],2,[[["u32"]],[[R[4],[R[159]]],[R[159]]]]],[11,R[163],E,R[164],2,[[["u32"]],[[R[4],[R[159]]],[R[159]]]]],[11,R[165],E,R[167],2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[166],E,R[167],2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[168],E,R[169],2,[[["self"],["u32"]],["string"]]],[11,R[170],E,R[171],2,[[["self"],["u32"]],[["vec",["u8"]],["u8"]]]],[11,R[172],E,R[173],2,[[["self"],["u32"]],[["vec",["u8"]],["u8"]]]],[11,"bits",E,R[174],2,[[["self"]],["usize"]]],[11,"modpow",E,R[385],2,[[["self"]],["self"]]],[11,"sqrt",E,R[175],2,[[["self"]],["self"]]],[11,"cbrt",E,R[176],2,[[["self"]],["self"]]],[11,R[188],E,R[177],2,[[["self"],["u32"]],["self"]]],[8,R[201],E,R[386],N,N],[10,R[178],E,R[387],3,[[["self"]],[[R[4],[R[159]]],[R[159]]]]],[8,R[388],E,R[389],N,N],[10,R[179],E,R[390],4,[[["self"]],[[R[4],["bigint"]],["bigint"]]]],[11,R[141],E,E,5,[[["self"]],[T]]],[11,R[132],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[121],E,E,5,[[["self"]],["string"]]],[11,R[84],E,E,5,[[[U]],[R[86]]]],[11,R[85],E,E,5,[[],[R[86]]]],[11,R[87],E,E,5,[[["self"]],[T]]],[11,"borrow",E,E,5,[[["self"]],[T]]],[11,R[139],E,E,5,[[["self"]],["typeid"]]],[11,R[141],E,E,2,[[["self"]],[T]]],[11,R[132],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[121],E,E,2,[[["self"]],["string"]]],[11,R[84],E,E,2,[[[U]],[R[86]]]],[11,R[85],E,E,2,[[],[R[86]]]],[11,R[87],E,E,2,[[["self"]],[T]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[139],E,E,2,[[["self"]],["typeid"]]],[11,R[141],E,E,1,[[["self"]],[T]]],[11,R[132],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[121],E,E,1,[[["self"]],["string"]]],[11,R[84],E,E,1,[[[U]],[R[86]]]],[11,R[85],E,E,1,[[],[R[86]]]],[11,R[87],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[139],E,E,1,[[["self"]],["typeid"]]],[11,R[141],E,E,0,[[["self"]],[T]]],[11,R[132],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[84],E,E,0,[[[U]],[R[86]]]],[11,R[85],E,E,0,[[],[R[86]]]],[11,R[87],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[139],E,E,0,[[["self"]],["typeid"]]],[11,R[179],E,E,1,[[["self"]],[[R[4],["bigint"]],["bigint"]]]],[11,R[179],E,E,2,[[["self"]],[[R[4],["bigint"]],["bigint"]]]],[11,R[178],E,E,1,[[["self"]],[[R[4],[R[159]]],[R[159]]]]],[11,R[178],E,E,2,[[["self"]],[[R[4],[R[159]]],[R[159]]]]],[11,R[438],E,E,1,[[],["bigint"]]],[11,R[438],E,E,2,[[],[R[159]]]],[11,"clone",E,E,0,[[["self"]],["sign"]]],[11,"clone",E,E,1,[[["self"]],["bigint"]]],[11,"clone",E,E,2,[[["self"]],[R[159]]]],[11,"clone",E,E,5,[[["self"]],[R[182]]]],[11,R[180],E,E,0,[[["self"],["sign"]],[[R[4],[R[181]]],[R[181]]]]],[11,R[180],E,E,1,[[["self"],["bigint"]],[[R[4],[R[181]]],[R[181]]]]],[11,R[180],E,E,2,[[["self"],[R[159]]],[[R[4],[R[181]]],[R[181]]]]],[11,"eq",E,E,0,[[["self"],["sign"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["bigint"]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[159]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[182]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[182]]],["bool"]]],[11,"cmp",E,E,0,[[["self"],["sign"]],[R[181]]]],[11,"cmp",E,E,1,[[["self"],["bigint"]],[R[181]]]],[11,"cmp",E,E,2,[[["self"],[R[159]]],[R[181]]]],[11,"from",E,E,1,[[["i64"]],["self"]]],[11,"from",E,E,1,[[["i128"]],["self"]]],[11,"from",E,E,1,[[["i8"]],["self"]]],[11,"from",E,E,1,[[["i16"]],["self"]]],[11,"from",E,E,1,[[["i32"]],["self"]]],[11,"from",E,E,1,[[["isize"]],["self"]]],[11,"from",E,E,1,[[["u64"]],["self"]]],[11,"from",E,E,1,[[["u128"]],["self"]]],[11,"from",E,E,1,[[["u8"]],["self"]]],[11,"from",E,E,1,[[["u16"]],["self"]]],[11,"from",E,E,1,[[["u32"]],["self"]]],[11,"from",E,E,1,[[["usize"]],["self"]]],[11,"from",E,E,1,[[[R[159]]],["self"]]],[11,"from",E,E,2,[[["u64"]],["self"]]],[11,"from",E,E,2,[[["u128"]],["self"]]],[11,"from",E,E,2,[[["u8"]],["self"]]],[11,"from",E,E,2,[[["u16"]],["self"]]],[11,"from",E,E,2,[[["u32"]],["self"]]],[11,"from",E,E,2,[[["usize"]],["self"]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"add",E,E,1,[[["bigint"]],["bigint"]]],[11,"add",E,E,1,[[["bigint"]],["bigint"]]],[11,"add",E,E,1,[[["u8"]],["bigint"]]],[11,"add",E,E,1,[[["u8"]],["bigint"]]],[11,"add",E,E,1,[[["u16"]],["bigint"]]],[11,"add",E,E,1,[[["u16"]],["bigint"]]],[11,"add",E,E,1,[[["usize"]],["bigint"]]],[11,"add",E,E,1,[[["usize"]],["bigint"]]],[11,"add",E,E,1,[[["i8"]],["bigint"]]],[11,"add",E,E,1,[[["i8"]],["bigint"]]],[11,"add",E,E,1,[[["i16"]],["bigint"]]],[11,"add",E,E,1,[[["i16"]],["bigint"]]],[11,"add",E,E,1,[[["isize"]],["bigint"]]],[11,"add",E,E,1,[[["isize"]],["bigint"]]],[11,"add",E,E,1,[[["u32"]],["bigint"]]],[11,"add",E,E,1,[[["u64"]],["bigint"]]],[11,"add",E,E,1,[[["u128"]],["bigint"]]],[11,"add",E,E,1,[[["u32"]],["bigint"]]],[11,"add",E,E,1,[[["u64"]],["bigint"]]],[11,"add",E,E,1,[[["u128"]],["bigint"]]],[11,"add",E,E,1,[[["i32"]],["bigint"]]],[11,"add",E,E,1,[[["i64"]],["bigint"]]],[11,"add",E,E,1,[[["i128"]],["bigint"]]],[11,"add",E,E,1,[[["i32"]],["bigint"]]],[11,"add",E,E,1,[[["i64"]],["bigint"]]],[11,"add",E,E,1,[[["i128"]],["bigint"]]],[11,"add",E,E,2,[[[R[159]]],[R[159]]]],[11,"add",E,E,2,[[[R[159]]],[R[159]]]],[11,"add",E,E,2,[[["u8"]],[R[159]]]],[11,"add",E,E,2,[[["u8"]],[R[159]]]],[11,"add",E,E,2,[[["u16"]],[R[159]]]],[11,"add",E,E,2,[[["u16"]],[R[159]]]],[11,"add",E,E,2,[[["usize"]],[R[159]]]],[11,"add",E,E,2,[[["usize"]],[R[159]]]],[11,"add",E,E,2,[[["u32"]],[R[159]]]],[11,"add",E,E,2,[[["u64"]],[R[159]]]],[11,"add",E,E,2,[[["u128"]],[R[159]]]],[11,"add",E,E,2,[[["u32"]],[R[159]]]],[11,"add",E,E,2,[[["u64"]],[R[159]]]],[11,"add",E,E,2,[[["u128"]],[R[159]]]],[11,"sub",E,E,1,[[["bigint"]],["bigint"]]],[11,"sub",E,E,1,[[["bigint"]],["bigint"]]],[11,"sub",E,E,1,[[["u8"]],["bigint"]]],[11,"sub",E,E,1,[[["u8"]],["bigint"]]],[11,"sub",E,E,1,[[["u16"]],["bigint"]]],[11,"sub",E,E,1,[[["u16"]],["bigint"]]],[11,"sub",E,E,1,[[["usize"]],["bigint"]]],[11,"sub",E,E,1,[[["usize"]],["bigint"]]],[11,"sub",E,E,1,[[["i8"]],["bigint"]]],[11,"sub",E,E,1,[[["i8"]],["bigint"]]],[11,"sub",E,E,1,[[["i16"]],["bigint"]]],[11,"sub",E,E,1,[[["i16"]],["bigint"]]],[11,"sub",E,E,1,[[["isize"]],["bigint"]]],[11,"sub",E,E,1,[[["isize"]],["bigint"]]],[11,"sub",E,E,1,[[["u32"]],["bigint"]]],[11,"sub",E,E,1,[[["u64"]],["bigint"]]],[11,"sub",E,E,1,[[["u128"]],["bigint"]]],[11,"sub",E,E,1,[[["u32"]],["bigint"]]],[11,"sub",E,E,1,[[["u64"]],["bigint"]]],[11,"sub",E,E,1,[[["u128"]],["bigint"]]],[11,"sub",E,E,1,[[["i32"]],["bigint"]]],[11,"sub",E,E,1,[[["i64"]],["bigint"]]],[11,"sub",E,E,1,[[["i128"]],["bigint"]]],[11,"sub",E,E,1,[[["i32"]],["bigint"]]],[11,"sub",E,E,1,[[["i64"]],["bigint"]]],[11,"sub",E,E,1,[[["i128"]],["bigint"]]],[11,"sub",E,E,2,[[[R[159]]],[R[159]]]],[11,"sub",E,E,2,[[[R[159]]],[R[159]]]],[11,"sub",E,E,2,[[["u8"]],[R[159]]]],[11,"sub",E,E,2,[[["u8"]],[R[159]]]],[11,"sub",E,E,2,[[["u16"]],[R[159]]]],[11,"sub",E,E,2,[[["u16"]],[R[159]]]],[11,"sub",E,E,2,[[["usize"]],[R[159]]]],[11,"sub",E,E,2,[[["usize"]],[R[159]]]],[11,"sub",E,E,2,[[["u32"]],[R[159]]]],[11,"sub",E,E,2,[[["u64"]],[R[159]]]],[11,"sub",E,E,2,[[["u128"]],[R[159]]]],[11,"sub",E,E,2,[[["u32"]],[R[159]]]],[11,"sub",E,E,2,[[["u64"]],[R[159]]]],[11,"sub",E,E,2,[[["u128"]],[R[159]]]],[11,"mul",E,E,0,[[["sign"]],["sign"]]],[11,"mul",E,E,1,[[["bigint"]],["bigint"]]],[11,"mul",E,E,1,[[["bigint"]],["bigint"]]],[11,"mul",E,E,1,[[["u8"]],["bigint"]]],[11,"mul",E,E,1,[[["u8"]],["bigint"]]],[11,"mul",E,E,1,[[["u16"]],["bigint"]]],[11,"mul",E,E,1,[[["u16"]],["bigint"]]],[11,"mul",E,E,1,[[["usize"]],["bigint"]]],[11,"mul",E,E,1,[[["usize"]],["bigint"]]],[11,"mul",E,E,1,[[["i8"]],["bigint"]]],[11,"mul",E,E,1,[[["i8"]],["bigint"]]],[11,"mul",E,E,1,[[["i16"]],["bigint"]]],[11,"mul",E,E,1,[[["i16"]],["bigint"]]],[11,"mul",E,E,1,[[["isize"]],["bigint"]]],[11,"mul",E,E,1,[[["isize"]],["bigint"]]],[11,"mul",E,E,1,[[["u32"]],["bigint"]]],[11,"mul",E,E,1,[[["u64"]],["bigint"]]],[11,"mul",E,E,1,[[["u128"]],["bigint"]]],[11,"mul",E,E,1,[[["u32"]],["bigint"]]],[11,"mul",E,E,1,[[["u64"]],["bigint"]]],[11,"mul",E,E,1,[[["u128"]],["bigint"]]],[11,"mul",E,E,1,[[["i32"]],["bigint"]]],[11,"mul",E,E,1,[[["i64"]],["bigint"]]],[11,"mul",E,E,1,[[["i128"]],["bigint"]]],[11,"mul",E,E,1,[[["i32"]],["bigint"]]],[11,"mul",E,E,1,[[["i64"]],["bigint"]]],[11,"mul",E,E,1,[[["i128"]],["bigint"]]],[11,"mul",E,E,2,[[[R[159]]],[R[159]]]],[11,"mul",E,E,2,[[[R[159]]],[R[159]]]],[11,"mul",E,E,2,[[["u8"]],[R[159]]]],[11,"mul",E,E,2,[[["u8"]],[R[159]]]],[11,"mul",E,E,2,[[["u16"]],[R[159]]]],[11,"mul",E,E,2,[[["u16"]],[R[159]]]],[11,"mul",E,E,2,[[["usize"]],[R[159]]]],[11,"mul",E,E,2,[[["usize"]],[R[159]]]],[11,"mul",E,E,2,[[["u32"]],[R[159]]]],[11,"mul",E,E,2,[[["u64"]],[R[159]]]],[11,"mul",E,E,2,[[["u128"]],[R[159]]]],[11,"mul",E,E,2,[[["u32"]],[R[159]]]],[11,"mul",E,E,2,[[["u64"]],[R[159]]]],[11,"mul",E,E,2,[[["u128"]],[R[159]]]],[11,"div",E,E,1,[[["bigint"]],["bigint"]]],[11,"div",E,E,1,[[["bigint"]],["bigint"]]],[11,"div",E,E,1,[[["u8"]],["bigint"]]],[11,"div",E,E,1,[[["u8"]],["bigint"]]],[11,"div",E,E,1,[[["u16"]],["bigint"]]],[11,"div",E,E,1,[[["u16"]],["bigint"]]],[11,"div",E,E,1,[[["usize"]],["bigint"]]],[11,"div",E,E,1,[[["usize"]],["bigint"]]],[11,"div",E,E,1,[[["i8"]],["bigint"]]],[11,"div",E,E,1,[[["i8"]],["bigint"]]],[11,"div",E,E,1,[[["i16"]],["bigint"]]],[11,"div",E,E,1,[[["i16"]],["bigint"]]],[11,"div",E,E,1,[[["isize"]],["bigint"]]],[11,"div",E,E,1,[[["isize"]],["bigint"]]],[11,"div",E,E,1,[[["u32"]],["bigint"]]],[11,"div",E,E,1,[[["u64"]],["bigint"]]],[11,"div",E,E,1,[[["u128"]],["bigint"]]],[11,"div",E,E,1,[[["u32"]],["bigint"]]],[11,"div",E,E,1,[[["u64"]],["bigint"]]],[11,"div",E,E,1,[[["u128"]],["bigint"]]],[11,"div",E,E,1,[[["i32"]],["bigint"]]],[11,"div",E,E,1,[[["i64"]],["bigint"]]],[11,"div",E,E,1,[[["i128"]],["bigint"]]],[11,"div",E,E,1,[[["i32"]],["bigint"]]],[11,"div",E,E,1,[[["i64"]],["bigint"]]],[11,"div",E,E,1,[[["i128"]],["bigint"]]],[11,"div",E,E,2,[[[R[159]]],[R[159]]]],[11,"div",E,E,2,[[[R[159]]],[R[159]]]],[11,"div",E,E,2,[[["u8"]],[R[159]]]],[11,"div",E,E,2,[[["u8"]],[R[159]]]],[11,"div",E,E,2,[[["u16"]],[R[159]]]],[11,"div",E,E,2,[[["u16"]],[R[159]]]],[11,"div",E,E,2,[[["usize"]],[R[159]]]],[11,"div",E,E,2,[[["usize"]],[R[159]]]],[11,"div",E,E,2,[[["u32"]],[R[159]]]],[11,"div",E,E,2,[[["u64"]],[R[159]]]],[11,"div",E,E,2,[[["u128"]],[R[159]]]],[11,"div",E,E,2,[[["u32"]],[R[159]]]],[11,"div",E,E,2,[[["u64"]],[R[159]]]],[11,"div",E,E,2,[[["u128"]],[R[159]]]],[11,"rem",E,E,1,[[["bigint"]],["bigint"]]],[11,"rem",E,E,1,[[["bigint"]],["bigint"]]],[11,"rem",E,E,1,[[["u8"]],["bigint"]]],[11,"rem",E,E,1,[[["u8"]],["bigint"]]],[11,"rem",E,E,1,[[["u16"]],["bigint"]]],[11,"rem",E,E,1,[[["u16"]],["bigint"]]],[11,"rem",E,E,1,[[["usize"]],["bigint"]]],[11,"rem",E,E,1,[[["usize"]],["bigint"]]],[11,"rem",E,E,1,[[["i8"]],["bigint"]]],[11,"rem",E,E,1,[[["i8"]],["bigint"]]],[11,"rem",E,E,1,[[["i16"]],["bigint"]]],[11,"rem",E,E,1,[[["i16"]],["bigint"]]],[11,"rem",E,E,1,[[["isize"]],["bigint"]]],[11,"rem",E,E,1,[[["isize"]],["bigint"]]],[11,"rem",E,E,1,[[["u32"]],["bigint"]]],[11,"rem",E,E,1,[[["u64"]],["bigint"]]],[11,"rem",E,E,1,[[["u128"]],["bigint"]]],[11,"rem",E,E,1,[[["u32"]],["bigint"]]],[11,"rem",E,E,1,[[["u64"]],["bigint"]]],[11,"rem",E,E,1,[[["u128"]],["bigint"]]],[11,"rem",E,E,1,[[["i32"]],["bigint"]]],[11,"rem",E,E,1,[[["i64"]],["bigint"]]],[11,"rem",E,E,1,[[["i128"]],["bigint"]]],[11,"rem",E,E,1,[[["i32"]],["bigint"]]],[11,"rem",E,E,1,[[["i64"]],["bigint"]]],[11,"rem",E,E,1,[[["i128"]],["bigint"]]],[11,"rem",E,E,2,[[[R[159]]],[R[159]]]],[11,"rem",E,E,2,[[[R[159]]],[R[159]]]],[11,"rem",E,E,2,[[["u8"]],[R[159]]]],[11,"rem",E,E,2,[[["u8"]],[R[159]]]],[11,"rem",E,E,2,[[["u16"]],[R[159]]]],[11,"rem",E,E,2,[[["u16"]],[R[159]]]],[11,"rem",E,E,2,[[["usize"]],[R[159]]]],[11,"rem",E,E,2,[[["usize"]],[R[159]]]],[11,"rem",E,E,2,[[["u32"]],[R[159]]]],[11,"rem",E,E,2,[[["u32"]],[R[159]]]],[11,"rem",E,E,2,[[["u64"]],[R[159]]]],[11,"rem",E,E,2,[[["u128"]],[R[159]]]],[11,"rem",E,E,2,[[["u64"]],[R[159]]]],[11,"rem",E,E,2,[[["u128"]],[R[159]]]],[11,"neg",E,R[391],0,[[],["sign"]]],[11,"neg",E,E,1,[[],["bigint"]]],[11,"neg",E,E,2,[[],[R[159]]]],[11,R[124],E,E,1,[[["self"],["bigint"]]]],[11,R[124],E,E,1,[[["self"],["bigint"]]]],[11,R[124],E,E,1,[[["self"],["u8"]]]],[11,R[124],E,E,1,[[["self"],["u16"]]]],[11,R[124],E,E,1,[[["self"],["usize"]]]],[11,R[124],E,E,1,[[["self"],["i8"]]]],[11,R[124],E,E,1,[[["self"],["i16"]]]],[11,R[124],E,E,1,[[["self"],["isize"]]]],[11,R[124],E,E,1,[[["self"],["u32"]]]],[11,R[124],E,E,1,[[["self"],["u64"]]]],[11,R[124],E,E,1,[[["self"],["u128"]]]],[11,R[124],E,E,1,[[["self"],["i32"]]]],[11,R[124],E,E,1,[[["self"],["i64"]]]],[11,R[124],E,E,1,[[["self"],["i128"]]]],[11,R[124],E,E,2,[[["self"],[R[159]]]]],[11,R[124],E,E,2,[[["self"],[R[159]]]]],[11,R[124],E,E,2,[[["self"],["u8"]]]],[11,R[124],E,E,2,[[["self"],["u16"]]]],[11,R[124],E,E,2,[[["self"],["usize"]]]],[11,R[124],E,E,2,[[["self"],["u32"]]]],[11,R[124],E,E,2,[[["self"],["u64"]]]],[11,R[124],E,E,2,[[["self"],["u128"]]]],[11,R[125],E,E,1,[[["self"],["bigint"]]]],[11,R[125],E,E,1,[[["self"],["bigint"]]]],[11,R[125],E,E,1,[[["self"],["u8"]]]],[11,R[125],E,E,1,[[["self"],["u16"]]]],[11,R[125],E,E,1,[[["self"],["usize"]]]],[11,R[125],E,E,1,[[["self"],["i8"]]]],[11,R[125],E,E,1,[[["self"],["i16"]]]],[11,R[125],E,E,1,[[["self"],["isize"]]]],[11,R[125],E,E,1,[[["self"],["u32"]]]],[11,R[125],E,E,1,[[["self"],["u64"]]]],[11,R[125],E,E,1,[[["self"],["u128"]]]],[11,R[125],E,E,1,[[["self"],["i32"]]]],[11,R[125],E,E,1,[[["self"],["i64"]]]],[11,R[125],E,E,1,[[["self"],["i128"]]]],[11,R[125],E,E,2,[[["self"],[R[159]]]]],[11,R[125],E,E,2,[[["self"],[R[159]]]]],[11,R[125],E,E,2,[[["self"],["u8"]]]],[11,R[125],E,E,2,[[["self"],["u16"]]]],[11,R[125],E,E,2,[[["self"],["usize"]]]],[11,R[125],E,E,2,[[["self"],["u32"]]]],[11,R[125],E,E,2,[[["self"],["u64"]]]],[11,R[125],E,E,2,[[["self"],["u128"]]]],[11,R[126],E,E,1,[[["self"],["bigint"]]]],[11,R[126],E,E,1,[[["self"],["bigint"]]]],[11,R[126],E,E,1,[[["self"],["u8"]]]],[11,R[126],E,E,1,[[["self"],["u16"]]]],[11,R[126],E,E,1,[[["self"],["usize"]]]],[11,R[126],E,E,1,[[["self"],["i8"]]]],[11,R[126],E,E,1,[[["self"],["i16"]]]],[11,R[126],E,E,1,[[["self"],["isize"]]]],[11,R[126],E,E,1,[[["self"],["u32"]]]],[11,R[126],E,E,1,[[["self"],["u64"]]]],[11,R[126],E,E,1,[[["self"],["u128"]]]],[11,R[126],E,E,1,[[["self"],["i32"]]]],[11,R[126],E,E,1,[[["self"],["i64"]]]],[11,R[126],E,E,1,[[["self"],["i128"]]]],[11,R[126],E,E,2,[[["self"],[R[159]]]]],[11,R[126],E,E,2,[[["self"],[R[159]]]]],[11,R[126],E,E,2,[[["self"],["u8"]]]],[11,R[126],E,E,2,[[["self"],["u16"]]]],[11,R[126],E,E,2,[[["self"],["usize"]]]],[11,R[126],E,E,2,[[["self"],["u32"]]]],[11,R[126],E,E,2,[[["self"],["u64"]]]],[11,R[126],E,E,2,[[["self"],["u128"]]]],[11,R[127],E,E,1,[[["self"],["bigint"]]]],[11,R[127],E,E,1,[[["self"],["bigint"]]]],[11,R[127],E,E,1,[[["self"],["u8"]]]],[11,R[127],E,E,1,[[["self"],["u16"]]]],[11,R[127],E,E,1,[[["self"],["usize"]]]],[11,R[127],E,E,1,[[["self"],["i8"]]]],[11,R[127],E,E,1,[[["self"],["i16"]]]],[11,R[127],E,E,1,[[["self"],["isize"]]]],[11,R[127],E,E,1,[[["self"],["u32"]]]],[11,R[127],E,E,1,[[["self"],["u64"]]]],[11,R[127],E,E,1,[[["self"],["u128"]]]],[11,R[127],E,E,1,[[["self"],["i32"]]]],[11,R[127],E,E,1,[[["self"],["i64"]]]],[11,R[127],E,E,1,[[["self"],["i128"]]]],[11,R[127],E,E,2,[[["self"],[R[159]]]]],[11,R[127],E,E,2,[[["self"],[R[159]]]]],[11,R[127],E,E,2,[[["self"],["u8"]]]],[11,R[127],E,E,2,[[["self"],["u16"]]]],[11,R[127],E,E,2,[[["self"],["usize"]]]],[11,R[127],E,E,2,[[["self"],["u32"]]]],[11,R[127],E,E,2,[[["self"],["u64"]]]],[11,R[127],E,E,2,[[["self"],["u128"]]]],[11,R[128],E,E,1,[[["self"],["bigint"]]]],[11,R[128],E,E,1,[[["self"],["bigint"]]]],[11,R[128],E,E,1,[[["self"],["u8"]]]],[11,R[128],E,E,1,[[["self"],["u16"]]]],[11,R[128],E,E,1,[[["self"],["usize"]]]],[11,R[128],E,E,1,[[["self"],["i8"]]]],[11,R[128],E,E,1,[[["self"],["i16"]]]],[11,R[128],E,E,1,[[["self"],["isize"]]]],[11,R[128],E,E,1,[[["self"],["u32"]]]],[11,R[128],E,E,1,[[["self"],["u64"]]]],[11,R[128],E,E,1,[[["self"],["u128"]]]],[11,R[128],E,E,1,[[["self"],["i32"]]]],[11,R[128],E,E,1,[[["self"],["i64"]]]],[11,R[128],E,E,1,[[["self"],["i128"]]]],[11,R[128],E,E,2,[[["self"],[R[159]]]]],[11,R[128],E,E,2,[[["self"],[R[159]]]]],[11,R[128],E,E,2,[[["self"],["u8"]]]],[11,R[128],E,E,2,[[["self"],["u16"]]]],[11,R[128],E,E,2,[[["self"],["usize"]]]],[11,R[128],E,E,2,[[["self"],["u32"]]]],[11,R[128],E,E,2,[[["self"],["u64"]]]],[11,R[128],E,E,2,[[["self"],["u128"]]]],[11,"not",E,E,1,[[],["bigint"]]],[11,"bitand",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitand",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitand",E,E,2,[[[R[159]]],[R[159]]]],[11,"bitand",E,E,2,[[[R[159]]],[R[159]]]],[11,"bitor",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitor",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitor",E,E,2,[[[R[159]]],[R[159]]]],[11,"bitor",E,E,2,[[[R[159]]],[R[159]]]],[11,"bitxor",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitxor",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitxor",E,E,2,[[[R[159]]],[R[159]]]],[11,"bitxor",E,E,2,[[[R[159]]],[R[159]]]],[11,"shl",E,E,1,[[["usize"]],["bigint"]]],[11,"shl",E,E,2,[[["usize"]],[R[159]]]],[11,"shr",E,E,1,[[["usize"]],["bigint"]]],[11,"shr",E,E,2,[[["usize"]],[R[159]]]],[11,R[183],E,E,1,[[["self"],["bigint"]]]],[11,R[183],E,E,1,[[["self"],["bigint"]]]],[11,R[183],E,E,2,[[["self"],[R[159]]]]],[11,R[183],E,E,2,[[["self"],[R[159]]]]],[11,R[184],E,E,1,[[["self"],["bigint"]]]],[11,R[184],E,E,1,[[["self"],["bigint"]]]],[11,R[184],E,E,2,[[["self"],[R[159]]]]],[11,R[184],E,E,2,[[["self"],[R[159]]]]],[11,R[185],E,E,1,[[["self"],["bigint"]]]],[11,R[185],E,E,1,[[["self"],["bigint"]]]],[11,R[185],E,E,2,[[["self"],[R[159]]]]],[11,R[185],E,E,2,[[["self"],[R[159]]]]],[11,R[186],E,E,1,[[["self"],["usize"]]]],[11,R[186],E,E,2,[[["self"],["usize"]]]],[11,R[187],E,E,1,[[["self"],["usize"]]]],[11,R[187],E,E,2,[[["self"],["usize"]]]],[11,"fmt",E,E,0,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,1,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,2,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,5,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,1,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,2,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,5,[[["self"],[R[88]]],[R[86]]]],[11,R[203],E,E,1,[[["str"]],[[R[86],["bigint",R[182]]],[R[182]],["bigint"]]]],[11,R[203],E,E,2,[[["str"]],[[R[159]],[R[182]],[R[86],[R[159],R[182]]]]]],[11,"fmt",E,E,1,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,2,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,1,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,2,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,1,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,2,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,1,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,2,[[["self"],[R[88]]],[R[86]]]],[11,R[214],E,E,1,[[["i"]],["self"]]],[11,R[214],E,E,2,[[["i"]],["self"]]],[11,"sum",E,E,1,[[["i"]],["self"]]],[11,"sum",E,E,2,[[["i"]],["self"]]],[11,R[204],E,E,5,[[["self"]],["str"]]],[11,R[188],E,E,1,[[["self"],["u32"]],["self"]]],[11,"sqrt",E,E,1,[[["self"]],["self"]]],[11,"cbrt",E,E,1,[[["self"]],["self"]]],[11,R[188],E,E,2,[[["self"],["u32"]],["self"]]],[11,"sqrt",E,E,2,[[["self"]],["self"]]],[11,"cbrt",E,E,2,[[["self"]],["self"]]],[11,R[392],E,E,1,[[["self"],["bigint"]]]],[11,R[115],E,E,1,[[["self"],["bigint"]],["bigint"]]],[11,R[116],E,E,1,[[["self"],["bigint"]],["bigint"]]],[11,R[117],E,E,1,[[["self"],["bigint"]]]],[11,"gcd",E,R[189],1,[[["self"],["bigint"]],["bigint"]]],[11,"lcm",E,R[190],1,[[["self"],["bigint"]],["bigint"]]],[11,R[393],E,R[191],1,[[["self"],["bigint"]],["bool"]]],[11,R[192],E,R[193],1,[[["self"],["bigint"]],["bool"]]],[11,R[394],E,R[194],1,[[["self"]],["bool"]]],[11,"is_odd",E,R[195],1,[[["self"]],["bool"]]],[11,R[392],E,E,2,[[["self"],[R[159]]]]],[11,R[115],E,E,2,[[["self"],[R[159]]],[R[159]]]],[11,R[116],E,E,2,[[["self"],[R[159]]],[R[159]]]],[11,R[117],E,E,2,[[["self"],[R[159]]]]],[11,"gcd",E,R[189],2,[[["self"]],["self"]]],[11,"lcm",E,R[190],2,[[["self"],[R[159]]],[R[159]]]],[11,R[393],E,R[191],2,[[["self"],[R[159]]],["bool"]]],[11,R[192],E,R[193],2,[[["self"],[R[159]]],["bool"]]],[11,R[394],E,R[194],2,[[["self"]],["bool"]]],[11,"is_odd",E,R[195],2,[[["self"]],["bool"]]],[11,"zero",E,E,1,[[],["bigint"]]],[11,R[208],E,E,1,[[["self"]]]],[11,R[372],E,E,1,[[["self"]],["bool"]]],[11,"zero",E,E,2,[[],[R[159]]]],[11,R[208],E,E,2,[[["self"]]]],[11,R[372],E,E,2,[[["self"]],["bool"]]],[11,"abs",E,E,1,[[["self"]],["bigint"]]],[11,R[79],E,E,1,[[["self"],["bigint"]],["bigint"]]],[11,R[82],E,E,1,[[["self"]],["bigint"]]],[11,R[209],E,E,1,[[["self"]],["bool"]]],[11,R[210],E,E,1,[[["self"]],["bool"]]],[11,R[138],E,R[196],1,[[["u32"],["str"]],[[R[86],["bigint",R[182]]],[R[182]],["bigint"]]]],[11,R[138],E,R[156],2,[[["u32"],["str"]],[[R[159]],[R[182]],[R[86],[R[159],R[182]]]]]],[11,"to_i64",E,E,1,[[["self"]],[["i64"],[R[4],["i64"]]]]],[11,R[370],E,E,1,[[["self"]],[[R[4],["i128"]],["i128"]]]],[11,"to_u64",E,E,1,[[["self"]],[[R[4],["u64"]],["u64"]]]],[11,R[369],E,E,1,[[["self"]],[["u128"],[R[4],["u128"]]]]],[11,"to_f32",E,E,1,[[["self"]],[["f32"],[R[4],["f32"]]]]],[11,"to_f64",E,E,1,[[["self"]],[[R[4],["f64"]],["f64"]]]],[11,"to_i64",E,E,2,[[["self"]],[["i64"],[R[4],["i64"]]]]],[11,R[370],E,E,2,[[["self"]],[[R[4],["i128"]],["i128"]]]],[11,"to_u64",E,E,2,[[["self"]],[[R[4],["u64"]],["u64"]]]],[11,R[369],E,E,2,[[["self"]],[["u128"],[R[4],["u128"]]]]],[11,"to_f32",E,E,2,[[["self"]],[["f32"],[R[4],["f32"]]]]],[11,"to_f64",E,E,2,[[["self"]],[[R[4],["f64"]],["f64"]]]],[11,R[206],E,E,1,[[["i64"]],[[R[4],["bigint"]],["bigint"]]]],[11,R[134],E,E,1,[[["i128"]],[[R[4],["bigint"]],["bigint"]]]],[11,R[205],E,E,1,[[["u64"]],[[R[4],["bigint"]],["bigint"]]]],[11,R[136],E,E,1,[[["u128"]],[[R[4],["bigint"]],["bigint"]]]],[11,R[207],E,E,1,[[["f64"]],[[R[4],["bigint"]],["bigint"]]]],[11,R[206],E,E,2,[[["i64"]],[[R[4],[R[159]]],[R[159]]]]],[11,R[134],E,E,2,[[["i128"]],[[R[4],[R[159]]],[R[159]]]]],[11,R[205],E,E,2,[[["u64"]],[[R[4],[R[159]]],[R[159]]]]],[11,R[136],E,E,2,[[["u128"]],[[R[4],[R[159]]],[R[159]]]]],[11,R[207],E,E,2,[[["f64"]],[[R[4],[R[159]]],[R[159]]]]],[11,"one",E,E,1,[[],["bigint"]]],[11,R[371],E,E,1,[[["self"]]]],[11,"is_one",E,E,1,[[["self"]],["bool"]]],[11,"one",E,E,2,[[],[R[159]]]],[11,R[371],E,E,2,[[["self"]]]],[11,"is_one",E,E,2,[[["self"]],["bool"]]],[11,R[197],E,E,1,[[["self"],["bigint"]],[[R[4],["bigint"]],["bigint"]]]],[11,R[197],E,E,2,[[["self"],[R[159]]],[[R[4],[R[159]]],[R[159]]]]],[11,R[198],E,E,1,[[["self"],["bigint"]],[[R[4],["bigint"]],["bigint"]]]],[11,R[198],E,E,2,[[["self"],[R[159]]],[[R[4],[R[159]]],[R[159]]]]],[11,R[199],E,E,1,[[["self"],["bigint"]],[[R[4],["bigint"]],["bigint"]]]],[11,R[199],E,E,2,[[["self"],[R[159]]],[[R[4],[R[159]]],[R[159]]]]],[11,R[200],E,E,1,[[["self"],["bigint"]],[[R[4],["bigint"]],["bigint"]]]],[11,R[200],E,E,2,[[["self"],[R[159]]],[[R[4],[R[159]]],[R[159]]]]]],"p":[[4,"Sign"],[3,"BigInt"],[3,"BigUint"],[8,R[201]],[8,R[388]],[3,R[202]]]};
searchIndex["num_complex"]={"doc":"Complex numbers.","i":[[3,"Complex","num_complex",R[255],N,N],[12,"re",E,R[256],0,N],[12,"im",E,R[257],0,N],[3,R[131],E,E,N,N],[6,R[395],E,E,N,N],[6,R[396],E,E,N,N],[11,"new",E,R[397],0,[[[T]],["self"]]],[11,"i",E,R[398],0,[[],["self"]]],[11,"norm_sqr",E,R[399],0,[[["self"]],[T]]],[11,"scale",E,R[400],0,[[["self"],[T]],["self"]]],[11,"unscale",E,R[401],0,[[["self"],[T]],["self"]]],[11,"powu",E,R[402],0,[[["self"],["u32"]],["self"]]],[11,"conj",E,R[403],0,[[["self"]],["self"]]],[11,"inv",E,R[404],0,[[["self"]],["self"]]],[11,"powi",E,R[405],0,[[["self"],["i32"]],["self"]]],[11,"l1_norm",E,R[406],0,[[["self"]],[T]]],[11,"norm",E,R[407],0,[[["self"]],[T]]],[11,"arg",E,R[408],0,[[["self"]],[T]]],[11,"to_polar",E,R[409],0,[[["self"]]]],[11,R[410],E,R[411],0,[[[T]],["self"]]],[11,"exp",E,R[412],0,[[["self"]],["self"]]],[11,"ln",E,R[413],0,[[["self"]],["self"]]],[11,"sqrt",E,R[414],0,[[["self"]],["self"]]],[11,"cbrt",E,R[415],0,[[["self"]],["self"]]],[11,"powf",E,R[416],0,[[["self"],[T]],["self"]]],[11,"log",E,R[417],0,[[["self"],[T]],["self"]]],[11,"powc",E,R[418],0,[[["self"]],["self"]]],[11,"expf",E,R[419],0,[[["self"],[T]],["self"]]],[11,"sin",E,R[420],0,[[["self"]],["self"]]],[11,"cos",E,R[421],0,[[["self"]],["self"]]],[11,"tan",E,R[422],0,[[["self"]],["self"]]],[11,"asin",E,R[423],0,[[["self"]],["self"]]],[11,"acos",E,R[424],0,[[["self"]],["self"]]],[11,"atan",E,R[425],0,[[["self"]],["self"]]],[11,"sinh",E,R[426],0,[[["self"]],["self"]]],[11,"cosh",E,R[427],0,[[["self"]],["self"]]],[11,"tanh",E,R[428],0,[[["self"]],["self"]]],[11,"asinh",E,R[429],0,[[["self"]],["self"]]],[11,"acosh",E,R[430],0,[[["self"]],["self"]]],[11,"atanh",E,R[431],0,[[["self"]],["self"]]],[11,"finv",E,R[432],0,[[["self"]],[R[123]]]],[11,"fdiv",E,R[433],0,[[["self"],[R[123]]],[R[123]]]],[11,"is_nan",E,R[434],0,[[],["bool"]]],[11,R[16],E,R[435],0,[[],["bool"]]],[11,R[17],E,R[436],0,[[],["bool"]]],[11,R[18],E,R[437],0,[[],["bool"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[84],E,E,0,[[[U]],[R[86]]]],[11,"into",E,E,0,[[],[U]]],[11,R[85],E,E,0,[[],[R[86]]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[87],E,E,0,[[["self"]],[T]]],[11,R[139],E,E,0,[[["self"]],["typeid"]]],[11,R[141],E,E,0,[[["self"]],[T]]],[11,R[132],E,E,0,[[["self"],[T]]]],[11,R[121],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[84],E,E,1,[[[U]],[R[86]]]],[11,"into",E,E,1,[[],[U]]],[11,R[85],E,E,1,[[],[R[86]]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[87],E,E,1,[[["self"]],[T]]],[11,R[139],E,E,1,[[["self"]],["typeid"]]],[11,R[121],E,E,1,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],["self"]]],[11,"from",E,E,0,[[[T]],["self"]]],[11,"eq",E,E,0,[[["self"],[R[123]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[123]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[122]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[122]]],["bool"]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"add",E,E,0,[[[R[123]]]]],[11,"add",E,E,0,[[]]],[11,"add",E,E,0,[[[T]]]],[11,"add",E,E,0,[[[T]]]],[11,"sub",E,E,0,[[[R[123]]]]],[11,"sub",E,E,0,[[]]],[11,"sub",E,E,0,[[[T]]]],[11,"sub",E,E,0,[[[T]]]],[11,"mul",E,E,0,[[[R[123]]]]],[11,"mul",E,E,0,[[]]],[11,"mul",E,E,0,[[[T]]]],[11,"mul",E,E,0,[[[T]]]],[11,"div",E,E,0,[[[R[123]]]]],[11,"div",E,E,0,[[]]],[11,"div",E,E,0,[[[T]]]],[11,"div",E,E,0,[[[T]]]],[11,"rem",E,E,0,[[[R[123]]]]],[11,"rem",E,E,0,[[]]],[11,"rem",E,E,0,[[[T]]]],[11,"rem",E,E,0,[[[T]]]],[11,"neg",E,E,0,[[]]],[11,R[124],E,E,0,[[["self"]]]],[11,R[124],E,E,0,[[["self"],[T]]]],[11,R[124],E,E,0,[[["self"],["self"]]]],[11,R[124],E,E,0,[[["self"],[T]]]],[11,R[125],E,E,0,[[["self"]]]],[11,R[125],E,E,0,[[["self"],[T]]]],[11,R[125],E,E,0,[[["self"],["self"]]]],[11,R[125],E,E,0,[[["self"],[T]]]],[11,R[126],E,E,0,[[["self"]]]],[11,R[126],E,E,0,[[["self"],[T]]]],[11,R[126],E,E,0,[[["self"],["self"]]]],[11,R[126],E,E,0,[[["self"],[T]]]],[11,R[127],E,E,0,[[["self"]]]],[11,R[127],E,E,0,[[["self"],[T]]]],[11,R[127],E,E,0,[[["self"],["self"]]]],[11,R[127],E,E,0,[[["self"],[T]]]],[11,R[128],E,E,0,[[["self"]]]],[11,R[128],E,E,0,[[["self"],[T]]]],[11,R[128],E,E,0,[[["self"],["self"]]]],[11,R[128],E,E,0,[[["self"],[T]]]],[11,"fmt",E,E,0,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,0,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,1,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,0,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,0,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,1,[[["self"],[R[88]]],[R[86]]]],[11,R[203],E,R[129],0,[[["str"]],[R[86]]]],[11,"fmt",E,E,0,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,0,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,0,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,0,[[["self"],[R[88]]],[R[86]]]],[11,R[214],E,E,0,[[["i"]],["self"]]],[11,R[214],E,E,0,[[["i"]],["self"]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,"clone",E,E,0,[[["self"]],[R[123]]]],[11,R[438],E,E,0,[[],[R[123]]]],[11,R[204],E,E,1,[[["self"]],["str"]]],[11,R[290],E,E,0,[[["self"]],[[R[4],["usize"]],["usize"]]]],[11,R[289],E,E,0,[[["self"]],[["isize"],[R[4],["isize"]]]]],[11,"to_u8",E,E,0,[[["self"]],[[R[4],["u8"]],["u8"]]]],[11,"to_u16",E,E,0,[[["self"]],[["u16"],[R[4],["u16"]]]]],[11,"to_u32",E,E,0,[[["self"]],[["u32"],[R[4],["u32"]]]]],[11,"to_u64",E,E,0,[[["self"]],[[R[4],["u64"]],["u64"]]]],[11,"to_i8",E,E,0,[[["self"]],[[R[4],["i8"]],["i8"]]]],[11,"to_i16",E,E,0,[[["self"]],[["i16"],[R[4],["i16"]]]]],[11,"to_i32",E,E,0,[[["self"]],[["i32"],[R[4],["i32"]]]]],[11,"to_i64",E,E,0,[[["self"]],[["i64"],[R[4],["i64"]]]]],[11,R[369],E,E,0,[[["self"]],[["u128"],[R[4],["u128"]]]]],[11,R[370],E,E,0,[[["self"]],[[R[4],["i128"]],["i128"]]]],[11,"to_f32",E,E,0,[[["self"]],[["f32"],[R[4],["f32"]]]]],[11,"to_f64",E,E,0,[[["self"]],[[R[4],["f64"]],["f64"]]]],[11,R[135],E,E,0,[[["usize"]],[R[4]]]],[11,R[133],E,E,0,[[["isize"]],[R[4]]]],[11,R[492],E,E,0,[[["u8"]],[R[4]]]],[11,R[293],E,E,0,[[["u16"]],[R[4]]]],[11,R[294],E,E,0,[[["u32"]],[R[4]]]],[11,R[205],E,E,0,[[["u64"]],[R[4]]]],[11,R[491],E,E,0,[[["i8"]],[R[4]]]],[11,R[291],E,E,0,[[["i16"]],[R[4]]]],[11,R[292],E,E,0,[[["i32"]],[R[4]]]],[11,R[206],E,E,0,[[["i64"]],[R[4]]]],[11,R[136],E,E,0,[[["u128"]],[R[4]]]],[11,R[134],E,E,0,[[["i128"]],[R[4]]]],[11,R[215],E,E,0,[[["f32"]],[R[4]]]],[11,R[207],E,E,0,[[["f64"]],[R[4]]]],[11,"from",E,E,0,[[[R[137]]],[R[4]]]],[11,"as_",E,E,0,[[],[U]]],[11,R[138],E,R[129],0,[[["u32"],["str"]],[R[86]]]],[11,"zero",E,E,0,[[],["self"]]],[11,R[372],E,E,0,[[["self"]],["bool"]]],[11,R[208],E,E,0,[[["self"]]]],[11,"one",E,E,0,[[],["self"]]],[11,"is_one",E,E,0,[[["self"]],["bool"]]],[11,R[371],E,E,0,[[["self"]]]],[11,"inv",E,E,0,[[]]],[11,R[43],E,E,0,[[[R[123]]],[R[123]]]],[11,R[130],E,E,0,[[["self"],[R[123]]]]],[11,R[130],E,E,0,[[["self"],[R[123]]]]],[11,"pow",E,E,0,[[["f32"]]]],[11,"pow",E,E,0,[[["f32"]]]],[11,"pow",E,E,0,[[["f64"]]]],[11,"pow",E,E,0,[[["f64"]]]],[11,"pow",E,E,0,[[[R[123]]]]],[11,"pow",E,E,0,[[[R[123]]]]]],"p":[[3,"Complex"],[3,R[131]]]};
searchIndex["num_integer"]={"doc":"Integer trait and functions.","i":[[3,R[119],"num_integer",R[439],N,N],[12,"gcd",E,E,0,N],[12,"x",E,E,0,N],[12,"y",E,E,0,N],[3,R[120],E,R[440],N,N],[5,"cbrt",E,R[114],N,[[["roots"]],["roots"]]],[5,R[188],E,R[112],N,[[["u32"],["roots"]],["roots"]]],[5,"sqrt",E,R[113],N,[[["roots"]],["roots"]]],[5,R[392],E,R[441],N,[[[R[111]]]]],[5,R[115],E,R[442],N,[[[R[111]]],[R[111]]]],[5,R[116],E,R[443],N,[[[R[111]]],[R[111]]]],[5,R[117],E,R[444],N,[[[R[111]]]]],[5,R[277],E,R[445],N,[[[R[111]]],[R[111]]]],[5,"gcd",E,R[189],N,[[[R[111]]],[R[111]]]],[5,"lcm",E,R[190],N,[[[R[111]]],[R[111]]]],[5,"gcd_lcm",E,R[446],N,[[[R[111]]]]],[5,"binomial",E,R[447],N,[[[R[111]],["clone"]],[["clone"],[R[111]]]]],[5,R[448],E,R[449],N,[[],[["clone"],[R[111]]]]],[8,"Roots",E,R[450],N,N],[10,R[188],E,R[112],1,[[["self"],["u32"]],["self"]]],[11,"sqrt",E,R[113],1,[[["self"]],["self"]]],[11,"cbrt",E,R[114],1,[[["self"]],["self"]]],[8,"Integer",E,E,N,N],[10,R[115],E,R[258],2,[[["self"]],["self"]]],[10,R[116],E,R[259],2,[[["self"]],["self"]]],[11,R[277],E,R[260],2,[[["self"]],["self"]]],[10,"gcd",E,R[261],2,[[["self"]],["self"]]],[10,"lcm",E,R[262],2,[[["self"]],["self"]]],[11,"gcd_lcm",E,R[263],2,[[["self"]]]],[11,R[264],E,R[265],2,[[["self"]],[R[118]]]],[11,R[266],E,R[267],2,[[["self"]]]],[10,R[393],E,R[191],2,[[["self"]],["bool"]]],[10,R[192],E,R[268],2,[[["self"]],["bool"]]],[10,R[394],E,R[269],2,[[["self"]],["bool"]]],[10,"is_odd",E,R[270],2,[[["self"]],["bool"]]],[10,R[392],E,R[271],2,[[["self"]]]],[11,R[117],E,R[272],2,[[["self"]]]],[11,R[273],E,R[274],2,[[["self"]],["self"]]],[11,R[275],E,R[276],2,[[["self"]],["self"]]],[11,"new",E,R[451],3,[[[T]],[R[452]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[84],E,E,0,[[[U]],[R[86]]]],[11,"into",E,E,0,[[],[U]]],[11,R[85],E,E,0,[[],[R[86]]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[87],E,E,0,[[["self"]],[T]]],[11,R[139],E,E,0,[[["self"]],["typeid"]]],[11,R[141],E,E,0,[[["self"]],[T]]],[11,R[132],E,E,0,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[84],E,E,3,[[[U]],[R[86]]]],[11,"into",E,E,3,[[],[U]]],[11,R[85],E,E,3,[[],[R[86]]]],[11,R[140],E,E,3,[[],["i"]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[87],E,E,3,[[["self"]],[T]]],[11,R[139],E,E,3,[[["self"]],["typeid"]]],[11,"eq",E,E,0,[[["self"],[R[118]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[118]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[88]]],[R[86]]]],[11,"next",E,E,3,[[["self"]],[R[4]]]],[11,"clone",E,E,0,[[["self"]],[R[118]]]],[11,"sqrt",E,R[113],1,[[["self"]],["self"]]],[11,"cbrt",E,R[114],1,[[["self"]],["self"]]]],"p":[[3,R[119]],[8,"Roots"],[8,"Integer"],[3,R[120]]]};
searchIndex["num_iter"]={"doc":"External iterators for generic mathematics","i":[[3,"Range","num_iter",R[453],N,N],[3,R[147],E,R[454],N,N],[3,R[148],E,R[455],N,N],[3,R[149],E,R[456],N,N],[5,"range",E,R[278],N,[[["a"]],["range"]]],[5,R[279],E,R[280],N,[[["a"]],[R[144]]]],[5,R[281],E,R[282],N,[[["a"]],[R[145]]]],[5,R[283],E,R[284],N,[[["a"]],[R[146]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[84],E,E,0,[[[U]],[R[86]]]],[11,"into",E,E,0,[[],[U]]],[11,R[85],E,E,0,[[],[R[86]]]],[11,R[140],E,E,0,[[],["i"]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[87],E,E,0,[[["self"]],[T]]],[11,R[139],E,E,0,[[["self"]],["typeid"]]],[11,R[141],E,E,0,[[["self"]],[T]]],[11,R[132],E,E,0,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[84],E,E,1,[[[U]],[R[86]]]],[11,"into",E,E,1,[[],[U]]],[11,R[85],E,E,1,[[],[R[86]]]],[11,R[140],E,E,1,[[],["i"]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[87],E,E,1,[[["self"]],[T]]],[11,R[139],E,E,1,[[["self"]],["typeid"]]],[11,R[141],E,E,1,[[["self"]],[T]]],[11,R[132],E,E,1,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[84],E,E,2,[[[U]],[R[86]]]],[11,"into",E,E,2,[[],[U]]],[11,R[85],E,E,2,[[],[R[86]]]],[11,R[140],E,E,2,[[],["i"]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[87],E,E,2,[[["self"]],[T]]],[11,R[139],E,E,2,[[["self"]],["typeid"]]],[11,R[141],E,E,2,[[["self"]],[T]]],[11,R[132],E,E,2,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[84],E,E,3,[[[U]],[R[86]]]],[11,"into",E,E,3,[[],[U]]],[11,R[85],E,E,3,[[],[R[86]]]],[11,R[140],E,E,3,[[],["i"]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[87],E,E,3,[[["self"]],[T]]],[11,R[139],E,E,3,[[["self"]],["typeid"]]],[11,R[141],E,E,3,[[["self"]],[T]]],[11,R[132],E,E,3,[[["self"],[T]]]],[11,"next",E,E,0,[[["self"]],[R[4]]]],[11,R[142],E,E,0,[[["self"]]]],[11,"next",E,E,1,[[["self"]],[R[4]]]],[11,R[142],E,E,1,[[["self"]]]],[11,"next",E,E,2,[[["self"]],[R[4]]]],[11,"next",E,E,3,[[["self"]],[R[4]]]],[11,R[143],E,E,0,[[["self"]],[R[4]]]],[11,R[143],E,E,1,[[["self"]],[R[4]]]],[11,"clone",E,E,0,[[["self"]],["range"]]],[11,"clone",E,E,1,[[["self"]],[R[144]]]],[11,"clone",E,E,2,[[["self"]],[R[145]]]],[11,"clone",E,E,3,[[["self"]],[R[146]]]]],"p":[[3,"Range"],[3,R[147]],[3,R[148]],[3,R[149]]]};
searchIndex["num_rational"]={"doc":"Rational numbers","i":[[3,"Ratio","num_rational",R[457],N,N],[3,R[216],E,E,N,N],[6,R[458],E,R[361],N,N],[6,R[459],E,R[460],N,N],[6,R[461],E,R[462],N,N],[6,R[362],E,R[363],N,N],[11,"new",E,R[463],0,[[[T]],["ratio"]]],[11,R[464],E,R[465],0,[[[T]],["ratio"]]],[11,"new_raw",E,R[466],0,[[[T]],["ratio"]]],[11,R[467],E,R[468],0,[[["self"]],[T]]],[11,"numer",E,R[469],0,[[["self"]],[T]]],[11,"denom",E,R[470],0,[[["self"]],[T]]],[11,R[471],E,R[472],0,[[["self"]],["bool"]]],[11,"reduced",E,R[473],0,[[["self"]],["ratio"]]],[11,"recip",E,R[474],0,[[["self"]],["ratio"]]],[11,"floor",E,R[475],0,[[["self"]],["ratio"]]],[11,"ceil",E,R[476],0,[[["self"]],["ratio"]]],[11,"round",E,R[477],0,[[["self"]],["ratio"]]],[11,"trunc",E,R[478],0,[[["self"]],["ratio"]]],[11,"fract",E,R[479],0,[[["self"]],["ratio"]]],[11,"pow",E,R[480],0,[[["self"],["i32"]],["ratio"]]],[11,R[481],E,R[482],0,[[[R[212]]],[[R[211]],[R[4],[R[211]]]]]],[11,R[483],E,E,0,[[[R[3]],[R[212]]],[[R[4],["ratio"]],["ratio"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[84],E,E,0,[[[U]],[R[86]]]],[11,"into",E,E,0,[[],[U]]],[11,R[85],E,E,0,[[],[R[86]]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[87],E,E,0,[[["self"]],[T]]],[11,R[139],E,E,0,[[["self"]],["typeid"]]],[11,R[141],E,E,0,[[["self"]],[T]]],[11,R[132],E,E,0,[[["self"],[T]]]],[11,R[121],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[84],E,E,1,[[[U]],[R[86]]]],[11,"into",E,E,1,[[],[U]]],[11,R[85],E,E,1,[[],[R[86]]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[87],E,E,1,[[["self"]],[T]]],[11,R[139],E,E,1,[[["self"]],["typeid"]]],[11,R[141],E,E,1,[[["self"]],[T]]],[11,R[132],E,E,1,[[["self"],[T]]]],[11,R[121],E,E,1,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],["ratio"]]],[11,"from",E,E,0,[[],["ratio"]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[213]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[213]]],["bool"]]],[11,"cmp",E,E,0,[[["self"]],[R[181]]]],[11,R[180],E,E,0,[[["self"]],[[R[4],[R[181]]],[R[181]]]]],[11,"hash",E,E,0,[[["self"],["h"]]]],[11,"add",E,E,0,[[["ratio"]],["ratio"]]],[11,"add",E,E,0,[[[T]],["ratio"]]],[11,"add",E,E,0,[[["ratio"]],["ratio"]]],[11,"add",E,E,0,[[[T]],["ratio"]]],[11,"sub",E,E,0,[[["ratio"]],["ratio"]]],[11,"sub",E,E,0,[[[T]],["ratio"]]],[11,"sub",E,E,0,[[["ratio"]],["ratio"]]],[11,"sub",E,E,0,[[[T]],["ratio"]]],[11,"mul",E,E,0,[[["ratio"]],["ratio"]]],[11,"mul",E,E,0,[[[T]],["ratio"]]],[11,"mul",E,E,0,[[["ratio"]],["ratio"]]],[11,"mul",E,E,0,[[[T]],["ratio"]]],[11,"div",E,E,0,[[["ratio"]],["ratio"]]],[11,"div",E,E,0,[[[T]],["ratio"]]],[11,"div",E,E,0,[[["ratio"]],["ratio"]]],[11,"div",E,E,0,[[[T]],["ratio"]]],[11,"rem",E,E,0,[[["ratio"]],["ratio"]]],[11,"rem",E,E,0,[[[T]],["ratio"]]],[11,"rem",E,E,0,[[["ratio"]],["ratio"]]],[11,"rem",E,E,0,[[[T]],["ratio"]]],[11,"neg",E,E,0,[[],["ratio"]]],[11,R[124],E,E,0,[[["self"],["ratio"]]]],[11,R[124],E,E,0,[[["self"],[T]]]],[11,R[124],E,E,0,[[["self"],["ratio"]]]],[11,R[124],E,E,0,[[["self"],[T]]]],[11,R[125],E,E,0,[[["self"],["ratio"]]]],[11,R[125],E,E,0,[[["self"],[T]]]],[11,R[125],E,E,0,[[["self"],["ratio"]]]],[11,R[125],E,E,0,[[["self"],[T]]]],[11,R[126],E,E,0,[[["self"],["ratio"]]]],[11,R[126],E,E,0,[[["self"],[T]]]],[11,R[126],E,E,0,[[["self"],["ratio"]]]],[11,R[126],E,E,0,[[["self"],[T]]]],[11,R[127],E,E,0,[[["self"],["ratio"]]]],[11,R[127],E,E,0,[[["self"],[T]]]],[11,R[127],E,E,0,[[["self"],["ratio"]]]],[11,R[127],E,E,0,[[["self"],[T]]]],[11,R[128],E,E,0,[[["self"],["ratio"]]]],[11,R[128],E,E,0,[[["self"],[T]]]],[11,R[128],E,E,0,[[["self"],["ratio"]]]],[11,R[128],E,E,0,[[["self"],[T]]]],[11,"fmt",E,E,0,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,1,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,R[484],0,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,1,[[["self"],[R[88]]],[R[86]]]],[11,R[203],E,R[485],0,[[["str"]],[[R[213]],["ratio"],[R[86],["ratio",R[213]]]]]],[11,"into",E,E,0,[[]]],[11,R[214],E,E,0,[[["i"]],["self"]]],[11,R[214],E,E,0,[[["i"]],["self"]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,"clone",E,E,0,[[["self"]],["ratio"]]],[11,"clone",E,E,1,[[["self"]],[R[213]]]],[11,R[199],E,E,0,[[["self"],["ratio"]],[[R[4],["ratio"]],["ratio"]]]],[11,R[200],E,E,0,[[["self"],["ratio"]],[[R[4],["ratio"]],["ratio"]]]],[11,R[206],E,E,0,[[["i64"]],[R[4]]]],[11,R[134],E,E,0,[[["i128"]],[R[4]]]],[11,R[205],E,E,0,[[["u64"]],[R[4]]]],[11,R[136],E,E,0,[[["u128"]],[R[4]]]],[11,R[215],E,E,0,[[["f32"]],[R[4]]]],[11,R[207],E,E,0,[[["f64"]],[R[4]]]],[11,R[206],E,E,0,[[["i64"]],[R[4]]]],[11,R[134],E,E,0,[[["i128"]],[R[4]]]],[11,R[205],E,E,0,[[["u64"]],[R[4]]]],[11,R[136],E,E,0,[[["u128"]],[R[4]]]],[11,R[215],E,E,0,[[["f32"]],[R[4]]]],[11,R[207],E,E,0,[[["f64"]],[R[4]]]],[11,R[206],E,E,0,[[["i64"]],[R[4]]]],[11,R[134],E,E,0,[[["i128"]],[R[4]]]],[11,R[205],E,E,0,[[["u64"]],[R[4]]]],[11,R[136],E,E,0,[[["u128"]],[R[4]]]],[11,R[215],E,E,0,[[["f32"]],[R[4]]]],[11,R[207],E,E,0,[[["f64"]],[R[4]]]],[11,R[206],E,E,0,[[["i64"]],[R[4]]]],[11,R[134],E,E,0,[[["i128"]],[R[4]]]],[11,R[205],E,E,0,[[["u64"]],[R[4]]]],[11,R[136],E,E,0,[[["u128"]],[R[4]]]],[11,R[215],E,E,0,[[["f32"]],[R[4]]]],[11,R[207],E,E,0,[[["f64"]],[R[4]]]],[11,R[206],E,E,0,[[["i64"]],[R[4]]]],[11,R[134],E,E,0,[[["i128"]],[R[4]]]],[11,R[205],E,E,0,[[["u64"]],[R[4]]]],[11,R[136],E,E,0,[[["u128"]],[R[4]]]],[11,R[215],E,E,0,[[["f32"]],[R[4]]]],[11,R[207],E,E,0,[[["f64"]],[R[4]]]],[11,R[206],E,E,0,[[["i64"]],[R[4]]]],[11,R[134],E,E,0,[[["i128"]],[R[4]]]],[11,R[205],E,E,0,[[["u64"]],[R[4]]]],[11,R[136],E,E,0,[[["u128"]],[R[4]]]],[11,R[215],E,E,0,[[["f32"]],[R[4]]]],[11,R[207],E,E,0,[[["f64"]],[R[4]]]],[11,R[206],E,E,0,[[["i64"]],[R[4]]]],[11,R[134],E,E,0,[[["i128"]],[R[4]]]],[11,R[205],E,E,0,[[["u64"]],[R[4]]]],[11,R[136],E,E,0,[[["u128"]],[R[4]]]],[11,R[215],E,E,0,[[["f32"]],[R[4]]]],[11,R[207],E,E,0,[[["f64"]],[R[4]]]],[11,R[206],E,E,0,[[["i64"]],[R[4]]]],[11,R[134],E,E,0,[[["i128"]],[R[4]]]],[11,R[205],E,E,0,[[["u64"]],[R[4]]]],[11,R[136],E,E,0,[[["u128"]],[R[4]]]],[11,R[215],E,E,0,[[["f32"]],[R[4]]]],[11,R[207],E,E,0,[[["f64"]],[R[4]]]],[11,R[206],E,E,0,[[["i64"]],[R[4]]]],[11,R[134],E,E,0,[[["i128"]],[R[4]]]],[11,R[205],E,E,0,[[["u64"]],[R[4]]]],[11,R[136],E,E,0,[[["u128"]],[R[4]]]],[11,R[215],E,E,0,[[["f32"]],[R[4]]]],[11,R[207],E,E,0,[[["f64"]],[R[4]]]],[11,R[206],E,E,0,[[["i64"]],[R[4]]]],[11,R[134],E,E,0,[[["i128"]],[R[4]]]],[11,R[205],E,E,0,[[["u64"]],[R[4]]]],[11,R[136],E,E,0,[[["u128"]],[R[4]]]],[11,R[215],E,E,0,[[["f32"]],[R[4]]]],[11,R[207],E,E,0,[[["f64"]],[R[4]]]],[11,R[206],E,E,0,[[["i64"]],[R[4]]]],[11,R[134],E,E,0,[[["i128"]],[R[4]]]],[11,R[205],E,E,0,[[["u64"]],[R[4]]]],[11,R[136],E,E,0,[[["u128"]],[R[4]]]],[11,R[215],E,E,0,[[["f32"]],[R[4]]]],[11,R[207],E,E,0,[[["f64"]],[R[4]]]],[11,R[206],E,E,0,[[["i64"]],[R[4]]]],[11,R[134],E,E,0,[[["i128"]],[R[4]]]],[11,R[205],E,E,0,[[["u64"]],[R[4]]]],[11,R[136],E,E,0,[[["u128"]],[R[4]]]],[11,R[215],E,E,0,[[["f32"]],[R[4]]]],[11,R[207],E,E,0,[[["f64"]],[R[4]]]],[11,R[206],E,E,0,[[["i64"]],[R[4]]]],[11,R[134],E,E,0,[[["i128"]],[R[4]]]],[11,R[205],E,E,0,[[["u64"]],[R[4]]]],[11,R[136],E,E,0,[[["u128"]],[R[4]]]],[11,R[215],E,E,0,[[["f32"]],[R[4]]]],[11,R[207],E,E,0,[[["f64"]],[R[4]]]],[11,"zero",E,E,0,[[],["ratio"]]],[11,R[372],E,E,0,[[["self"]],["bool"]]],[11,R[208],E,E,0,[[["self"]]]],[11,"pow",E,E,0,[[["i8"]],["ratio"]]],[11,"pow",E,E,0,[[["i8"]],["ratio"]]],[11,"pow",E,E,0,[[["i16"]],["ratio"]]],[11,"pow",E,E,0,[[["i16"]],["ratio"]]],[11,"pow",E,E,0,[[["i32"]],["ratio"]]],[11,"pow",E,E,0,[[["i32"]],["ratio"]]],[11,"pow",E,E,0,[[["i64"]],["ratio"]]],[11,"pow",E,E,0,[[["i64"]],["ratio"]]],[11,"pow",E,E,0,[[["isize"]],["ratio"]]],[11,"pow",E,E,0,[[["isize"]],["ratio"]]],[11,"pow",E,E,0,[[["u8"]],["ratio"]]],[11,"pow",E,E,0,[[["u8"]],["ratio"]]],[11,"pow",E,E,0,[[["u16"]],["ratio"]]],[11,"pow",E,E,0,[[["u16"]],["ratio"]]],[11,"pow",E,E,0,[[["u32"]],["ratio"]]],[11,"pow",E,E,0,[[["u32"]],["ratio"]]],[11,"pow",E,E,0,[[["u64"]],["ratio"]]],[11,"pow",E,E,0,[[["u64"]],["ratio"]]],[11,"pow",E,E,0,[[["usize"]],["ratio"]]],[11,"pow",E,E,0,[[["usize"]],["ratio"]]],[11,"one",E,E,0,[[],["ratio"]]],[11,"is_one",E,E,0,[[["self"]],["bool"]]],[11,R[371],E,E,0,[[["self"]]]],[11,R[138],E,R[486],0,[[["u32"],["str"]],[[R[213]],["ratio"],[R[86],["ratio",R[213]]]]]],[11,R[198],E,E,0,[[["self"],["ratio"]],[[R[4],["ratio"]],["ratio"]]]],[11,R[197],E,E,0,[[["self"],["ratio"]],[[R[4],["ratio"]],["ratio"]]]],[11,"inv",E,E,0,[[],["ratio"]]],[11,"abs",E,E,0,[[["self"]],["ratio"]]],[11,R[79],E,E,0,[[["self"],["ratio"]],["ratio"]]],[11,R[82],E,E,0,[[["self"]],["ratio"]]],[11,R[209],E,E,0,[[["self"]],["bool"]]],[11,R[210],E,E,0,[[["self"]],["bool"]]],[11,R[204],E,E,1,[[["self"]],["str"]]]],"p":[[3,"Ratio"],[3,R[216]]]};
searchIndex["num_traits"]={"doc":"Numeric traits for generic mathematics","i":[[3,R[89],R[2],E,N,N],[12,"kind",E,E,0,N],[4,R[90],E,E,N,N],[13,"Empty",E,E,1,N],[13,"Invalid",E,E,1,N],[5,"clamp",E,R[360],N,[[[R[1]]],[R[1]]]],[5,R[487],E,R[488],N,[[[R[1]]],[R[1]]]],[5,R[489],E,R[490],N,[[[R[1]]],[R[1]]]],[0,"bounds",E,E,N,N],[8,"Bounded","num_traits::bounds",R[285],N,N],[10,R[5],E,R[286],2,[[],["self"]]],[10,R[6],E,R[287],2,[[],["self"]]],[0,"cast",R[2],E,N,N],[5,"cast","num_traits::cast",R[249],N,[[[R[3]]],[[R[4]],[R[3]]]]],[8,R[91],E,R[217],N,N],[11,R[289],E,R[218],3,[[["self"]],[["isize"],[R[4],["isize"]]]]],[11,"to_i8",E,R[219],3,[[["self"]],[[R[4],["i8"]],["i8"]]]],[11,"to_i16",E,R[220],3,[[["self"]],[["i16"],[R[4],["i16"]]]]],[11,"to_i32",E,R[221],3,[[["self"]],[["i32"],[R[4],["i32"]]]]],[10,"to_i64",E,R[222],3,[[["self"]],[["i64"],[R[4],["i64"]]]]],[11,R[370],E,R[223],3,[[["self"]],[[R[4],["i128"]],["i128"]]]],[11,R[290],E,R[224],3,[[["self"]],[[R[4],["usize"]],["usize"]]]],[11,"to_u8",E,R[225],3,[[["self"]],[[R[4],["u8"]],["u8"]]]],[11,"to_u16",E,R[226],3,[[["self"]],[["u16"],[R[4],["u16"]]]]],[11,"to_u32",E,R[227],3,[[["self"]],[["u32"],[R[4],["u32"]]]]],[10,"to_u64",E,R[228],3,[[["self"]],[[R[4],["u64"]],["u64"]]]],[11,R[369],E,R[229],3,[[["self"]],[["u128"],[R[4],["u128"]]]]],[11,"to_f32",E,R[230],3,[[["self"]],[["f32"],[R[4],["f32"]]]]],[11,"to_f64",E,R[231],3,[[["self"]],[[R[4],["f64"]],["f64"]]]],[8,R[92],E,R[232],N,N],[11,R[133],E,R[233],4,[[["isize"]],[R[4]]]],[11,R[491],E,R[234],4,[[["i8"]],[R[4]]]],[11,R[291],E,R[235],4,[[["i16"]],[R[4]]]],[11,R[292],E,R[236],4,[[["i32"]],[R[4]]]],[10,R[206],E,R[237],4,[[["i64"]],[R[4]]]],[11,R[134],E,R[238],4,[[["i128"]],[R[4]]]],[11,R[135],E,R[239],4,[[["usize"]],[R[4]]]],[11,R[492],E,R[240],4,[[["u8"]],[R[4]]]],[11,R[293],E,R[241],4,[[["u16"]],[R[4]]]],[11,R[294],E,R[242],4,[[["u32"]],[R[4]]]],[10,R[205],E,R[243],4,[[["u64"]],[R[4]]]],[11,R[136],E,R[244],4,[[["u128"]],[R[4]]]],[11,R[215],E,R[245],4,[[["f32"]],[R[4]]]],[11,R[207],E,R[246],4,[[["f64"]],[R[4]]]],[8,R[575],E,R[247],N,N],[10,"from",E,R[248],5,[[[R[137]]],[R[4]]]],[8,R[93],E,R[295],N,N],[10,"as_",E,R[296],6,[[],[T]]],[0,"float",R[2],E,N,N],[8,R[94],"num_traits::float",R[493],N,N],[10,R[7],E,R[494],7,[[],["self"]]],[10,R[8],E,R[495],7,[[],["self"]]],[10,"nan",E,R[496],7,[[],["self"]]],[10,R[9],E,R[10],7,[[],["self"]]],[10,R[5],E,R[11],7,[[],["self"]]],[10,R[12],E,R[13],7,[[],["self"]]],[10,R[47],E,R[14],7,[[],["self"]]],[10,R[6],E,R[15],7,[[],["self"]]],[11,"is_nan",E,R[497],7,[[],["bool"]]],[11,R[16],E,R[498],7,[[],["bool"]]],[11,R[17],E,R[499],7,[[],["bool"]]],[11,R[18],E,R[19],7,[[],["bool"]]],[10,R[20],E,R[21],7,[[],[R[22]]]],[11,"floor",E,R[23],7,[[],["self"]]],[11,"ceil",E,R[24],7,[[],["self"]]],[11,"round",E,R[25],7,[[],["self"]]],[11,"trunc",E,R[26],7,[[],["self"]]],[11,"fract",E,R[27],7,[[],["self"]]],[11,"abs",E,R[28],7,[[],["self"]]],[11,R[82],E,R[29],7,[[],["self"]]],[11,R[30],E,R[500],7,[[],["bool"]]],[11,R[31],E,R[501],7,[[],["bool"]]],[11,"min",E,R[36],7,[[],["self"]]],[11,"max",E,R[35],7,[[],["self"]]],[11,"recip",E,R[502],7,[[],["self"]]],[11,"powi",E,R[32],7,[[["i32"]],["self"]]],[10,R[33],E,R[503],7,[[],["self"]]],[10,R[34],E,R[504],7,[[],["self"]]],[10,R[37],E,R[38],7,[[]]],[8,"Float",E,R[297],N,N],[10,"nan",E,R[298],8,[[],["self"]]],[10,R[7],E,R[299],8,[[],["self"]]],[10,R[8],E,R[300],8,[[],["self"]]],[10,R[9],E,R[10],8,[[],["self"]]],[10,R[5],E,R[11],8,[[],["self"]]],[10,R[12],E,R[13],8,[[],["self"]]],[11,R[47],E,R[14],8,[[],["self"]]],[10,R[6],E,R[15],8,[[],["self"]]],[10,"is_nan",E,R[301],8,[[],["bool"]]],[10,R[16],E,R[302],8,[[],["bool"]]],[10,R[17],E,R[303],8,[[],["bool"]]],[10,R[18],E,R[19],8,[[],["bool"]]],[10,R[20],E,R[21],8,[[],[R[22]]]],[10,"floor",E,R[23],8,[[],["self"]]],[10,"ceil",E,R[24],8,[[],["self"]]],[10,"round",E,R[25],8,[[],["self"]]],[10,"trunc",E,R[26],8,[[],["self"]]],[10,"fract",E,R[27],8,[[],["self"]]],[10,"abs",E,R[28],8,[[],["self"]]],[10,R[82],E,R[29],8,[[],["self"]]],[10,R[30],E,R[48],8,[[],["bool"]]],[10,R[31],E,R[49],8,[[],["bool"]]],[10,R[43],E,R[42],8,[[],["self"]]],[10,"recip",E,R[50],8,[[],["self"]]],[10,"powi",E,R[32],8,[[["i32"]],["self"]]],[10,"powf",E,R[304],8,[[],["self"]]],[10,"sqrt",E,R[51],8,[[],["self"]]],[10,"exp",E,R[52],8,[[],["self"]]],[10,"exp2",E,R[53],8,[[],["self"]]],[10,"ln",E,R[54],8,[[],["self"]]],[10,"log",E,R[55],8,[[],["self"]]],[10,"log2",E,R[56],8,[[],["self"]]],[10,"log10",E,R[57],8,[[],["self"]]],[11,R[33],E,R[58],8,[[],["self"]]],[11,R[34],E,R[59],8,[[],["self"]]],[10,"max",E,R[35],8,[[],["self"]]],[10,"min",E,R[36],8,[[],["self"]]],[10,R[79],E,R[60],8,[[],["self"]]],[10,"cbrt",E,R[61],8,[[],["self"]]],[10,"hypot",E,R[62],8,[[],["self"]]],[10,"sin",E,R[63],8,[[],["self"]]],[10,"cos",E,R[64],8,[[],["self"]]],[10,"tan",E,R[65],8,[[],["self"]]],[10,"asin",E,R[66],8,[[],["self"]]],[10,"acos",E,R[67],8,[[],["self"]]],[10,"atan",E,R[68],8,[[],["self"]]],[10,"atan2",E,R[69],8,[[],["self"]]],[10,"sin_cos",E,R[70],8,[[]]],[10,"exp_m1",E,R[71],8,[[],["self"]]],[10,"ln_1p",E,R[72],8,[[],["self"]]],[10,"sinh",E,R[73],8,[[],["self"]]],[10,"cosh",E,R[74],8,[[],["self"]]],[10,"tanh",E,R[75],8,[[],["self"]]],[10,"asinh",E,R[76],8,[[],["self"]]],[10,"acosh",E,R[77],8,[[],["self"]]],[10,"atanh",E,R[78],8,[[],["self"]]],[10,R[37],E,R[38],8,[[]]],[8,R[95],E,E,N,N],[10,"E",E,R[505],9,[[],["self"]]],[10,R[506],E,R[507],9,[[],["self"]]],[10,R[508],E,R[509],9,[[],["self"]]],[10,R[510],E,R[511],9,[[],["self"]]],[10,R[512],E,R[513],9,[[],["self"]]],[10,R[514],E,R[515],9,[[],["self"]]],[10,R[516],E,R[517],9,[[],["self"]]],[10,R[518],E,R[519],9,[[],["self"]]],[10,R[520],E,R[521],9,[[],["self"]]],[10,R[522],E,R[523],9,[[],["self"]]],[10,"LN_10",E,R[524],9,[[],["self"]]],[10,"LN_2",E,R[525],9,[[],["self"]]],[10,"LOG10_E",E,R[526],9,[[],["self"]]],[10,"LOG2_E",E,R[527],9,[[],["self"]]],[10,"PI",E,R[528],9,[[],["self"]]],[10,"SQRT_2",E,R[529],9,[[],["self"]]],[0,R[530],R[2],E,N,N],[5,"zero","num_traits::identities",R[313],N,[[],["zero"]]],[5,"one",E,R[314],N,[[],["one"]]],[8,"Zero",E,R[305],N,N],[10,"zero",E,R[306],10,[[],["self"]]],[11,R[208],E,R[307],10,[[["self"]]]],[10,R[372],E,R[308],10,[[["self"]],["bool"]]],[8,"One",E,R[309],N,N],[10,"one",E,R[310],11,[[],["self"]]],[11,R[371],E,R[311],11,[[["self"]]]],[11,"is_one",E,R[312],11,[[["self"]],["bool"]]],[0,"int",R[2],E,N,N],[8,"PrimInt","num_traits::int",R[315],N,N],[10,R[316],E,R[317],12,[[],["u32"]]],[10,R[318],E,R[319],12,[[],["u32"]]],[10,R[320],E,R[321],12,[[],["u32"]]],[10,R[322],E,R[323],12,[[],["u32"]]],[10,R[324],E,R[39],12,[[["u32"]],["self"]]],[10,R[325],E,R[40],12,[[["u32"]],["self"]]],[10,R[326],E,R[39],12,[[["u32"]],["self"]]],[10,R[327],E,R[40],12,[[["u32"]],["self"]]],[10,R[328],E,R[39],12,[[["u32"]],["self"]]],[10,R[329],E,R[40],12,[[["u32"]],["self"]]],[10,R[330],E,R[331],12,[[],["self"]]],[10,"from_be",E,R[332],12,[[],["self"]]],[10,"from_le",E,R[333],12,[[],["self"]]],[10,"to_be",E,R[334],12,[[],["self"]]],[10,"to_le",E,R[335],12,[[],["self"]]],[10,"pow",E,R[336],12,[[["u32"]],["self"]]],[0,"ops",R[2],E,N,N],[0,"checked",R[41],E,N,N],[8,R[96],"num_traits::ops::checked",R[337],N,N],[10,R[198],E,R[338],13,[[["self"]],[R[4]]]],[8,R[97],E,R[339],N,N],[10,R[197],E,R[340],14,[[["self"]],[R[4]]]],[8,R[98],E,R[341],N,N],[10,R[199],E,R[342],15,[[["self"]],[R[4]]]],[8,R[99],E,R[343],N,N],[10,R[200],E,R[344],16,[[["self"]],[R[4]]]],[8,R[100],E,R[531],N,N],[10,R[532],E,R[533],17,[[["self"]],[R[4]]]],[8,R[101],E,R[534],N,N],[10,R[535],E,R[536],18,[[["self"]],[R[4]]]],[8,R[102],E,R[537],N,N],[10,R[538],E,R[539],19,[[["self"],["u32"]],[R[4]]]],[8,R[103],E,R[540],N,N],[10,R[541],E,R[542],20,[[["self"],["u32"]],[R[4]]]],[0,"inv",R[41],E,N,N],[8,"Inv","num_traits::ops::inv",R[543],N,N],[16,"Output",E,R[46],21,N],[10,"inv",E,R[544],21,[[]]],[0,R[43],R[41],E,N,N],[8,"MulAdd","num_traits::ops::mul_add",R[42],N,N],[16,"Output",E,R[545],22,N],[10,R[43],E,R[44],22,[[["a"],["b"]]]],[8,R[104],E,R[546],N,N],[10,R[130],E,R[44],23,[[["self"],["a"],["b"]]]],[0,R[547],R[41],E,N,N],[8,R[105],"num_traits::ops::saturating",R[346],N,N],[10,R[347],E,R[348],24,[[],["self"]]],[10,R[349],E,R[350],24,[[],["self"]]],[0,"wrapping",R[41],E,N,N],[8,R[106],"num_traits::ops::wrapping",R[548],N,N],[10,R[549],E,R[550],25,[[["self"]],["self"]]],[8,R[107],E,R[551],N,N],[10,R[552],E,R[553],26,[[["self"]],["self"]]],[8,R[108],E,R[554],N,N],[10,R[555],E,R[556],27,[[["self"]],["self"]]],[8,R[109],E,R[557],N,N],[10,R[558],E,R[559],28,[[["self"],["u32"]],["self"]]],[8,R[110],E,R[560],N,N],[10,R[561],E,R[562],29,[[["self"],["u32"]],["self"]]],[0,"pow",R[2],E,N,N],[5,"pow","num_traits::pow",R[250],N,[[["usize"],["clone"],["one"],["mul"]],[["one"],["clone"],["mul"]]]],[5,R[251],E,R[252],N,[[[R[45]],["clone"],["one"],["usize"]],[[R[4]],[R[45]],["one"],["clone"]]]],[8,"Pow",E,R[351],N,N],[16,"Output",E,R[46],30,N],[10,"pow",E,R[352],30,[[["rhs"]]]],[0,"real",R[2],E,N,N],[8,"Real","num_traits::real",R[563],N,N],[10,R[5],E,R[11],31,[[],["self"]]],[10,R[12],E,R[13],31,[[],["self"]]],[10,R[47],E,R[14],31,[[],["self"]]],[10,R[6],E,R[15],31,[[],["self"]]],[10,"floor",E,R[23],31,[[],["self"]]],[10,"ceil",E,R[24],31,[[],["self"]]],[10,"round",E,R[25],31,[[],["self"]]],[10,"trunc",E,R[26],31,[[],["self"]]],[10,"fract",E,R[27],31,[[],["self"]]],[10,"abs",E,R[28],31,[[],["self"]]],[10,R[82],E,R[29],31,[[],["self"]]],[10,R[30],E,R[48],31,[[],["bool"]]],[10,R[31],E,R[49],31,[[],["bool"]]],[10,R[43],E,R[42],31,[[],["self"]]],[10,"recip",E,R[50],31,[[],["self"]]],[10,"powi",E,R[32],31,[[["i32"]],["self"]]],[10,"powf",E,R[564],31,[[],["self"]]],[10,"sqrt",E,R[51],31,[[],["self"]]],[10,"exp",E,R[52],31,[[],["self"]]],[10,"exp2",E,R[53],31,[[],["self"]]],[10,"ln",E,R[54],31,[[],["self"]]],[10,"log",E,R[55],31,[[],["self"]]],[10,"log2",E,R[56],31,[[],["self"]]],[10,"log10",E,R[57],31,[[],["self"]]],[10,R[33],E,R[58],31,[[],["self"]]],[10,R[34],E,R[59],31,[[],["self"]]],[10,"max",E,R[35],31,[[],["self"]]],[10,"min",E,R[36],31,[[],["self"]]],[10,R[79],E,R[60],31,[[],["self"]]],[10,"cbrt",E,R[61],31,[[],["self"]]],[10,"hypot",E,R[62],31,[[],["self"]]],[10,"sin",E,R[63],31,[[],["self"]]],[10,"cos",E,R[64],31,[[],["self"]]],[10,"tan",E,R[65],31,[[],["self"]]],[10,"asin",E,R[66],31,[[],["self"]]],[10,"acos",E,R[67],31,[[],["self"]]],[10,"atan",E,R[68],31,[[],["self"]]],[10,"atan2",E,R[69],31,[[],["self"]]],[10,"sin_cos",E,R[70],31,[[]]],[10,"exp_m1",E,R[71],31,[[],["self"]]],[10,"ln_1p",E,R[72],31,[[],["self"]]],[10,"sinh",E,R[73],31,[[],["self"]]],[10,"cosh",E,R[74],31,[[],["self"]]],[10,"tanh",E,R[75],31,[[],["self"]]],[10,"asinh",E,R[76],31,[[],["self"]]],[10,"acosh",E,R[77],31,[[],["self"]]],[10,"atanh",E,R[78],31,[[],["self"]]],[0,"sign",R[2],E,N,N],[5,"abs","num_traits::sign",R[81],N,[[[R[80]]],[R[80]]]],[5,R[79],E,R[60],N,[[[R[80]]],[R[80]]]],[5,R[82],E,R[83],N,[[[R[80]]],[R[80]]]],[8,"Signed",E,R[353],N,N],[10,"abs",E,R[81],32,[[["self"]],["self"]]],[10,R[79],E,R[60],32,[[["self"]],["self"]]],[10,R[82],E,R[83],32,[[["self"]],["self"]]],[10,R[209],E,R[354],32,[[["self"]],["bool"]]],[10,R[210],E,R[355],32,[[["self"]],["bool"]]],[8,R[565],E,R[356],N,N],[8,"Num",R[2],R[357],N,N],[16,R[358],E,E,33,N],[10,R[138],E,R[359],33,[[["u32"],["str"]],[R[86]]]],[8,"NumOps",E,R[566],N,N],[8,"NumRef",E,R[567],N,N],[8,"RefNum",E,R[568],N,N],[8,R[569],E,R[570],N,N],[8,R[571],E,R[572],N,N],[8,R[573],E,R[574],N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[84],E,E,0,[[[U]],[R[86]]]],[11,"into",E,E,0,[[],[U]]],[11,R[85],E,E,0,[[],[R[86]]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[87],E,E,0,[[["self"]],[T]]],[11,R[139],E,E,0,[[["self"]],["typeid"]]],[11,R[121],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[84],E,E,1,[[[U]],[R[86]]]],[11,"into",E,E,1,[[],[U]]],[11,R[85],E,E,1,[[],[R[86]]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[87],E,E,1,[[["self"]],[T]]],[11,R[139],E,E,1,[[["self"]],["typeid"]]],[11,"fmt",E,E,1,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,0,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,0,[[["self"],[R[88]]],[R[86]]]]],"p":[[3,R[89]],[4,R[90]],[8,"Bounded"],[8,R[91]],[8,R[92]],[8,R[575]],[8,R[93]],[8,R[94]],[8,"Float"],[8,R[95]],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,R[96]],[8,R[97]],[8,R[98]],[8,R[99]],[8,R[100]],[8,R[101]],[8,R[102]],[8,R[103]],[8,"Inv"],[8,"MulAdd"],[8,R[104]],[8,R[105]],[8,R[106]],[8,R[107]],[8,R[108]],[8,R[109]],[8,R[110]],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]};
searchIndex["tfs"]={"doc":"Introduction","i":[[0,"dataframe","tfs",E,N,N],[4,"Indexer",R[577],"Helps deciding if we access by key (a valid String index…",N,N],[13,"Index",E,E,0,N],[13,"Key",E,E,0,N],[4,R[581],E,E,N,N],[13,"Text",E,E,1,N],[13,"Real",E,E,1,N],[4,"DataView",E,E,N,N],[13,"Text",E,E,2,N],[13,"Real",E,E,2,N],[4,R[582],E,"The columns of a data frame are stored in `DataVector`s.",N,N],[13,"TextVector",E,E,3,N],[13,"RealVector",E,E,3,N],[8,R[583],E,"The necessary functions to implement for any DataFrame…",N,N],[10,"col",E,"Returns a reference to the column `column`.",4,[[["self"],["str"]],[R[580]]]],[10,"loc",E,"Returns a DataView to the cell at column `column` and…",4,[[["self"],["key"],["str"]],["dataview"]]],[11,"loc_real",E,"Convenience function for accessing a real number cell.…",4,[[["self"],["key"],["str"]],["f64"]]],[11,"loc_text",E,"Convenience function for accessing a text cell. Will panic…",4,[[["self"],["key"],["str"]],["string"]]],[11,"col_real",E,E,4,[[["self"],["str"]],["vec"]]],[11,"col_text",E,E,4,[[["self"],["str"]],["vec"]]],[0,"join","tfs",E,N,N],[0,"numerical",E,E,N,N],[3,R[585],R[578],"A convenience struct for storing numerical data Todo:…",N,N],[8,"IsNumeric",E,E,N,N],[0,R[576],"tfs",E,N,N],[3,R[584],R[579],"The main struct of the crate. `TfsDataFrame` contains all…",N,N],[11,"open_expect",E,"Opens a tfs file and stores the conten in a TfsDataFrame.…",5,[[["p"]],[R[576]]]],[11,"open",E,"Opens a tfs file and stores the content in a TfsDataFrame.",5,[[["p"]],[["error"],[R[86],[R[576],"error"]],[R[576]]]]],[11,"set_index",E,"Sets the index to the specified column. The column has to…",5,[[["self"],["str"]],["self"]]],[11,"len",E,E,5,[[["self"]],["usize"]]],[11,"propd",E,"Returns the property `key` from the header if it is a data…",5,[[["self"],["str"]],["f64"]]],[11,"props",E,"Returns the property `key` from the header if it is a…",5,[[["self"],["str"]],["string"]]],[11,"into",R[577],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[84],E,E,0,[[[U]],[R[86]]]],[11,R[85],E,E,0,[[],[R[86]]]],[11,R[87],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[139],E,E,0,[[["self"]],["typeid"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[84],E,E,1,[[[U]],[R[86]]]],[11,R[85],E,E,1,[[],[R[86]]]],[11,R[87],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[139],E,E,1,[[["self"]],["typeid"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[121],E,E,2,[[["self"]],["string"]]],[11,R[84],E,E,2,[[[U]],[R[86]]]],[11,R[85],E,E,2,[[],[R[86]]]],[11,R[87],E,E,2,[[["self"]],[T]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[139],E,E,2,[[["self"]],["typeid"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[84],E,E,3,[[[U]],[R[86]]]],[11,R[85],E,E,3,[[],[R[86]]]],[11,R[87],E,E,3,[[["self"]],[T]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[139],E,E,3,[[["self"]],["typeid"]]],[11,"into",R[578],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[84],E,E,6,[[[U]],[R[86]]]],[11,R[85],E,E,6,[[],[R[86]]]],[11,R[87],E,E,6,[[["self"]],[T]]],[11,"borrow",E,E,6,[[["self"]],[T]]],[11,R[139],E,E,6,[[["self"]],["typeid"]]],[11,"into",R[579],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[84],E,E,5,[[[U]],[R[86]]]],[11,R[85],E,E,5,[[],[R[86]]]],[11,R[87],E,E,5,[[["self"]],[T]]],[11,"borrow",E,E,5,[[["self"]],[T]]],[11,R[139],E,E,5,[[["self"]],["typeid"]]],[11,"col",E,E,5,[[["self"],["str"]],[R[580]]]],[11,"loc",E,E,5,[[["self"],["key"],["str"]],["dataview"]]],[11,"into",R[577],E,1,[[],["string"]]],[11,"into",E,E,1,[[],["f64"]]],[11,"into",E,E,2,[[],["string"]]],[11,"into",E,E,2,[[],["f64"]]],[11,"eq",E,E,3,[[["self"],[R[580]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[580]]],["bool"]]],[11,"from",E,E,0,[[["str"]],["self"]]],[11,"from",E,E,0,[[["string"]],["self"]]],[11,"from",E,E,0,[[["usize"]],["self"]]],[11,"from",E,E,0,[[["i32"]],["self"]]],[11,"from",E,E,0,[[["u32"]],["self"]]],[11,"from",R[578],E,6,[[["vec"]],["self"]]],[11,"fmt",R[577],E,2,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,3,[[["self"],[R[88]]],[R[86]]]],[11,"fmt",E,E,2,[[["self"],[R[88]]],[R[86]]]]],"p":[[4,"Indexer"],[4,R[581]],[4,"DataView"],[4,R[582]],[8,R[583]],[3,R[584]],[3,R[585]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);